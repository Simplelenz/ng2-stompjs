var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.366,1,2.06]],["body/modules/AppModule.html",[0,1.736,1,3.178,2,1.532,3,1.354,4,0.805,5,3.824,6,1.563,7,0.049,8,4.643,9,3.824,10,3.096,11,4.643,12,1.974,13,3.824,14,2.617,15,3.824,16,1.354,17,0.594,18,0.04,19,0.04]],["title/classes/MyStompRService.html",[17,0.467,20,1.778]],["body/classes/MyStompRService.html",[2,0.937,3,0.828,4,0.492,6,1.048,7,0.049,16,1.603,17,0.608,18,0.029,19,0.029,20,1.98,21,1.382,22,2.681,23,1.387,24,0.644,25,2.337,26,2.208,27,3.666,28,1.062,29,2.339,30,2.783,31,2.314,32,2.022,33,3.171,34,3.171,35,3.171,36,1.514,37,3.171,38,0.705,39,1.337,40,1.778,41,1.207,42,1.387,43,1.73,44,0.731,45,2.714,46,2.022,47,1.382,48,1.98,49,1.73,50,1.382,51,0.937,52,1.894,53,1.894,54,1.382,55,1.894,56,1.207,57,1.048,58,2.208,59,1.207,60,1.73,61,1.73,62,1.207,63,1.98,64,1.207,65,1.207,66,1.73,67,1.73,68,2.055,69,2.022,70,1.207,71,1.225,72,1.207,73,1.207,74,1.062,75,1.522,76,1.207,77,1.207,78,1.207,79,1.207,80,1.207,81,1.207,82,0.937,83,1.207,84,1.894,85,1.382,86,1.382,87,1.382,88,1.207,89,1.207,90,1.382,91,1.382,92,1.601,93,1.894,94,2.714,95,1.601,96,1.894]],["title/classes/MyStompService.html",[17,0.467,90,1.778]],["body/classes/MyStompService.html",[2,0.912,3,0.806,4,0.479,6,1.028,7,0.049,16,1.586,17,0.599,18,0.028,19,0.028,20,1.345,21,1.345,22,2.64,23,1.164,24,0.627,25,2.312,26,2.18,27,3.627,28,1.492,30,2.758,31,2.279,32,1.991,33,3.123,34,3.123,35,3.123,36,1.496,37,3.123,38,0.812,39,1.459,40,1.751,41,1.175,42,1.366,43,1.696,44,0.712,45,2.661,46,1.991,47,1.345,48,1.942,49,1.696,50,1.345,51,0.912,52,1.843,53,1.843,54,1.345,55,1.843,56,1.175,57,1.028,58,2.18,59,1.175,60,1.696,61,1.696,62,1.175,63,1.942,64,1.175,65,1.175,66,1.696,67,1.696,68,2.033,69,1.991,70,1.175,71,1.206,72,1.175,73,1.175,74,1.033,75,1.492,76,1.175,77,1.175,78,1.175,79,1.175,80,1.175,81,1.175,82,0.912,83,1.175,84,1.843,85,1.345,86,1.345,87,1.345,88,1.175,89,1.175,90,1.942,91,1.345,92,2.249,93,1.843,94,2.661,95,1.558,96,1.843,97,1.175,98,2.276,99,2.276,100,0.912,101,0.806,102,0.712,103,1.033,104,2.276]],["title/injectables/StompConfig.html",[39,0.941,105,0.547]],["body/injectables/StompConfig.html",[2,0.734,3,0.648,4,0.385,6,0.874,7,0.049,12,0.945,16,0.648,17,0.284,18,0.024,19,0.024,24,0.504,28,1.956,32,1.443,36,1.344,38,0.589,39,0.874,40,1.269,41,1.443,42,0.99,46,2.224,47,1.652,49,1.443,50,1.652,51,1.12,57,1.402,58,2.495,59,1.443,60,1.443,61,1.443,62,1.443,64,1.959,65,1.959,66,2.224,67,2.224,68,2.098,69,2.386,70,1.959,71,1.347,72,1.959,73,1.443,74,1.269,75,1.723,76,1.443,77,1.443,78,1.443,79,1.443,80,1.443,81,1.443,82,1.12,83,1.959,88,2.224,100,1.12,102,1.347,105,0.617,106,1.483,107,1.082,108,2.796,109,1.652,110,2.598,111,1.723,112,3.392,113,1.831,114,2.264,115,1.959,116,1.831,117,2.035,118,2.796,119,2.796,120,1.443,121,2.796,122,2.598,123,3.242,124,1.831,125,2.796,126,1.831,127,2.796,128,1.831,129,1.831,130,1.443,131,2.264,132,1.54,133,1.652,134,1.12,135,1.652,136,1.521,137,2.264,138,1.443,139,1.914,140,1.914,141,2.796,142,2.796,143,1.914,144,1.914]],["title/injectables/StompRPCConfig.html",[105,0.547,145,1.778]],["body/injectables/StompRPCConfig.html",[2,1.201,3,1.061,4,0.631,6,1.487,7,0.049,12,1.547,16,1.408,17,0.465,18,0.034,19,0.034,23,1.408,24,0.826,28,1.806,38,0.631,44,1.396,47,2.35,101,1.408,102,1.396,103,2.158,105,0.812,107,1.771,117,2.158,132,1.361,136,1.788,139,2.722,145,2.35,146,2.304,147,2.052,148,2.053,149,2.35,150,3.055,151,4.006,152,3.85,153,2.997,154,3.254,155,2.809,156,3.254,157,2.997,158,2.35,159,2.052,160,1.547,161,1.547,162,2.052]],["title/injectables/StompRPCService.html",[105,0.547,163,1.778]],["body/injectables/StompRPCService.html",[2,0.72,3,0.636,4,0.378,6,1.392,7,0.049,12,0.927,16,0.636,17,0.279,18,0.024,19,0.024,23,1.33,24,0.495,25,1.422,26,2.207,28,1.521,36,1.576,38,0.58,44,1.436,57,1.392,71,0.561,91,1.061,97,0.927,100,1.343,101,1.186,102,1.048,103,1.521,105,0.609,107,1.061,115,2.298,117,2.252,130,1.422,132,1.25,135,2.22,136,1.104,138,0.927,144,1.885,145,2.714,146,1.939,148,2.431,150,2.572,154,1.885,156,1.885,158,2.527,159,1.229,160,2.207,161,0.927,162,1.229,163,1.628,164,1.454,165,1.885,166,1.25,167,0.975,168,2.572,169,1.796,170,1.796,171,1.885,172,2.754,173,2.754,174,4.593,175,1.796,176,2.22,177,2.774,178,2.754,179,2.754,180,1.796,181,1.885,182,0.927,183,2.23,184,1.454,185,1.796,186,1.796,187,1.796,188,3.757,189,3.757,190,2.572,191,2.572,192,3.757,193,3.757,194,1.796,195,1.454,196,1.796,197,1.796,198,1.796,199,1.796,200,2.754,201,2.754,202,2.754,203,1.796,204,1.796,205,1.229,206,1.796,207,1.796,208,2.754,209,1.796,210,1.796,211,1.796,212,1.796,213,2.754,214,1.061,215,2.713,216,1.796,217,1.796,218,1.454,219,2.23,220,1.796,221,1.796,222,1.229,223,1.796,224,1.796,225,1.796,226,1.796,227,1.796]],["title/injectables/StompService.html",[38,0.634,105,0.547]],["body/injectables/StompService.html",[2,1.15,3,1.016,4,0.604,6,1.366,7,0.049,12,1.481,16,1.016,17,0.445,18,0.033,19,0.033,22,1.964,23,1.546,26,1.994,28,1.303,36,1.016,38,0.813,39,1.461,44,1.208,71,1.208,97,2.254,100,1.15,101,1.016,102,0.897,103,1.303,105,0.794,107,2.283,109,2.581,130,1.481,132,2.121,136,1.75,149,2.283,155,1.696,158,2.283,160,1.994,162,1.964,166,2.121,167,1.654,168,1.964,182,1.994,228,2.324,229,3.863,230,3.863,231,2.87,232,3.863,233,1.994,234,2.87,235,2.87,236,1.696,237,2.87,238,1.964,239,2.87,240,2.87,241,1.964,242,2.87,243,2.87,244,2.87,245,1.964,246,1.481,247,2.87,248,2.87,249,2.87]],["title/changelog.html",[250,1.762,251,1.762,252,1.762]],["body/changelog.html",[3,0.899,4,0.534,7,0.038,18,0.03,19,0.03,38,0.534,39,0.794,40,1.153,51,1.017,56,1.833,57,1.281,71,0.794,74,1.153,82,1.423,102,1.11,105,0.462,109,2.099,111,1.612,114,2.056,115,1.31,117,1.153,120,1.31,123,2.804,131,2.056,134,1.641,148,1.31,161,1.31,166,1.153,167,1.258,176,1.5,233,1.31,236,1.5,246,2.114,252,1.738,253,2.539,254,2.876,255,2.539,256,2.539,257,2.621,258,2.539,259,2.539,260,2.539,261,2.539,262,2.056,263,1.738,264,2.539,265,3.037,266,2.056,267,3.317,268,2.056,269,3.551,270,2.056,271,2.056,272,2.539,273,3.781,274,2.876,275,1.86,276,2.539,277,2.539,278,2.876,279,3.551,280,2.539,281,2.539,282,2.431,283,2.056,284,2.876,285,3.592,286,2.056,287,1.738,288,2.539,289,2.876,290,3.551,291,1.738,292,2.056,293,2.539,294,2.539,295,2.539,296,2.539,297,2.539,298,2.539,299,2.539,300,2.056,301,1.738,302,2.539,303,2.539,304,2.056,305,1.738,306,2.539,307,2.431,308,1.738,309,2.431,310,1.738,311,2.539,312,2.539,313,1.5,314,2.056,315,1.738,316,2.539,317,2.539,318,2.539,319,2.539,320,2.056,321,1.5,322,2.539,323,2.056,324,2.539,325,2.056,326,2.539,327,2.056,328,2.876,329,2.539,330,2.056,331,2.539,332,2.539,333,2.539,334,2.539,335,2.056,336,2.539,337,2.539,338,2.539,339,2.056,340,1.31,341,2.539,342,2.056,343,2.539,344,2.539,345,1.738,346,2.056]],["title/coverage.html",[347,3.229]],["body/coverage.html",[4,0.644,7,0.048,17,0.626,18,0.035,19,0.035,20,1.809,21,2.944,23,1.084,38,0.644,39,0.957,42,1.811,43,1.58,48,1.809,49,1.58,68,2.403,90,1.809,102,0.957,105,0.906,106,2.478,134,1.226,145,1.809,146,2.328,147,2.095,163,1.809,164,2.478,228,2.478,347,2.478,348,3.061,349,3.061,350,2.478,351,2.76,352,3.265,353,5.293,354,2.478,355,3.652,356,2.478,357,2.478,358,2.478,359,3.061,360,3.061,361,3.061,362,3.061,363,2.478,364,3.061,365,4.981,366,3.061,367,3.061,368,3.061,369,3.061,370,3.061,371,3.061,372,3.061]],["title/dependencies.html",[275,1.628,373,2.575]],["body/dependencies.html",[7,0.046,18,0.042,19,0.042,161,2.198,181,2.915,182,2.198,275,1.933,374,3.448,375,4.258,376,4.258]],["title/miscellaneous/enumerations.html",[377,0.912,378,2.904]],["body/miscellaneous/enumerations.html",[7,0.042,18,0.042,19,0.042,24,1.135,30,2.434,111,1.87,132,1.87,146,2.126,166,1.87,263,2.82,313,2.434,377,1.459,378,3.336,379,4.854,380,3.336,381,4.854,382,4.119,383,3.336]],["title/miscellaneous/functions.html",[42,1.27,377,0.912]],["body/miscellaneous/functions.html",[7,0.047,18,0.038,19,0.038,21,2.057,24,0.959,38,1.009,42,1.233,43,2.475,48,2.833,92,2.383,95,2.383,100,2.016,101,1.782,103,2.284,355,2.82,356,3.548,357,3.548,358,3.548,363,3.548,377,1.233,384,4.794,385,4.794,386,5.032,387,3.482,388,5.293,389,3.482,390,3.482]],["title/index.html",[24,0.709,250,1.762,251,1.762]],["body/index.html",[4,0.592,6,0.749,7,0.046,14,2.61,17,0.437,18,0.016,19,0.016,23,0.997,25,0.953,26,0.565,30,0.647,31,1.091,32,0.953,36,0.654,38,0.803,39,1.192,40,1.088,44,1.283,46,0.565,51,0.439,56,0.565,57,0.88,58,1.76,59,0.565,60,0.953,61,0.953,62,0.565,63,1.091,64,0.565,65,0.565,66,0.953,67,1.453,68,1.278,69,1.237,70,0.565,71,1.192,72,0.565,73,0.953,74,0.497,75,0.839,76,0.565,77,0.953,78,0.565,79,0.565,80,0.565,81,0.953,82,0.439,83,0.565,85,0.647,86,0.647,87,0.647,88,0.565,89,0.565,91,1.091,97,0.565,101,0.654,105,0.512,109,2.253,111,1.731,115,0.953,117,1.731,120,0.565,122,1.264,123,1.64,130,0.953,132,1.802,133,1.663,134,1.128,135,1.663,136,0.74,137,0.886,138,0.565,140,1.64,149,1.416,155,1.858,158,1.416,159,0.749,160,1.873,161,1.237,166,0.839,167,1.453,176,0.647,177,0.749,182,0.953,183,0.886,184,0.886,214,1.091,222,0.749,233,2.049,236,1.858,238,1.264,241,1.64,245,1.264,246,1.453,252,0.749,254,0.886,257,1.663,262,0.886,263,0.749,265,2.96,266,2.279,267,2.279,268,0.886,270,1.94,271,1.496,273,1.496,275,1.278,278,0.886,282,1.264,283,0.886,284,0.886,285,0.886,287,0.749,291,2.61,292,3.087,301,1.264,304,1.496,305,1.264,307,2.96,308,1.926,309,3.022,310,0.749,313,1.416,314,1.496,315,0.749,321,0.647,325,2.279,328,0.886,335,0.886,340,0.565,342,0.886,345,1.264,346,1.94,374,1.496,383,1.496,391,2.396,392,2.396,393,1.095,394,1.095,395,1.095,396,1.095,397,0.886,398,1.847,399,1.095,400,1.496,401,2.396,402,1.095,403,1.095,404,1.095,405,1.095,406,1.095,407,1.095,408,1.095,409,1.095,410,1.926,411,1.095,412,1.847,413,1.095,414,1.847,415,1.095,416,0.886,417,1.095,418,1.847,419,1.847,420,1.095,421,1.095,422,1.847,423,1.095,424,1.095,425,0.886,426,1.095,427,1.095,428,1.095,429,1.095,430,1.095,431,1.095,432,1.095,433,1.095,434,1.847,435,1.496,436,1.095,437,1.095,438,1.095,439,1.264,440,1.095,441,0.886,442,1.926,443,1.095,444,1.496,445,1.095,446,1.095,447,1.095,448,1.847,449,0.749,450,1.095,451,1.095,452,1.095,453,3.969,454,1.095,455,1.095,456,1.095,457,2.396,458,1.847,459,2.484,460,1.095,461,1.496,462,1.095,463,1.095,464,1.095,465,1.095,466,2.484,467,2.152,468,1.847,469,1.095,470,1.095,471,1.095,472,1.095,473,1.095,474,1.095,475,1.095,476,1.095,477,1.095,478,1.095,479,2.396,480,1.095,481,1.095,482,1.095,483,0.886,484,0.749,485,0.886,486,1.095,487,1.095,488,0.886,489,1.095,490,1.095,491,1.095,492,1.095,493,1.847,494,1.095,495,1.095,496,1.095,497,1.095,498,1.095,499,1.095,500,1.095,501,1.095,502,1.095,503,1.095,504,1.095,505,1.095,506,1.847,507,1.095,508,1.847,509,1.095,510,0.886,511,1.095,512,1.095,513,1.095,514,1.095,515,0.886,516,1.095,517,1.496,518,0.886,519,1.095,520,1.095,521,1.095,522,1.095,523,0.886,524,1.095,525,1.847,526,1.095,527,1.847,528,2.814,529,1.847,530,1.095,531,1.095,532,1.847,533,1.095,534,1.095,535,1.095,536,1.095,537,1.095,538,1.095,539,1.095,540,1.095,541,1.095,542,0.749,543,1.095,544,1.847,545,1.095,546,0.886,547,1.095,548,0.953,549,0.886,550,1.095,551,1.095,552,1.095,553,1.095,554,1.095,555,1.095,556,1.095,557,0.886,558,1.847,559,1.095,560,1.095,561,1.095,562,1.095,563,0.886,564,1.095,565,1.095,566,1.095,567,1.095,568,1.095,569,1.095,570,1.095,571,0.886,572,0.886,573,1.095,574,1.095,575,1.095,576,1.095,577,1.095,578,0.886,579,0.749,580,0.886]],["title/license.html",[250,1.762,251,1.762,579,1.762]],["body/license.html",[4,0.662,7,0.035,14,2.154,18,0.035,19,0.035,54,1.859,111,1.428,134,1.261,167,1.454,320,2.548,327,2.548,345,2.154,410,2.154,483,2.548,484,3.316,485,2.548,571,2.548,572,2.548,579,2.154,580,2.548,581,4.571,582,3.146,583,3.146,584,4.106,585,3.146,586,3.146,587,3.146,588,4.106,589,3.146,590,5.383,591,3.146,592,4.106,593,4.571,594,3.146,595,4.571,596,3.325,597,3.146,598,3.146,599,3.146,600,3.146,601,3.146,602,3.146,603,3.146,604,3.146,605,4.106,606,4.106,607,3.146,608,3.146,609,4.106,610,3.146,611,3.146,612,3.146,613,3.146,614,3.146,615,3.146,616,3.146,617,3.146,618,3.146,619,3.146,620,3.146,621,3.146,622,3.146,623,3.146,624,3.146,625,3.146,626,3.146,627,3.146,628,3.146,629,3.146,630,3.146,631,2.548]],["title/modules.html",[0,1.81]],["body/modules.html",[0,1.983,1,2.99,7,0.043,18,0.043,19,0.043,632,4.368]],["title/overview.html",[633,3.229]],["body/overview.html",[0,1.95,7,0.043,17,0.667,18,0.043,19,0.043,82,1.721,105,0.781,633,3.477,634,4.294,635,4.294]],["title/miscellaneous/typealiases.html",[377,0.912,636,3.586]],["body/miscellaneous/typealiases.html",[7,0.041,18,0.041,19,0.041,24,1.09,42,1.402,44,1.238,57,1.238,102,1.587,115,2.62,136,1.586,146,2.447,147,3.245,150,2.709,156,3.474,377,1.402,380,3.839,637,3.958,638,4.741,639,3.958,640,3.958]],["title/miscellaneous/variables.html",[351,2.455,377,0.912]],["body/miscellaneous/variables.html",[7,0.048,18,0.04,19,0.04,24,1.057,71,1.455,89,1.981,102,1.455,110,3.564,138,2.402,350,3.108,351,2.627,352,4.39,354,3.108,377,1.359,641,3.838,642,3.838,643,4.653,644,3.838]],["title/additional-documentation/sock-js.html",[300,1.822,340,1.161,548,1.161,645,2.25]],["body/additional-documentation/sock-js.html",[6,0.69,7,0.047,10,1.787,16,0.781,17,0.343,18,0.028,19,0.028,31,1.304,32,2.149,36,1.138,39,1.302,40,2.428,41,1.659,42,1.474,43,2.149,44,0.69,46,2.149,49,1.139,50,1.304,51,0.884,56,1.659,57,1.005,58,2.284,59,1.139,60,1.659,61,1.659,62,1.139,63,1.899,64,1.139,65,1.139,66,1.659,67,1.659,68,1.89,69,1.956,70,1.139,71,1.185,72,1.139,73,1.659,74,1.002,75,1.459,76,1.139,77,1.139,78,1.139,79,1.659,80,1.659,81,1.659,82,0.884,83,1.139,85,1.304,86,1.304,87,1.304,88,1.139,89,1.139,100,0.884,101,0.781,110,1.51,111,1.002,120,1.659,130,1.659,133,1.304,136,0.884,138,1.139,143,1.51,144,1.51,165,1.51,167,1.567,171,1.51,205,2.199,214,1.304,233,1.139,238,2.849,246,1.139,257,2.614,282,1.51,286,1.787,287,1.51,291,2.199,301,2.199,305,1.51,307,1.51,308,1.51,309,1.51,310,1.51,313,1.304,321,1.304,330,1.787,416,1.787,439,1.51,442,2.199,449,2.199,461,1.787,466,2.199,467,2.199,484,1.51,518,1.787,523,2.602,542,1.51,557,1.787,596,2.602,646,2.207,647,2.207,648,1.51,649,2.207,650,2.207,651,2.207,652,2.207,653,3.213,654,3.213,655,3.213,656,2.207,657,2.207,658,2.207,659,1.787,660,2.207,661,2.207,662,2.207,663,2.207,664,2.207,665,2.207,666,1.787,667,1.787,668,1.787,669,2.207,670,3.213,671,3.213,672,2.207,673,1.787,674,2.207,675,3.213,676,2.207,677,2.207]],["title/additional-documentation/rpc---remote-procedure-call.html",[148,0.927,190,1.229,191,1.229,340,0.927,459,1.229,548,0.927]],["body/additional-documentation/rpc---remote-procedure-call.html",[0,0.893,7,0.047,17,0.305,18,0.025,19,0.03,23,1.254,25,1.015,36,0.696,38,0.621,41,2.032,44,0.615,51,1.182,54,1.162,57,0.923,75,0.893,97,1.015,100,0.788,101,1.045,103,0.893,105,0.358,117,0.893,120,1.523,122,2.424,133,2.326,134,0.788,135,1.162,139,1.346,143,2.02,148,1.523,149,1.162,151,2.39,152,1.592,154,2.424,155,2.492,160,2.286,163,1.744,165,2.02,166,0.893,167,1.493,168,2.02,171,2.424,176,1.162,177,2.887,181,1.346,182,1.015,190,1.346,191,1.346,195,2.39,205,2.02,214,2.792,215,2.39,218,1.592,219,3.415,222,1.346,233,1.015,236,1.162,241,1.346,245,1.346,246,1.015,257,1.162,265,2.02,274,2.39,275,1.787,289,2.39,315,2.02,397,1.592,400,2.39,410,1.346,425,1.592,439,2.694,441,2.39,449,1.346,459,2.02,466,2.887,467,1.346,488,1.592,510,1.592,515,1.592,517,1.592,542,1.346,546,1.592,548,1.523,549,1.592,563,1.592,578,1.592,648,1.346,659,1.592,666,1.592,667,2.39,668,1.592,678,1.967,679,1.967,680,1.967,681,1.967,682,1.967,683,4.832,684,3.936,685,2.951,686,1.967,687,3.936,688,3.542,689,1.967,690,1.967,691,1.967,692,1.967,693,1.967,694,1.967,695,1.967,696,2.951,697,2.951,698,2.951,699,1.967,700,2.951,701,1.967,702,2.951,703,1.967,704,1.967,705,2.951,706,2.951,707,1.967,708,1.967,709,1.967,710,1.967,711,1.967,712,1.967,713,1.967,714,1.967,715,1.967,716,2.951,717,1.967,718,1.967,719,1.967,720,1.967,721,1.967,722,1.967,723,1.967,724,1.967,725,1.967,726,1.967,727,1.967,728,1.967,729,1.967,730,1.967,731,1.967,732,2.951,733,1.967,734,1.967,735,1.967,736,1.967,737,1.967,738,1.967,739,1.967,740,1.967,741,1.967,742,1.967,743,1.967,744,1.967,745,1.967,746,1.967,747,1.967,748,1.967]],["title/additional-documentation/contributing.html",[340,1.329,548,1.329,749,2.085]],["body/additional-documentation/contributing.html",[4,0.833,7,0.047,18,0.041,19,0.041,134,1.586,140,3.245,167,1.402,275,1.797,321,2.999,323,3.205,339,3.205,435,3.205,442,2.709,444,3.205,631,3.205,648,2.709,673,3.205,749,3.205,750,3.958,751,3.958,752,3.958,753,4.741]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":295,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":634,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":635,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":436,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":270,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":583,"title":{},"body":{"license.html":{}}}],["2018",{"_index":254,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["23",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["23/23",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":374,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.1",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["4.0.7",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":271,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":437,"title":{},"body":{"index.html":{}}}],["50",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":266,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":415,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["6.1.0.beta.3",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["6.x.x",{"_index":268,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_repliesobserv",{"_index":199,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_replyqueuenam",{"_index":194,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_setupreplyqueu",{"_index":197,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_stompservic",{"_index":493,"title":{},"body":{"index.html":{}}}],["abil",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["access",{"_index":734,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["action",{"_index":626,"title":{},"body":{"license.html":{}}}],["activ",{"_index":471,"title":{},"body":{"index.html":{}}}],["actual",{"_index":401,"title":{},"body":{"index.html":{}}}],["ad",{"_index":289,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["add",{"_index":445,"title":{},"body":{"index.html":{}}}],["addit",{"_index":548,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["addition",{"_index":447,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":674,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":677,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["ajax",{"_index":724,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["alias",{"_index":637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":286,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["alreadi",{"_index":741,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["altern",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":599,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":403,"title":{},"body":{"index.html":{}}}],["angular",{"_index":265,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":182,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["angular4",{"_index":392,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":393,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":394,"title":{},"body":{"index.html":{}}}],["anoth",{"_index":726,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["apart",{"_index":746,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["api",{"_index":346,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":314,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":422,"title":{},"body":{"index.html":{}}}],["applic",{"_index":646,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["approach",{"_index":693,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["argument",{"_index":718,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["aris",{"_index":630,"title":{},"body":{"license.html":{}}}],["around",{"_index":676,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":550,"title":{},"body":{"index.html":{}}}],["associ",{"_index":591,"title":{},"body":{"license.html":{}}}],["assum",{"_index":468,"title":{},"body":{"index.html":{}}}],["astha",{"_index":573,"title":{},"body":{"index.html":{}}}],["async",{"_index":504,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":242,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":619,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["back",{"_index":684,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["backend",{"_index":696,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["background",{"_index":478,"title":{},"body":{"index.html":{}}}],["base",{"_index":496,"title":{},"body":{"index.html":{}}}],["be",{"_index":417,"title":{},"body":{"index.html":{}}}],["beat",{"_index":665,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":530,"title":{},"body":{"index.html":{}}}],["believ",{"_index":712,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":491,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":418,"title":{},"body":{"index.html":{}}}],["branch",{"_index":414,"title":{},"body":{"index.html":{}}}],["break",{"_index":407,"title":{},"body":{"index.html":{}}}],["broken",{"_index":429,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["brows",{"_index":632,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["btw",{"_index":740,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["bundl",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":582,"title":{},"body":{"license.html":{}}}],["call",{"_index":459,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["call.html",{"_index":192,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["callback",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":274,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["chang",{"_index":285,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":252,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":570,"title":{},"body":{"index.html":{}}}],["charg",{"_index":587,"title":{},"body":{"license.html":{}}}],["check",{"_index":648,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":622,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["cleanup",{"_index":226,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["cli",{"_index":434,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["client';impl",{"_index":657,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":467,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["cofig",{"_index":553,"title":{},"body":{"index.html":{}}}],["come",{"_index":514,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":668,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["compat",{"_index":305,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":299,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":663,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":283,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":492,"title":{},"body":{"index.html":{}}}],["comput",{"_index":704,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["concept",{"_index":735,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["condit",{"_index":604,"title":{},"body":{"license.html":{}}}],["config",{"_index":149,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":512,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":538,"title":{},"body":{"index.html":{}}}],["console.log(message.bodi",{"_index":723,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["const",{"_index":214,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":230,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["constructor(stompservic",{"_index":169,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["consum",{"_index":515,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["contract",{"_index":627,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":749,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":565,"title":{},"body":{"index.html":{}}}],["control",{"_index":547,"title":{},"body":{"index.html":{}}}],["convent",{"_index":678,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["convert",{"_index":525,"title":{},"body":{"index.html":{}}}],["copi",{"_index":484,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":581,"title":{},"body":{"license.html":{}}}],["correct",{"_index":685,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correctli",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["correl",{"_index":687,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correlationid",{"_index":215,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correspond",{"_index":533,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":347,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":171,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["critic",{"_index":421,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":561,"title":{},"body":{"index.html":{}}}],["current",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":745,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["damag",{"_index":623,"title":{},"body":{"license.html":{}}}],["deal",{"_index":592,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":574,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":571,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultmessagessubscript",{"_index":213,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":227,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":304,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":453,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":479,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":310,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":456,"title":{},"body":{"index.html":{}}}],["depend",{"_index":275,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["deriv",{"_index":719,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["destin",{"_index":708,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["develop",{"_index":673,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":569,"title":{},"body":{"index.html":{}}}],["directli",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":263,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":356,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":320,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":752,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["documentation/rpc",{"_index":189,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["documentation/sock",{"_index":463,"title":{},"body":{"index.html":{}}}],["don't",{"_index":659,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["done",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["echo",{"_index":707,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["emul",{"_index":662,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["endpoint",{"_index":694,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ensurestompconnect",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":532,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":378,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":714,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":240,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":540,"title":{},"body":{"index.html":{}}}],["etc",{"_index":502,"title":{},"body":{"index.html":{}}}],["even",{"_index":557,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":618,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":577,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":424,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["expect",{"_index":716,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":611,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":405,"title":{},"body":{"index.html":{}}}],["fail",{"_index":671,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":482,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":457,"title":{},"body":{"index.html":{}}}],["few",{"_index":549,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":184,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["find",{"_index":428,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":567,"title":{},"body":{"index.html":{}}}],["first",{"_index":185,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["fit",{"_index":614,"title":{},"body":{"license.html":{}}}],["fix",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":410,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":651,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":409,"title":{},"body":{"index.html":{}}}],["frame",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":483,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":661,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":602,"title":{},"body":{"license.html":{}}}],["futur",{"_index":330,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":435,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":250,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":339,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["give",{"_index":737,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["go",{"_index":408,"title":{},"body":{"index.html":{}}}],["grant",{"_index":586,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["guid",{"_index":150,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["guide](../addit",{"_index":188,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["hack",{"_index":672,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":235,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":398,"title":{},"body":{"index.html":{}}}],["hash",{"_index":481,"title":{},"body":{"index.html":{}}}],["head",{"_index":432,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["headers).pipe(first",{"_index":207,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers.t",{"_index":638,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["headers['correl",{"_index":224,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers['repli",{"_index":223,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["heart",{"_index":664,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hello",{"_index":720,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["help",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":701,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["herebi",{"_index":585,"title":{},"body":{"license.html":{}}}],["holder",{"_index":620,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":458,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":476,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":649,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":307,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":291,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":497,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/stomp.html#d.tqd",{"_index":713,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/tutorials/tutori",{"_index":689,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/web",{"_index":472,"title":{},"body":{"index.html":{}}}],["i.",{"_index":680,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["id",{"_index":219,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ideal",{"_index":731,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["identifi",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":165,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["impli",{"_index":612,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":595,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["incomingmessag",{"_index":705,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["inconsist",{"_index":431,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":650,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":558,"title":{},"body":{"index.html":{}}}],["initi",{"_index":246,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["initstomp",{"_index":552,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["injection.html",{"_index":477,"title":{},"body":{"index.html":{}}}],["instal",{"_index":442,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":750,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":144,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":287,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":539,"title":{},"body":{"index.html":{}}}],["intern",{"_index":518,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":578,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ionic",{"_index":440,"title":{},"body":{"index.html":{}}}],["issu",{"_index":262,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["jimi",{"_index":568,"title":{},"body":{"index.html":{}}}],["js",{"_index":300,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":292,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":653,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":464,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":325,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":308,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/ng5",{"_index":455,"title":{},"body":{"index.html":{}}}],["js/ng6",{"_index":454,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":448,"title":{},"body":{"index.html":{}}}],["json",{"_index":524,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":526,"title":{},"body":{"index.html":{}}}],["jump",{"_index":297,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":610,"title":{},"body":{"license.html":{}}}],["know",{"_index":204,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["kumar",{"_index":572,"title":{},"body":{"index.html":{},"license.html":{}}}],["languag",{"_index":695,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["liabil",{"_index":624,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":621,"title":{},"body":{"license.html":{}}}],["librari",{"_index":238,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":579,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":596,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":430,"title":{},"body":{"index.html":{}}}],["lint",{"_index":753,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":480,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":488,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["magic",{"_index":711,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["main",{"_index":328,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":419,"title":{},"body":{"index.html":{}}}],["make",{"_index":176,"title":{},"body":{"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["manag",{"_index":412,"title":{},"body":{"index.html":{}}}],["mani",{"_index":666,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["manual",{"_index":245,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["map",{"_index":501,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":535,"title":{},"body":{"index.html":{}}}],["master",{"_index":413,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":667,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["merchant",{"_index":613,"title":{},"body":{"license.html":{}}}],["merg",{"_index":327,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":160,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message');pleas",{"_index":522,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":510,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message.headers['correl",{"_index":218,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message.headers['repli",{"_index":703,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["michel",{"_index":575,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":377,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":580,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":485,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["more",{"_index":562,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":513,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":399,"title":{},"body":{"index.html":{}}}],["myserviceendpoint",{"_index":697,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["need",{"_index":466,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":617,"title":{},"body":{"license.html":{}}}],["note",{"_index":523,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":605,"title":{},"body":{"license.html":{}}}],["now",{"_index":278,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":321,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":158,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["observable.cr",{"_index":211,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["obtain",{"_index":589,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":670,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":420,"title":{},"body":{"index.html":{}}}],["offer",{"_index":423,"title":{},"body":{"index.html":{}}}],["old",{"_index":647,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":205,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["onc",{"_index":563,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["oper",{"_index":500,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["otherwis",{"_index":629,"title":{},"body":{"license.html":{}}}],["out",{"_index":631,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["outgoingmessag",{"_index":706,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["outlin",{"_index":738,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["overview",{"_index":633,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":373,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":340,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["part",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":615,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["payload",{"_index":174,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["per",{"_index":531,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":584,"title":{},"body":{"license.html":{}}}],["permit",{"_index":601,"title":{},"body":{"license.html":{}}}],["person",{"_index":588,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":505,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":470,"title":{},"body":{"index.html":{}}}],["portion",{"_index":608,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":313,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":564,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":465,"title":{},"body":{"index.html":{}}}],["privat",{"_index":193,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["procedur",{"_index":191,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["process",{"_index":546,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["product",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":686,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["project",{"_index":335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":576,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":345,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":519,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":616,"title":{},"body":{"license.html":{}}}],["python.html",{"_index":691,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["queu",{"_index":559,"title":{},"body":{"index.html":{}}}],["queue",{"_index":155,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["queue/rpc",{"_index":196,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["quit",{"_index":404,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":162,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["r.service.t",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rais",{"_index":427,"title":{},"body":{"index.html":{}}}],["read",{"_index":461,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":545,"title":{},"body":{"index.html":{}}}],["readm",{"_index":232,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":397,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["reap",{"_index":490,"title":{},"body":{"index.html":{}}}],["reason",{"_index":733,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["receiv",{"_index":728,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["recent",{"_index":426,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":301,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["remain",{"_index":748,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["remot",{"_index":190,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["repli",{"_index":154,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyqueuenam",{"_index":151,"title":{},"body":{"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyto",{"_index":702,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["report",{"_index":438,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":177,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["request).subscribe((messag",{"_index":722,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["request/respons",{"_index":681,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["requir",{"_index":730,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["resourc",{"_index":486,"title":{},"body":{"index.html":{}}}],["respons",{"_index":683,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["restrict",{"_index":594,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["right",{"_index":597,"title":{},"body":{"license.html":{}}}],["rout",{"_index":682,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rpc",{"_index":148,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rpc(serviceendpoint",{"_index":173,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.config",{"_index":187,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.config.t",{"_index":147,"title":{},"body":{"injectables/StompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc.config.ts:19",{"_index":153,"title":{},"body":{"injectables/StompRPCConfig.html":{}}}],["rpc.config.ts:23",{"_index":157,"title":{},"body":{"injectables/StompRPCConfig.html":{}}}],["rpc.service.t",{"_index":164,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:22",{"_index":170,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:41",{"_index":175,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:49",{"_index":180,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserv",{"_index":212,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserver.next(messag",{"_index":221,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["run",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":159,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["rxjs/oper",{"_index":186,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["sam",{"_index":566,"title":{},"body":{"index.html":{}}}],["same",{"_index":400,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sampl",{"_index":233,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["saveimport",{"_index":656,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":443,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":411,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["secur",{"_index":732,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sell",{"_index":600,"title":{},"body":{"license.html":{}}}],["semant",{"_index":494,"title":{},"body":{"index.html":{}}}],["send",{"_index":222,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sent",{"_index":700,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["servic",{"_index":166,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["serviceendpoint",{"_index":178,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["setupreplyqueu",{"_index":152,"title":{},"body":{"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["setupreplyqueuefntyp",{"_index":156,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["sever",{"_index":475,"title":{},"body":{"index.html":{}}}],["shall",{"_index":606,"title":{},"body":{"license.html":{}}}],["similar",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpl",{"_index":715,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpli",{"_index":743,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simplifi",{"_index":736,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["singl",{"_index":729,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["six",{"_index":690,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sock",{"_index":645,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":590,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":425,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["specif",{"_index":241,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["specifi",{"_index":487,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":380,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":655,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":146,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":228,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":231,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":251,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":528,"title":{},"body":{"index.html":{}}}],["step",{"_index":747,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":234,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":473,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":237,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":391,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":229,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":161,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":516,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":506,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":509,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":309,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":462,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":433,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":452,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":451,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":520,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":499,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":450,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":446,"title":{},"body":{"index.html":{}}}],["stomprpcconfig",{"_index":145,"title":{"injectables/StompRPCConfig.html":{}},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"coverage.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":200,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":202,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["stomprpcconfigforactivemq",{"_index":739,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservic",{"_index":163,"title":{"injectables/StompRPCService.html":{}},"body":{"injectables/StompRPCService.html":{},"coverage.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservice.rpc(myserviceendpoint",{"_index":721,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.publish(replyto",{"_index":709,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.st",{"_index":529,"title":{},"body":{"index.html":{}}}],["stompservice.subscribe(myserviceendpoint).subscribe((messag",{"_index":699,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.subscribe(replyqueuenam",{"_index":744,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservicefactori",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":536,"title":{},"body":{"index.html":{}}}],["stream",{"_index":168,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stream(serviceendpoint",{"_index":179,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["streamlin",{"_index":652,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["structur",{"_index":342,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":395,"title":{},"body":{"index.html":{}}}],["sub",{"_index":508,"title":{},"body":{"index.html":{}}}],["subject",{"_index":603,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":598,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":236,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["subscribe((messag",{"_index":220,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["subscribe((msg_bodi",{"_index":511,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":537,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":498,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":183,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["substanti",{"_index":607,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":402,"title":{},"body":{"index.html":{}}}],["success",{"_index":560,"title":{},"body":{"index.html":{}}}],["super",{"_index":247,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":257,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["switch",{"_index":282,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":543,"title":{},"body":{"index.html":{}}}],["temp",{"_index":195,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["templat",{"_index":503,"title":{},"body":{"index.html":{}}}],["termin",{"_index":727,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":710,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["this._repliesobserv",{"_index":208,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":217,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._replyqueuenam",{"_index":201,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._setupreplyqueu",{"_index":203,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":209,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._stompservice.config",{"_index":555,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":541,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":556,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":521,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":534,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":507,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":248,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":554,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":249,"title":{},"body":{"injectables/StompService.html":{}}}],["this.stompservic",{"_index":210,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.defaultmessagesobserv",{"_index":198,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.publish(serviceendpoint",{"_index":225,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stream(serviceendpoint",{"_index":206,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["those",{"_index":669,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":658,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":544,"title":{},"body":{"index.html":{}}}],["time",{"_index":416,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["topic/echo",{"_index":698,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["topic/replies.${uuid.uuid",{"_index":742,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["tort",{"_index":628,"title":{},"body":{"license.html":{}}}],["travi",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":383,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":323,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["turn",{"_index":717,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["two",{"_index":679,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":636,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":284,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":406,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["uniqu",{"_index":688,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["unit",{"_index":675,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":517,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["updat",{"_index":273,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":167,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":449,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["user",{"_index":460,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":489,"title":{},"body":{"index.html":{}}}],["usual",{"_index":542,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["uuid",{"_index":181,"title":{},"body":{"injectables/StompRPCService.html":{},"dependencies.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["uuid.uuid",{"_index":216,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":495,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":351,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":692,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["version",{"_index":267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":239,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":474,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":244,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":609,"title":{},"body":{"license.html":{}}}],["watch",{"_index":527,"title":{},"body":{"index.html":{}}}],["way",{"_index":315,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["web",{"_index":469,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":654,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":441,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["whether",{"_index":625,"title":{},"body":{"license.html":{}}}],["wire",{"_index":243,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":593,"title":{},"body":{"license.html":{}}}],["work",{"_index":439,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["worri",{"_index":660,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":396,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["ws://localhost:61614/stomp",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["yarn",{"_index":444,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":751,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["ye",{"_index":172,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["yield",{"_index":725,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["yourclass",{"_index":551,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://localhost:61614/stomp',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://localhost:61614/stomp',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCConfig.html":{"url":"injectables/StompRPCConfig.html","title":"injectable - StompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.config.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the reply queue\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.config.ts:23\n                            \n                        \n\n                \n                    \n                        Setup the reply queue\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Message } from \"@stomp/stompjs\";\nimport {Injectable} from \"@angular/core\";\nimport {StompRService} from \"./stomp-r.service\";\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, stompService: StompRService) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\n@Injectable()\nexport class StompRPCConfig {\n  /**\n   * Name of the reply queue\n   */\n  replyQueueName?: string;\n  /**\n   * Setup the reply queue\n   */\n  setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCService.html":{"url":"injectables/StompRPCService.html","title":"injectable - StompRPCService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of RPC service using messaging.\nPlease see the guide for details.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stompService: StompRService, stompRPCConfig?: StompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp-rpc.service.ts:22\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    stompService\n                                                  \n                                                        \n                                                                    StompRService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    stompRPCConfig\n                                                  \n                                                        \n                                                                    StompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:41\n                            \n                        \n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(serviceEndPoint: string, payload: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:49\n                            \n                        \n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Message, StompHeaders} from '@stomp/stompjs';\nimport {UUID} from 'angular2-uuid';\nimport {Observable, Observer, Subscription} from \"rxjs\";\nimport {filter, first} from \"rxjs/operators\";\nimport {StompRService} from \"./stomp-r.service\";\nimport {setupReplyQueueFnType, StompRPCConfig} from \"./stomp-rpc.config\";\n\n/**\n * An implementation of RPC service using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\n@Injectable()\nexport class StompRPCService {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.stompService.defaultMessagesObservable;\n  };\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private stompService: StompRService, private stompRPCConfig?: StompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders): Observable {\n    // We know there will be only one message in reply\n    return this.stream(serviceEndPoint, payload, headers).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(serviceEndPoint: string, payload: string, headers: StompHeaders = {}) {\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.stompService);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.stompService.publish(serviceEndPoint, payload, headers);\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n6.1.0.beta.3 2018-09-23\n\nRPC support\n\n4.0.1 & 6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.config.ts\n            \n            \n                injectable\n            \n            \n                StompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                StompRPCService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.7\n        \n            angular2-uuid : ^1.1.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            setupReplyQueueFnType   (src/.../stomp-rpc.config.ts)\n                        \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-rpc.config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rpc---remote-procedure-call.html":{"url":"additional-documentation/rpc---remote-procedure-call.html","title":"additional-page - RPC - Remote Procedure Call","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRPC - Remote Procedure Call\nMessaging usually works one way.\nThere is however a convention for two way communication (i.e. request/response).\nThis involves reply-to queues which routes the response back to correct client program\nand correlation-id to uniquely match a response to the correct request.\nSee: https://www.rabbitmq.com/tutorials/tutorial-six-python.html for a sample using\na very similar approach.\nImplementing the RPC server endpoint\nThis can be implemented in any language, in most cases it will be there in some backend server.\n    const myServiceEndPoint = '/topic/echo';\n\n    stompService.subscribe(myServiceEndPoint).subscribe((message: Message) => {\n      // The response needs to be sent back here\n      const replyTo = message.headers['reply-to'];\n\n      // Same correlation id needs to be sent back as message header\n      const correlationId = message.headers['correlation-id'];\n\n      // Process the request, compute the response\n      const incomingMessage = message.body;\n\n      const outgoingMessage = 'Echoing - ' + incomingMessage;\n\n      // Send the response back to destination `replyTo` with `correlation-id` header\n      stompService.publish(replyTo, outgoingMessage, {'correlation-id' : correlationId});\n    });Using it from the client\nRabbitMQ\nRabbitMQ has special support for temp-queues in reply-to messages\nwhich make things to work magically. Really I mean it.\nIf you don't believe me check details at https://www.rabbitmq.com/stomp.html#d.tqd\nWell the client code looks equally simple and similar to what you would expect\nto use with any backend service.\nThe StompRPCService can be created by means of Angular Dependency Injection\nor be created manually.\nIt in turns needs an initialized StompRService as\na dependency (or argument).\nStompService is a derived class of StompRService, so that will work as well.\n    const myServiceEndPoint = '/topic/echo';\n\n    const request = 'Hello';\n    stompRPCService.rpc(myServiceEndPoint, request).subscribe((message: Message) => {\n      // Consume the response\n      console.log(message.body);\n    });Just like Ajax requests, it will yield only once.\nThere is another method called stream that will not terminate after one response.\nThis can be used to receive stream of responses for a single request.\nIf you use that it will be your responsibility to unsubscribe when you do not expect\nany additional messages.\nOther Brokers\nThere few requirements:\n\nthe reply queue name must be unique across the broker.\nideally, for security reasons only the client creating the queue should have access to it.\n\nMany brokers have temp-queue concept which should simplify your work. \nFollowing gives and outline:\n  const stompRPCConfigForActiveMQ = {\n    // A unique name, BTW angular2-uuid module is already added as dependency\n    replyQueueName: `/topic/replies.${UUID.UUID()}`,\n\n    // Simply subscribe, you would need to secure by adding broker specific options\n    setupReplyQueue: (replyQueueName: string, stompService: StompRService) => {\n      return stompService.subscribe(replyQueueName);\n    }\n  };This custom config would need to be passed as second parameter in StompRPCService\nconstructor, or, can be passed as an Angular Dependency.\nApart from this additional setup step usage remains same as RabbitMQ case as documented above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
