var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/InjectableRxStompConfig.html",[0,0.177,1,2.164]],["body/injectables/InjectableRxStompConfig.html",[0,0.304,1,3.505,2,1.439,3,1.142,4,0.679,5,2.989,6,2.599,7,0.796,8,2.989,9,1.187,10,1.806,11,3.505,12,1.806,13,1.283,14,0.49,15,1.611,16,0.042,17,0.038,18,0.038]],["title/injectables/InjectableRxStompRpcConfig.html",[0,0.177,19,1.882]],["body/injectables/InjectableRxStompRpcConfig.html",[0,0.304,2,1.435,3,1.139,4,0.677,5,2.981,6,2.592,7,0.795,8,2.981,9,1.186,10,1.801,12,1.801,13,1.28,14,0.489,15,1.607,16,0.042,17,0.038,18,0.038,19,3.042,20,2.022,21,5.039]],["title/classes/MyStompRService.html",[14,0.355,22,1.882]],["body/classes/MyStompRService.html",[2,0.962,3,0.764,4,0.454,9,0.92,13,1.486,14,0.506,15,1.663,16,0.045,17,0.03,18,0.03,22,2.361,23,1.737,24,1.485,25,1.077,26,2.348,27,2.245,28,4.066,29,1.356,30,2.878,31,2.732,32,2.093,33,2.093,34,3.624,35,3.624,36,2.682,37,1.593,38,2.682,39,0.92,40,1.265,41,1.863,42,1.356,43,1.663,44,2.078,45,1.077,46,3.19,47,2.093,48,1.737,49,2.361,50,1.641,51,1.737,52,0.858,53,1.356,54,2.348,55,1.737,56,2.348,57,1.207,58,1.166,59,1.593,60,1.077,61,1.641,62,1.641,63,1.207,64,1.842,65,1.207,66,1.207,67,1.641,68,1.307,69,1.866,70,1.863,71,1.356,72,1.324,73,1.356,74,1.207,75,1.077,76,1.464,77,1.207,78,1.207,79,1.077,80,1.077,81,1.077,82,1.207,83,1.077,84,1.356,85,1.998,86,1.207,87,1.356,88,1.356,89,1.207,90,1.356,91,1.737,92,1.737,93,1.998,94,2.348,95,3.19,96,1.998,97,2.348]],["title/classes/MyStompService.html",[14,0.355,91,1.882]],["body/classes/MyStompService.html",[2,0.941,3,0.747,4,0.444,9,0.906,13,1.475,14,0.5,15,1.644,16,0.045,17,0.029,18,0.029,22,1.7,23,1.7,24,1.288,25,1.054,26,2.33,27,2.225,28,4.035,29,1.815,31,2.714,32,2.069,33,2.069,34,3.583,35,3.583,36,2.652,37,1.579,38,2.652,39,1.033,40,1.355,41,1.843,42,1.327,43,1.644,44,2.047,45,1.054,46,3.143,47,2.069,48,1.7,49,2.326,50,1.616,51,1.7,52,0.839,53,1.327,54,2.297,55,1.7,56,2.297,57,1.181,58,1.149,59,1.579,60,1.054,61,1.616,62,1.616,63,1.181,64,1.815,65,1.181,66,1.181,67,1.616,68,1.288,69,1.852,70,1.843,71,1.327,72,1.31,73,1.327,74,1.181,75,1.054,76,1.442,77,1.181,78,1.181,79,1.054,80,1.054,81,1.054,82,1.181,83,1.054,84,1.327,85,1.955,86,1.181,87,1.327,88,1.327,89,1.181,90,1.327,91,2.326,92,1.7,93,2.675,94,2.297,95,3.143,96,1.955,97,2.297,98,1.181,99,2.816,100,2.816,101,1.054,102,0.941,103,0.941,104,1.327,105,2.816]],["title/injectables/RxStompRPCService.html",[0,0.177,106,2.164]],["body/injectables/RxStompRPCService.html",[0,0.296,2,1.215,3,0.964,4,0.573,6,2.75,7,0.822,9,1.227,10,1.524,12,1.524,13,1.083,14,0.414,15,1.36,16,0.044,17,0.035,18,0.035,19,3.149,20,2.344,29,1.712,45,1.705,98,1.524,101,1.36,102,1.215,103,1.215,104,2.344,106,3.163,107,2.75,108,2.964,109,2.194,110,3.163,111,1.358,112,1.358,113,1.911,114,1.705,115,3.634,116,2.42,117,4.554,118,3.149,119,5.215,120,3.634,121,2.194,122,2.964,123,4.554,124,3.634,125,1.712,126,3.634,127,3.634,128,2.523,129,2.523,130,3.634,131,3.634]],["title/injectables/RxStompService.html",[0,0.177,118,1.882]],["body/injectables/RxStompService.html",[0,0.304,2,1.431,3,1.136,4,0.675,7,0.675,9,1.184,10,1.796,12,1.796,13,1.276,14,0.488,15,1.603,16,0.044,17,0.038,18,0.038,107,2.585,118,3.037,121,3.037,132,3.492]],["title/injectables/StompConfig.html",[0,0.177,40,0.827]],["body/injectables/StompConfig.html",[0,0.227,2,0.789,3,0.626,4,0.372,7,0.537,9,0.801,10,0.99,13,0.704,14,0.269,16,0.045,17,0.026,18,0.026,25,0.884,29,2.274,33,1.604,37,1.461,39,0.801,40,0.903,41,1.428,42,1.604,43,1.274,47,2.274,48,2.055,50,1.428,51,2.055,52,1.015,53,1.604,58,1.439,59,1.76,60,1.274,61,1.428,62,1.428,63,1.428,65,1.833,66,1.833,67,2.024,68,1.613,69,1.906,70,2.136,71,2.059,72,1.439,73,2.059,74,1.428,75,1.274,76,1.636,77,1.428,78,1.428,79,1.274,80,1.274,81,1.274,82,1.428,83,1.274,84,2.059,89,2.024,101,1.274,103,1.613,109,1.425,114,1.274,116,1.809,133,1.926,134,3.404,135,1.428,136,3.034,137,1.636,138,3.992,139,2.361,140,2.364,141,2.322,142,2.361,143,2.087,144,3.404,145,3.404,146,1.428,147,3.404,148,2.322,149,2.756,150,2.361,151,3.404,152,2.361,153,3.404,154,2.361,155,2.361,156,2.777,157,1.428,158,1.274,159,2.059,160,1.428,161,2.364,162,2.055,163,2.777,164,3.404,165,2.364,166,2.777,167,1.254]],["title/injectables/StompRService.html",[0,0.177,24,1.042]],["body/injectables/StompRService.html",[0,0.131,2,0.344,3,0.273,4,0.162,7,0.804,9,0.889,10,0.432,11,1.604,12,0.432,13,0.307,14,0.263,15,0.386,16,0.045,17,0.013,18,0.021,24,0.589,25,0.386,26,1.779,27,2.348,29,2.126,32,1.289,36,1.651,37,1.725,38,2.612,39,0.643,40,0.468,42,1.579,43,0.865,48,1.651,50,0.432,52,1.126,58,1.498,59,0.914,68,1.197,72,1.346,79,0.865,80,0.865,81,1.341,98,0.969,101,1.255,102,1.12,103,0.914,104,1.289,109,0.622,111,0.815,112,1.391,113,2.124,114,1.024,121,1.064,122,0.84,125,1.088,135,1.29,137,1.866,141,1.903,143,1.984,146,1.503,149,0.937,157,2.01,159,0.83,160,1.147,167,0.547,168,3.189,169,0.84,170,0.937,171,1.763,172,1.438,173,1.779,174,1.763,175,1.763,176,1.763,177,1.899,178,2.734,179,1.579,180,2.172,181,1.438,182,1.289,183,1.438,184,1.438,185,2.544,186,1.289,187,2.231,188,1.224,189,1.438,190,0.66,191,2.922,192,1.903,193,1.899,194,1.781,195,1.438,196,1.763,197,2.31,198,2.31,199,2.31,200,2.31,201,2.31,202,1.03,203,1.03,204,1.03,205,1.224,206,2.735,207,1.03,208,1.651,209,1.438,210,1.224,211,1.899,212,1.763,213,1.064,214,3.582,215,1.224,216,1.03,217,2.735,218,1.453,219,1.064,220,1.438,221,1.763,222,1.763,223,1.763,224,2.735,225,1.763,226,1.763,227,1.224,228,1.763,229,0.937,230,1.147,231,1.763,232,1.899,233,2.007,234,1.064,235,1.763,236,1.763,237,1.438,238,0.937,239,0.937,240,1.763,241,1.763,242,3.217,243,2.738,244,1.03,245,2.735,246,2.231,247,2.327,248,1.899,249,3.777,250,4.665,251,1.438,252,2.327,253,2.231,254,1.438,255,1.763,256,1.763,257,1.438,258,1.763,259,1.763,260,1.763,261,1.438,262,1.064,263,1.064,264,1.763,265,1.224,266,1.438,267,1.453,268,1.763,269,3.074,270,1.763,271,1.763,272,1.763,273,1.763,274,2.31,275,1.438,276,1.604,277,1.763,278,2.327,279,1.03,280,3.351,281,2.231,282,1.899,283,3.351,284,1.763,285,1.763,286,1.03,287,1.03,288,4.326,289,1.899,290,0.66,291,1.064,292,1.763,293,2.735,294,2.231,295,1.763,296,1.763,297,2.31,298,1.03,299,1.03,300,0.937,301,1.899,302,1.224,303,1.438,304,1.438,305,1.03,306,1.03,307,3.217,308,1.03,309,1.03,310,1.03,311,1.03,312,1.03,313,1.03,314,1.03,315,1.03,316,2.735,317,0.715,318,1.03,319,1.885,320,0.84,321,1.03,322,1.03,323,1.03,324,2.735,325,1.03,326,1.03,327,1.03,328,1.763,329,1.03,330,1.03,331,1.03,332,1.03,333,1.03,334,1.03,335,1.03,336,1.03,337,1.03,338,0.937,339,1.03,340,1.03,341,1.763,342,1.03,343,0.84,344,0.84,345,1.03,346,1.03,347,1.03,348,1.03,349,1.03,350,1.03,351,1.03,352,1.03,353,1.763,354,0.84,355,0.84,356,1.03,357,1.03,358,1.03,359,1.763,360,1.03,361,3.074,362,1.03,363,1.03,364,1.03,365,1.03,366,1.03,367,1.03,368,0.715,369,1.03,370,1.03,371,1.03,372,0.84,373,1.03,374,1.03,375,1.03,376,1.03]],["title/injectables/StompService.html",[0,0.177,39,0.733]],["body/injectables/StompService.html",[0,0.273,2,1.128,3,0.896,4,0.532,7,0.8,9,1.131,10,1.416,13,1.006,14,0.384,15,1.263,16,0.045,17,0.033,18,0.033,24,1.607,27,2.047,29,1.59,37,1.128,39,1.022,40,1.347,45,1.627,72,1.296,98,2.016,101,1.263,102,1.128,103,1.128,104,1.59,109,2.624,111,1.513,112,1.513,113,1.823,114,1.263,125,2.047,135,2.016,159,2.264,170,2.309,172,3.545,178,2.753,179,1.59,180,1.793,181,2.753,182,1.59,183,2.753,184,2.753,185,2.624,186,1.59,187,2.753,188,2.344,189,2.753,290,1.263,320,2.753,372,2.753,377,2.753,378,4.346,379,3.375,380,3.545,381,2.047,382,3.375,383,3.375,384,2.038,385,3.375,386,3.375]],["title/coverage.html",[387,3.365]],["body/coverage.html",[0,0.304,1,2.128,4,0.483,5,2.832,6,2.463,7,0.771,8,2.832,14,0.465,16,0.045,17,0.031,18,0.031,19,1.85,20,1.444,22,1.85,23,3.074,24,1.024,39,0.721,40,0.813,43,2.078,44,1.628,49,1.85,50,1.285,69,2.164,91,1.85,103,1.024,106,2.128,107,2.768,108,2.499,111,0.914,118,1.85,132,2.499,133,2.499,158,1.147,168,2.128,169,2.499,377,2.499,387,2.499,388,3.064,389,3.064,390,2.499,391,3.535,392,2.832,393,5.781,394,2.499,395,4.079,396,4.079,397,2.499,398,2.499,399,3.741,400,2.499,401,2.499,402,2.499,403,3.064,404,3.064,405,2.499,406,3.395,407,3.395,408,2.499,409,2.499,410,2.499,411,2.499,412,3.064,413,3.064,414,4.079,415,3.064,416,3.064,417,3.327,418,2.499,419,2.128,420,3.064,421,3.064]],["title/dependencies.html",[190,1.39,422,1.853]],["body/dependencies.html",[7,0.714,12,1.9,16,0.042,17,0.039,18,0.039,190,1.696,423,3.695,424,3.695]],["title/miscellaneous/enumerations.html",[425,1.257,426,3.029]],["body/miscellaneous/enumerations.html",[7,0.692,16,0.039,17,0.039,18,0.039,25,1.643,31,2.332,111,1.309,137,1.643,168,3.048,191,3.58,192,2.332,319,4.164,425,2.068,426,3.58,427,4.389,428,5.105,429,2.332,430,3.048]],["title/miscellaneous/functions.html",[43,1.39,425,1.257]],["body/miscellaneous/functions.html",[7,0.697,11,2.406,16,0.043,17,0.034,18,0.034,23,2.092,25,1.297,39,1.145,43,1.297,44,2.586,49,2.938,93,2.406,96,2.406,101,2.085,102,1.862,103,1.627,104,2.624,107,2.092,111,1.318,121,2.938,397,3.605,398,3.605,399,2.826,400,3.605,401,3.605,402,3.605,405,3.605,406,2.406,407,3.559,408,3.605,409,3.605,410,3.605,425,1.632,431,4.866,432,4.181,433,4.866,434,3.465,435,5.736,436,3.465,437,3.465,438,3.465,439,3.465,440,3.465,441,3.465]],["title/index.html",[25,0.999,213,1.611,442,1.853]],["body/index.html",[0,0.197,4,0.547,7,0.719,9,0.713,14,0.395,16,0.044,17,0.018,18,0.018,24,1.159,26,1.14,27,0.711,31,0.802,32,1.14,33,1.14,37,0.809,39,1.04,40,1.173,41,1.271,45,1.751,47,0.711,52,0.45,53,0.711,57,0.633,58,1.033,59,1.353,60,0.565,61,1.016,62,1.016,63,0.633,64,1.14,65,0.633,66,0.633,67,1.016,68,1.159,69,1.298,70,1.271,71,0.711,72,1.318,73,0.711,74,1.016,75,0.565,76,0.906,77,0.633,78,1.016,79,0.565,80,0.565,81,0.565,82,1.016,83,0.565,84,0.711,86,0.633,87,0.711,88,0.711,89,0.633,90,0.711,92,1.461,98,0.633,102,0.809,111,0.722,112,1.395,113,1.784,114,0.906,116,1.842,125,1.427,135,1.854,137,1.655,141,1.286,143,1.854,146,0.633,148,1.286,149,1.61,157,1.454,158,1.298,159,1.14,160,0.633,162,1.829,167,1.61,170,1.286,173,2.004,177,1.049,179,1.787,180,2.016,182,1.14,185,1.829,186,1.427,190,1.298,192,0.802,193,1.681,194,1.286,205,1.049,208,0.912,210,1.049,211,1.049,215,1.049,218,2.26,219,0.912,229,0.802,230,1.016,232,1.049,233,0.802,238,0.802,239,0.802,247,1.049,252,2.104,262,0.912,263,1.461,265,1.049,267,2.349,276,1.049,278,1.049,282,2.407,289,1.049,290,1.298,291,0.912,300,2.349,301,1.049,302,1.049,317,1.049,338,1.286,368,1.049,381,2.148,384,1.461,429,1.61,430,1.681,443,2.472,444,2.985,445,2.586,446,2.104,447,2.407,448,2.472,449,1.232,450,1.232,451,1.232,452,1.232,453,2.093,454,1.286,455,1.049,456,1.975,457,1.842,458,1.232,459,1.461,460,1.461,461,1.232,462,1.232,463,0.802,464,1.049,465,1.232,466,1.232,467,1.232,468,0.802,469,1.232,470,1.232,471,1.842,472,1.232,473,1.049,474,1.681,475,1.232,476,1.681,477,1.232,478,1.681,479,1.975,480,1.232,481,1.975,482,1.975,483,1.232,484,1.049,485,1.232,486,1.461,487,1.975,488,1.049,489,1.232,490,1.232,491,1.829,492,1.049,493,1.286,494,0.912,495,1.049,496,1.049,497,1.232,498,1.232,499,1.232,500,1.232,501,3.069,502,1.049,503,1.232,504,1.681,505,1.681,506,1.232,507,1.232,508,1.232,509,1.232,510,0.912,511,1.049,512,2.093,513,0.802,514,1.232,515,1.975,516,1.232,517,1.232,518,2.938,519,1.975,520,0.912,521,1.232,522,1.232,523,1.232,524,3.72,525,1.232,526,1.232,527,2.093,528,2.407,529,1.232,530,2.472,531,1.975,532,1.681,533,0.912,534,1.681,535,1.232,536,1.232,537,1.232,538,1.232,539,2.016,540,0.565,541,1.975,542,1.232,543,1.049,544,1.232,545,1.232,546,1.232,547,1.049,548,1.232,549,1.232,550,1.232,551,1.232,552,1.232,553,2.472,554,1.049,555,1.232,556,1.049,557,0.912,558,1.049,559,1.232,560,1.232,561,1.049,562,1.232,563,1.232,564,1.232,565,1.232,566,1.975,567,0.912,568,1.232,569,1.232,570,1.232,571,1.232,572,1.232,573,1.232,574,1.232,575,1.232,576,1.232,577,1.975,578,1.232,579,1.975,580,1.232,581,1.049,582,1.232,583,1.232,584,1.232,585,1.232,586,1.049,587,1.232,588,1.681,589,1.049,590,1.232,591,1.232,592,1.232,593,1.232,594,1.975,595,1.232,596,1.975,597,1.049,598,1.975,599,1.232,600,1.232,601,1.232,602,1.232,603,1.232,604,1.232,605,1.232,606,1.681,607,0.912,608,1.232,609,1.975,610,1.232,611,1.049,612,1.049,613,0.906,614,0.912,615,1.049,616,1.232,617,1.232,618,1.232,619,1.232,620,1.232,621,1.232,622,1.232,623,1.232,624,1.232,625,1.232,626,0.912,627,1.232,628,1.232,629,1.232,630,1.232,631,1.232,632,1.232,633,1.232,634,1.049,635,1.049,636,1.232,637,1.232,638,1.232,639,1.232,640,1.232,641,1.049,642,0.912,643,1.049]],["title/license.html",[213,1.611,442,1.853,642,1.611]],["body/license.html",[4,0.57,16,0.034,17,0.034,18,0.034,55,2.184,112,1.354,137,1.354,158,1.354,194,1.922,246,2.951,300,1.922,303,2.951,307,2.951,471,1.922,556,2.512,557,3.143,558,2.512,634,2.512,635,2.512,642,2.184,643,2.512,644,4.964,645,3.617,646,3.617,647,4.541,648,3.617,649,3.617,650,3.617,651,4.541,652,3.617,653,5.667,654,3.617,655,4.541,656,4.964,657,3.617,658,4.964,659,3.705,660,3.617,661,2.951,662,2.512,663,3.617,664,3.617,665,3.617,666,3.617,667,3.617,668,3.617,669,4.541,670,4.541,671,3.617,672,3.617,673,4.541,674,3.617,675,3.617,676,3.617,677,3.617,678,3.617,679,3.617,680,3.617,681,3.617,682,3.617,683,3.617,684,3.617,685,3.617,686,3.617,687,3.617,688,3.617,689,3.617,690,3.617,691,3.617,692,3.617,693,3.617]],["title/modules.html",[694,2.865]],["body/modules.html",[16,0.04,17,0.04,18,0.04,694,3.191]],["title/overview.html",[695,3.365]],["body/overview.html",[0,0.258,14,0.517,16,0.04,17,0.04,18,0.04,695,3.705,696,4.542,697,3.705]],["title/miscellaneous/variables.html",[391,2.578,425,1.257]],["body/miscellaneous/variables.html",[16,0.045,17,0.032,18,0.032,25,1.214,38,1.957,52,0.967,53,1.527,58,0.967,59,1.671,60,1.214,61,1.776,62,1.776,63,1.36,64,1.995,65,1.36,66,1.36,67,1.776,68,1.415,69,1.941,70,1.978,72,1.615,74,1.36,75,1.214,76,1.585,77,1.36,78,1.36,79,1.214,80,1.214,81,1.214,82,1.36,83,1.214,85,2.251,86,1.36,87,1.527,88,1.527,89,1.36,90,1.995,103,1.671,136,3.693,143,1.36,160,2.097,275,3.454,354,2.645,355,2.645,390,2.645,391,2.251,392,3.693,394,2.645,406,2.251,407,2.94,411,3.846,417,2.645,418,3.846,419,3.274,425,1.527,432,2.645,698,4.234,699,3.242,700,3.242,701,3.242,702,3.242,703,3.242,704,3.242,705,3.242,706,3.242,707,3.242,708,4.234,709,3.242]],["title/additional-documentation/sock-js.html",[540,0.873,613,0.873,710,2.333,711,1.903]],["body/additional-documentation/sock-js.html",[9,0.646,13,0.819,14,0.313,16,0.044,17,0.029,18,0.029,32,1.294,33,2.202,37,1.266,40,1.24,41,2.377,42,1.784,43,1.75,44,2.483,45,1.028,47,2.202,50,1.152,51,1.658,52,0.819,57,1.589,58,1.129,59,1.639,60,1.028,61,1.589,62,1.589,63,1.152,64,1.784,65,1.152,66,1.152,67,1.589,68,1.266,69,1.75,70,1.819,71,1.294,72,1.293,73,1.294,74,1.589,75,1.028,76,1.418,77,1.152,78,1.152,79,1.028,80,1.418,81,1.418,82,1.589,83,1.028,84,1.294,86,1.152,87,1.294,88,1.294,89,1.152,90,1.294,101,1.028,102,0.918,110,1.907,112,1.462,114,1.418,136,1.907,137,1.028,146,1.589,157,1.152,159,1.294,160,1.152,165,1.907,166,2.24,173,1.784,182,2.202,219,1.658,227,1.907,229,2.013,230,1.152,234,1.658,248,1.907,261,2.24,267,2.013,290,1.028,291,1.658,338,1.459,343,2.24,344,2.24,381,1.294,429,1.459,444,1.658,454,1.459,457,2.605,460,2.287,493,1.459,512,2.287,513,1.459,518,1.658,520,2.287,527,1.658,533,1.658,534,1.907,539,2.013,557,1.658,589,1.907,607,1.658,614,1.658,659,3.09,712,2.746,713,2.746,714,2.24,715,2.24,716,2.746,717,2.746,718,2.746,719,2.746,720,2.24,721,3.787,722,3.787,723,3.787,724,2.746,725,2.746,726,2.746,727,2.24,728,2.746,729,2.746,730,2.746,731,3.09,732,2.24,733,2.24,734,2.24,735,3.787,736,3.787,737,2.746,738,2.24,739,2.746,740,3.787,741,2.746,742,2.746]],["title/additional-documentation/rpc---remote-procedure-call.html",[20,0.878,128,1.295,129,1.295,218,0.991,540,0.698,613,0.698]],["body/additional-documentation/rpc---remote-procedure-call.html",[0,0.14,14,0.28,16,0.044,17,0.027,18,0.031,20,1.652,24,1.366,26,1.159,37,0.823,39,0.825,42,2.098,45,0.921,52,1.046,55,1.486,58,1.218,76,0.921,98,1.032,101,0.921,102,1.172,104,1.652,110,2.435,111,0.734,112,1.404,113,2.053,116,1.308,125,1.159,128,1.709,129,1.709,143,1.032,146,1.471,148,2.171,157,1.868,158,0.921,161,1.709,165,2.435,170,1.308,173,2.218,179,1.159,180,2.502,186,1.159,188,2.435,190,1.667,208,1.486,209,2.008,218,1.864,227,2.435,230,1.868,233,2.6,234,2.467,239,1.864,251,3.333,253,3.84,254,3.333,257,2.008,266,2.008,290,0.921,294,2.008,304,4.274,338,2.736,381,1.159,384,1.486,419,1.709,445,1.864,455,1.709,457,1.308,459,2.117,463,1.308,471,1.308,492,1.709,511,2.435,520,1.486,539,1.308,554,1.709,561,1.709,581,1.709,586,1.709,588,1.709,607,1.486,611,1.709,613,1.313,615,1.709,626,1.486,641,1.709,694,1.709,715,2.008,727,2.008,731,2.861,732,2.008,733,2.008,743,2.461,744,2.461,745,2.461,746,2.461,747,4.086,748,2.461,749,4.453,750,2.861,751,2.461,752,4.453,753,2.461,754,2.461,755,2.461,756,2.461,757,2.461,758,2.461,759,2.008,760,2.435,761,3.507,762,3.507,763,3.507,764,2.461,765,2.461,766,3.507,767,2.461,768,3.507,769,2.461,770,2.461,771,3.507,772,3.507,773,2.008,774,2.461,775,3.507,776,2.461,777,2.461,778,2.461,779,2.461,780,2.461,781,2.461,782,3.507,783,3.507,784,2.461,785,3.507,786,2.461,787,2.461,788,2.461,789,2.461,790,2.008,791,2.461,792,2.461,793,2.461,794,2.461,795,2.461,796,2.461,797,2.461,798,2.461,799,2.461,800,3.507,801,2.008,802,2.461,803,2.461,804,2.461,805,2.461,806,2.461,807,2.461,808,2.461,809,2.861,810,3.507,811,2.461,812,2.461,813,2.461,814,2.461,815,2.461,816,2.461,817,2.461,818,2.461]],["title/additional-documentation/contributing.html",[540,0.999,613,0.999,819,2.177]],["body/additional-documentation/contributing.html",[3,0.942,4,0.651,7,0.651,16,0.042,17,0.027,18,0.027,50,1.051,57,2.238,59,0.837,60,0.938,68,0.837,112,1.468,113,1.051,114,1.329,135,1.051,140,1.739,148,2.615,157,1.731,158,1.68,160,1.731,161,3.117,162,3.22,163,2.043,173,1.944,182,1.18,186,1.673,190,1.329,213,1.512,220,2.043,229,1.331,230,1.051,233,1.331,234,1.512,237,2.043,238,1.887,243,1.739,263,1.512,290,0.938,300,1.331,392,2.466,422,2.466,442,1.739,445,2.615,453,1.512,454,1.887,459,1.512,463,1.331,464,1.739,468,1.887,471,1.887,474,1.739,476,1.739,486,2.144,491,1.512,493,1.331,494,1.512,496,2.466,504,1.739,505,3.291,510,2.491,512,2.144,513,2.748,539,2.518,543,2.466,567,1.512,597,1.739,612,1.739,626,1.512,662,1.739,697,2.043,714,2.043,734,2.043,738,3.365,759,2.043,760,2.865,773,2.043,801,2.043,819,2.897,820,2.504,821,2.504,822,2.504,823,2.504,824,2.504,825,2.504,826,3.551,827,3.551,828,2.504,829,2.504,830,2.504,831,2.504,832,2.504,833,3.551,834,4.125,835,2.043,836,2.504,837,2.504,838,2.504,839,2.504,840,2.043,841,2.504,842,2.504,843,2.504,844,3.551,845,2.504,846,2.504,847,2.504,848,2.504,849,2.504,850,2.504,851,2.504,852,3.551,853,3.365,854,2.504,855,2.504,856,2.504,857,2.504,858,2.504,859,2.504,860,3.551,861,2.504,862,2.504,863,2.504,864,2.504,865,2.504,866,2.504,867,2.504,868,2.504,869,2.504,870,2.504,871,2.504,872,2.504,873,2.504,874,2.043,875,2.504,876,2.504,877,2.504,878,3.551,879,2.504,880,3.551,881,2.504,882,2.504,883,2.504,884,3.551,885,2.504,886,2.504,887,2.504,888,2.504,889,3.551,890,3.551,891,2.504,892,3.551,893,2.504,894,2.504,895,2.504,896,2.504,897,2.504,898,2.504,899,2.504,900,2.504,901,4.922,902,2.504,903,3.662,904,2.504,905,2.504,906,2.504,907,2.504,908,2.504,909,2.504]],["title/additional-documentation/change-log.html",[86,0.979,468,1.24,540,0.873,613,0.873]],["body/additional-documentation/change-log.html",[0,0.164,3,0.764,4,0.454,7,0.617,12,1.207,16,0.036,17,0.03,18,0.03,20,1.356,36,1.737,39,0.677,40,0.764,41,1.207,52,0.858,57,1.863,58,1.324,72,0.858,75,1.077,83,1.464,103,1.307,111,0.858,112,1.166,135,1.641,137,1.464,140,1.998,141,1.529,143,1.207,146,1.207,149,2.36,156,2.348,158,1.784,167,1.529,179,1.356,190,1.663,192,1.529,194,1.529,195,2.348,230,1.207,238,1.529,239,1.529,242,2.348,243,2.716,248,1.998,262,1.737,267,1.529,281,2.348,290,1.663,381,1.356,422,1.998,423,2.348,424,2.348,429,1.529,444,2.361,445,2.532,446,1.998,447,1.998,453,2.682,454,2.078,457,2.532,460,1.737,463,1.529,468,2.532,473,1.998,478,1.998,484,3.461,486,3.175,488,2.716,491,1.737,493,2.078,494,1.737,495,2.716,501,1.998,502,1.998,510,1.737,513,1.529,518,2.361,527,1.737,528,1.998,532,1.998,533,1.737,540,1.077,547,2.716,567,1.737,606,1.998,614,1.737,661,2.348,662,1.998,711,2.348,720,2.348,750,2.348,760,3.085,790,2.348,809,3.19,835,3.19,840,2.348,853,2.348,903,2.348,910,3.911,911,2.878,912,2.878,913,2.878,914,2.878,915,2.878,916,2.878,917,2.878,918,2.878,919,2.878,920,2.878,921,3.911,922,2.878,923,2.878,924,2.878,925,2.878,926,2.878,927,2.878,928,2.878,929,2.878,930,2.878,931,2.878,932,2.878,933,2.878,934,3.911,935,2.878,936,2.878,937,2.878,938,2.878,939,2.878,940,2.878,941,2.878,942,2.878,943,2.878,944,2.878,945,2.878,946,2.878,947,2.878,948,2.878,949,2.878,950,2.878,951,2.878,952,2.878,953,2.878,954,2.878,955,2.878,956,2.878,957,2.878,958,2.878,959,2.878,960,2.878,961,2.878,962,2.878]],["title/additional-documentation/v6-readme.html",[380,1.903,540,0.873,613,0.873,874,1.903]],["body/additional-documentation/v6-readme.html",[0,0.197,4,0.547,7,0.719,9,0.713,14,0.395,16,0.044,17,0.018,18,0.018,24,1.159,26,1.14,27,0.711,31,0.802,32,1.14,33,1.14,37,0.809,39,1.04,40,1.173,41,1.271,45,1.751,47,0.711,52,0.45,53,0.711,57,0.633,58,1.033,59,1.353,60,0.565,61,1.016,62,1.016,63,0.633,64,1.14,65,0.633,66,0.633,67,1.016,68,1.159,69,1.298,70,1.271,71,0.711,72,1.318,73,0.711,74,1.016,75,0.565,76,0.906,77,0.633,78,1.016,79,0.565,80,0.565,81,0.565,82,1.016,83,0.565,84,0.711,86,0.633,87,0.711,88,0.711,89,0.633,90,0.711,92,1.461,98,0.633,102,0.809,111,0.722,112,1.395,113,1.784,114,0.906,116,1.842,125,1.427,135,1.854,137,1.655,141,1.286,143,1.854,146,0.633,148,1.286,149,1.61,157,1.454,158,1.298,159,1.14,160,0.633,162,1.829,167,1.61,170,1.286,173,2.004,177,1.049,179,1.787,180,2.016,182,1.14,185,1.829,186,1.427,190,1.298,192,0.802,193,1.681,194,1.286,205,1.049,208,0.912,210,1.049,211,1.049,215,1.049,218,2.26,219,0.912,229,0.802,230,1.016,232,1.049,233,0.802,238,0.802,239,0.802,247,1.049,252,2.104,262,0.912,263,1.461,265,1.049,267,2.349,276,1.049,278,1.049,282,2.407,289,1.049,290,1.298,291,0.912,300,2.349,301,1.049,302,1.049,317,1.049,338,1.286,368,1.049,381,2.148,384,1.461,429,1.61,430,1.681,443,2.472,444,2.985,445,2.586,446,2.104,447,2.407,448,2.472,449,1.232,450,1.232,451,1.232,452,1.232,453,2.093,454,1.286,455,1.049,456,1.975,457,1.842,458,1.232,459,1.461,460,1.461,461,1.232,462,1.232,463,0.802,464,1.049,465,1.232,466,1.232,467,1.232,468,0.802,469,1.232,470,1.232,471,1.842,472,1.232,473,1.049,474,1.681,475,1.232,476,1.681,477,1.232,478,1.681,479,1.975,480,1.232,481,1.975,482,1.975,483,1.232,484,1.049,485,1.232,486,1.461,487,1.975,488,1.049,489,1.232,490,1.232,491,1.829,492,1.049,493,1.286,494,0.912,495,1.049,496,1.049,497,1.232,498,1.232,499,1.232,500,1.232,501,3.069,502,1.049,503,1.232,504,1.681,505,1.681,506,1.232,507,1.232,508,1.232,509,1.232,510,0.912,511,1.049,512,2.093,513,0.802,514,1.232,515,1.975,516,1.232,517,1.232,518,2.938,519,1.975,520,0.912,521,1.232,522,1.232,523,1.232,524,3.72,525,1.232,526,1.232,527,2.093,528,2.407,529,1.232,530,2.472,531,1.975,532,1.681,533,0.912,534,1.681,535,1.232,536,1.232,537,1.232,538,1.232,539,2.016,540,0.565,541,1.975,542,1.232,543,1.049,544,1.232,545,1.232,546,1.232,547,1.049,548,1.232,549,1.232,550,1.232,551,1.232,552,1.232,553,2.472,554,1.049,555,1.232,556,1.049,557,0.912,558,1.049,559,1.232,560,1.232,561,1.049,562,1.232,563,1.232,564,1.232,565,1.232,566,1.975,567,0.912,568,1.232,569,1.232,570,1.232,571,1.232,572,1.232,573,1.232,574,1.232,575,1.232,576,1.232,577,1.975,578,1.232,579,1.975,580,1.232,581,1.049,582,1.232,583,1.232,584,1.232,585,1.232,586,1.049,587,1.232,588,1.681,589,1.049,590,1.232,591,1.232,592,1.232,593,1.232,594,1.975,595,1.232,596,1.975,597,1.049,598,1.975,599,1.232,600,1.232,601,1.232,602,1.232,603,1.232,604,1.232,605,1.232,606,1.681,607,0.912,608,1.232,609,1.975,610,1.232,611,1.049,612,1.049,613,0.906,614,0.912,615,1.049,616,1.232,617,1.232,618,1.232,619,1.232,620,1.232,621,1.232,622,1.232,623,1.232,624,1.232,625,1.232,626,0.912,627,1.232,628,1.232,629,1.232,630,1.232,631,1.232,632,1.232,633,1.232,634,1.049,635,1.049,636,1.232,637,1.232,638,1.232,639,1.232,640,1.232,641,1.049,642,0.912,643,1.049]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["0",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["0.1.0",{"_index":423,"title":{},"body":{"dependencies.html":{},"additional-documentation/change-log.html":{}}}],["0.3.0",{"_index":961,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.3.4",{"_index":960,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.3.5",{"_index":953,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.3.8",{"_index":950,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.4.0",{"_index":945,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.4.2",{"_index":944,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.4.3",{"_index":943,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.6.0",{"_index":938,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.6.1",{"_index":937,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.6.2",{"_index":933,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.6.3",{"_index":932,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0.6.4",{"_index":930,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["0/1",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":913,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["07",{"_index":927,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["09",{"_index":921,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["1/2",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":916,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["100",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":912,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["15674:15674",{"_index":895,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["2",{"_index":697,"title":{},"body":{"overview.html":{},"additional-documentation/contributing.html":{}}}],["2.4.0",{"_index":506,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["2/2",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":446,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["20",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["200",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/variables.html":{}}}],["20000",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["2017",{"_index":646,"title":{},"body":{"license.html":{}}}],["2018",{"_index":484,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["23",{"_index":924,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["24",{"_index":922,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["31",{"_index":917,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["33",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":479,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["4.0.1",{"_index":925,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.2",{"_index":931,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.x.x",{"_index":478,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["5",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["5.0.0",{"_index":507,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["50",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["6",{"_index":447,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["6.0.0",{"_index":477,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["6.0.1",{"_index":926,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["6.1.0.beta.3",{"_index":923,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["6.1.0.beta.4",{"_index":920,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["6.x.x",{"_index":473,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["7",{"_index":696,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":910,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["7/7",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":929,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["87",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_mapstompstate(st",{"_index":323,"title":{},"body":{"injectables/StompRService.html":{}}}],["_stompservic",{"_index":566,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["abil",{"_index":934,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["abov",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["accept",{"_index":788,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["access",{"_index":802,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["accessor",{"_index":196,"title":{},"body":{"injectables/StompRService.html":{}}}],["account",{"_index":856,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["ack",{"_index":224,"title":{},"body":{"injectables/StompRService.html":{}}}],["acknowledg",{"_index":249,"title":{},"body":{"injectables/StompRService.html":{}}}],["action",{"_index":689,"title":{},"body":{"license.html":{}}}],["activ",{"_index":544,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["actual",{"_index":252,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["ad",{"_index":809,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{}}}],["add",{"_index":516,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["addit",{"_index":613,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["addition",{"_index":302,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["adjust",{"_index":739,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["advanc",{"_index":176,"title":{},"body":{"injectables/StompRService.html":{}}}],["affect",{"_index":742,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["ajax",{"_index":794,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["allow",{"_index":248,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{}}}],["alreadi",{"_index":294,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["altern",{"_index":164,"title":{},"body":{"injectables/StompConfig.html":{}}}],["alway",{"_index":296,"title":{},"body":{"injectables/StompRService.html":{}}}],["and/or",{"_index":664,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":462,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["angular",{"_index":445,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":170,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["angular4",{"_index":448,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["angular5",{"_index":449,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["angular6",{"_index":450,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["anoth",{"_index":796,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["apart",{"_index":816,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["api",{"_index":491,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["app_initi",{"_index":532,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["appli",{"_index":487,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["applic",{"_index":712,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appreci",{"_index":959,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["approach",{"_index":757,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["argument",{"_index":785,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["aris",{"_index":693,"title":{},"body":{"license.html":{}}}],["around",{"_index":741,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["artifact",{"_index":900,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["assign",{"_index":616,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["associ",{"_index":654,"title":{},"body":{"license.html":{}}}],["assum",{"_index":541,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["astha",{"_index":636,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["async",{"_index":575,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["asynchron",{"_index":187,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["attempt",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["author",{"_index":682,"title":{},"body":{"license.html":{}}}],["auto",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["automat",{"_index":222,"title":{},"body":{"injectables/StompRService.html":{}}}],["awar",{"_index":824,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["back",{"_index":749,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["backend",{"_index":761,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["background",{"_index":552,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["base",{"_index":262,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["be",{"_index":480,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["beat",{"_index":344,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{}}}],["befor",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["behaviorsubject",{"_index":278,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["behaviorsubject(stompstate.clos",{"_index":374,"title":{},"body":{"injectables/StompRService.html":{}}}],["believ",{"_index":778,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["below",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":564,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["beta.1",{"_index":915,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["beta.2",{"_index":911,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["beta.4",{"_index":424,"title":{},"body":{"dependencies.html":{},"additional-documentation/change-log.html":{}}}],["binari",{"_index":884,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["bodi",{"_index":274,"title":{},"body":{"injectables/StompRService.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["both",{"_index":481,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["branch",{"_index":476,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["break",{"_index":467,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["broken",{"_index":498,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["broker",{"_index":157,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["brokerurl",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brought",{"_index":863,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["browser",{"_index":714,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["btw",{"_index":808,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["build",{"_index":890,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["built",{"_index":899,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["bundl",{"_index":951,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["c",{"_index":645,"title":{},"body":{"license.html":{}}}],["call",{"_index":218,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["call.html",{"_index":130,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["callback",{"_index":242,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/change-log.html":{}}}],["carri",{"_index":245,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":760,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["chang",{"_index":468,"title":{"additional-documentation/change-log.html":{}},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["changelog",{"_index":502,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["charalampidi",{"_index":633,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["charg",{"_index":650,"title":{},"body":{"license.html":{}}}],["check",{"_index":715,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["checkout",{"_index":852,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["claim",{"_index":685,"title":{},"body":{"license.html":{}}}],["class",{"_index":14,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["clean",{"_index":914,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["cleanup",{"_index":897,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["clear",{"_index":859,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["cli",{"_index":504,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["client",{"_index":42,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["client';impl",{"_index":725,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["code",{"_index":539,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["cofig",{"_index":619,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["combin",{"_index":259,"title":{},"body":{"injectables/StompRService.html":{}}}],["come",{"_index":585,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["comment",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":733,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["compat",{"_index":454,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["compil",{"_index":941,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["complaint",{"_index":260,"title":{},"body":{"injectables/StompRService.html":{}}}],["complet",{"_index":261,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":946,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["compodoc",{"_index":494,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["compon",{"_index":565,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["comput",{"_index":770,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["concept",{"_index":803,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["condit",{"_index":668,"title":{},"body":{"license.html":{}}}],["config",{"_index":125,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["config(config",{"_index":337,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":351,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.head",{"_index":357,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":346,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":348,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.j",{"_index":878,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["config.reconnect_delay",{"_index":350,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.t",{"_index":8,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"coverage.html":{}}}],["config.url",{"_index":341,"title":{},"body":{"injectables/StompRService.html":{}}}],["configur",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["connect",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["connecthead",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectobserv",{"_index":197,"title":{},"body":{"injectables/StompRService.html":{}}}],["consol",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["console.log(`receiv",{"_index":583,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["console.log(`stomp",{"_index":603,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["console.log(message.bodi",{"_index":793,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["console.log(new",{"_index":354,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":338,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["constructor",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["constructor(_conf",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":378,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["constructor(rxstomp",{"_index":117,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["consum",{"_index":586,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["context",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":690,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":819,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":628,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["control",{"_index":612,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["convent",{"_index":743,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["convert",{"_index":594,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["copi",{"_index":557,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["copyright",{"_index":644,"title":{},"body":{"license.html":{}}}],["correct",{"_index":750,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{}}}],["correctli",{"_index":957,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["correl",{"_index":752,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correlationid",{"_index":768,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correspond",{"_index":265,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["coverag",{"_index":387,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":234,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["critic",{"_index":485,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["curiou",{"_index":624,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["current",{"_index":281,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/change-log.html":{}}}],["custom",{"_index":815,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["d",{"_index":893,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["damag",{"_index":686,"title":{},"body":{"license.html":{}}}],["date",{"_index":355,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":858,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["deal",{"_index":655,"title":{},"body":{"license.html":{}}}],["debug",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["deep",{"_index":637,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["deepak",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["default",{"_index":160,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["defaultconfig",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultmessagesobserv",{"_index":199,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultrxstompconfig",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["delay",{"_index":606,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["demo",{"_index":524,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":553,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["demo/tree/sockj",{"_index":533,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["demonstr",{"_index":529,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["depend",{"_index":190,"title":{"dependencies.html":{}},"body":{"injectables/StompRService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["deriv",{"_index":786,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["descript",{"_index":109,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["design",{"_index":240,"title":{},"body":{"injectables/StompRService.html":{}}}],["destin",{"_index":209,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["detail",{"_index":116,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["develop",{"_index":738,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["differ",{"_index":823,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["dimitri",{"_index":632,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["directli",{"_index":949,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["disabl",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["disconnect",{"_index":192,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["disconnectrxstompandensur",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnectrxstompandensure(rxstomp",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["disconnetstomprandensur",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":662,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["do",{"_index":872,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["doc",{"_index":901,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["docker",{"_index":889,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["dockerfil",{"_index":887,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":158,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["documentation/rpc",{"_index":127,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["documentation/sock",{"_index":536,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["don't",{"_index":727,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["done",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":220,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/contributing.html":{}}}],["due",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["dure",{"_index":237,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/contributing.html":{}}}],["each",{"_index":255,"title":{},"body":{"injectables/StompRService.html":{}}}],["echo",{"_index":773,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["edit",{"_index":876,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["edit/writ",{"_index":820,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["emit",{"_index":280,"title":{},"body":{"injectables/StompRService.html":{}}}],["emul",{"_index":730,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["end",{"_index":285,"title":{},"body":{"injectables/StompRService.html":{}}}],["endpoint",{"_index":758,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ensurerxstompconnect",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurerxstompconnected(rxstomp",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurerxstompdisconnect",{"_index":410,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurerxstompdisconnected(rxstomp",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestompconnect",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":598,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["enumer",{"_index":426,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/contributing.html":{}}}],["equal",{"_index":780,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["error",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"additional-documentation/change-log.html":{}}}],["errorsubject",{"_index":201,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":184,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["establish",{"_index":289,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["etc",{"_index":573,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["etc/rabbitmq/rabbitmq.conf",{"_index":886,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["even",{"_index":219,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["event",{"_index":303,"title":{},"body":{"injectables/StompRService.html":{},"license.html":{}}}],["everyon",{"_index":640,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["exactli",{"_index":490,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["exampl",{"_index":159,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["expect",{"_index":782,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["explicitli",{"_index":225,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":13,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":675,"title":{},"body":{"license.html":{}}}],["extend",{"_index":15,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":465,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["factory.t",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fail",{"_index":736,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":555,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["fetch",{"_index":530,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["few",{"_index":615,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["field",{"_index":223,"title":{},"body":{"injectables/StompRService.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["filter",{"_index":572,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["find",{"_index":497,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["finnigan",{"_index":630,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["first",{"_index":855,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["fit",{"_index":678,"title":{},"body":{"license.html":{}}}],["fix",{"_index":928,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["folder",{"_index":867,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["follow",{"_index":471,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["forcedisconnect",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["fork",{"_index":854,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["form",{"_index":718,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":835,"title":{},"body":{"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["forward",{"_index":470,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["frame",{"_index":243,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["framework",{"_index":829,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["free",{"_index":556,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["frequent",{"_index":729,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":43,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":667,"title":{},"body":{"license.html":{}}}],["futur",{"_index":720,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{}}}],["gener",{"_index":505,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["get",{"_index":213,"title":{"index.html":{},"license.html":{}},"body":{"injectables/StompRService.html":{},"additional-documentation/contributing.html":{}}}],["getclient",{"_index":314,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobserv",{"_index":286,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobserv",{"_index":305,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":310,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobserv",{"_index":308,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobserv",{"_index":298,"title":{},"body":{"injectables/StompRService.html":{}}}],["git",{"_index":846,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["github",{"_index":853,"title":{},"body":{"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["give",{"_index":805,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["go",{"_index":469,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["grant",{"_index":649,"title":{},"body":{"license.html":{}}}],["guest",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["guid",{"_index":115,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["guide](../addit",{"_index":126,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["guidelin",{"_index":860,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["hack",{"_index":737,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":178,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["hard",{"_index":456,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["hash",{"_index":554,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["head",{"_index":500,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["header",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["heart",{"_index":343,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["heartbeat_in",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["heartbeat_out",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["heartbeatincom",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heartbeatoutgo",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":787,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["help",{"_index":958,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["helpers.t",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":765,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["herebi",{"_index":648,"title":{},"body":{"license.html":{}}}],["holder",{"_index":683,"title":{},"body":{"license.html":{}}}],["host",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["host:str",{"_index":144,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":531,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["http://angular.io",{"_index":830,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["http://karma",{"_index":841,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":550,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["https://compodoc.app",{"_index":837,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":716,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://git",{"_index":847,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://github.com/dherges/ng",{"_index":836,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://github.com/stomp",{"_index":518,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["https://jasmine.github.io",{"_index":839,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://nodejs.org",{"_index":844,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://stomp",{"_index":267,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["https://www.npmjs.com",{"_index":845,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":570,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["https://www.rabbitmq.com/stomp.html#d.tqd",{"_index":779,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/tutorials/tutori",{"_index":753,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/web",{"_index":545,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["https://www.typescriptlang.org",{"_index":832,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["i.",{"_index":745,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["id",{"_index":253,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ideal",{"_index":799,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["identifi",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":295,"title":{},"body":{"injectables/StompRService.html":{}}}],["immedi",{"_index":283,"title":{},"body":{"injectables/StompRService.html":{}}}],["implement",{"_index":110,"title":{},"body":{"injectables/RxStompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["impli",{"_index":676,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["improv",{"_index":942,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["includ",{"_index":658,"title":{},"body":{"license.html":{}}}],["incom",{"_index":151,"title":{},"body":{"injectables/StompConfig.html":{}}}],["incomingmessag",{"_index":771,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["inconsist",{"_index":499,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":940,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":717,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":193,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["initi",{"_index":290,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["initstomp",{"_index":618,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["inject",{"_index":0,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["injectablerxstompconfig",{"_index":1,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":19,"title":{"injectables/InjectableRxStompRpcConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["injection.html",{"_index":551,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["instal",{"_index":512,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["instanc",{"_index":166,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":614,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["instruct",{"_index":849,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["interest",{"_index":604,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["intern",{"_index":589,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["interv",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["invok",{"_index":264,"title":{},"body":{"injectables/StompRService.html":{}}}],["involv",{"_index":641,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["ionic",{"_index":509,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["issu",{"_index":238,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["jasmin",{"_index":838,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["javascript",{"_index":369,"title":{},"body":{"injectables/StompRService.html":{}}}],["jimi",{"_index":631,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["js",{"_index":711,"title":{"additional-documentation/sock-js.html":{}},"body":{"additional-documentation/change-log.html":{}}}],["js.github.io/ng2",{"_index":501,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["js.github.io/stomp",{"_index":721,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.github.io/stompjs/classes/client.html#watchforreceipt",{"_index":277,"title":{},"body":{"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/frame.html",{"_index":268,"title":{},"body":{"injectables/StompRService.html":{}}}],["js.html",{"_index":537,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["js/ng2",{"_index":528,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["js/ng4",{"_index":527,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["js/ng5",{"_index":526,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["js/ng6",{"_index":525,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["js/stomp",{"_index":519,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["json",{"_index":593,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["json.stringifi",{"_index":595,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["jump",{"_index":939,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["karma",{"_index":840,"title":{},"body":{"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["kept",{"_index":871,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["key",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["kind",{"_index":674,"title":{},"body":{"license.html":{}}}],["kumar",{"_index":635,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["languag",{"_index":759,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["later",{"_index":862,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["leav",{"_index":228,"title":{},"body":{"injectables/StompRService.html":{}}}],["liabil",{"_index":687,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":684,"title":{},"body":{"license.html":{}}}],["librari",{"_index":182,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["licens",{"_index":642,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["limit",{"_index":659,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":368,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["lint",{"_index":903,"title":{},"body":{"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["list",{"_index":174,"title":{},"body":{"injectables/StompRService.html":{}}}],["local",{"_index":210,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["localhost",{"_index":163,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/contributing.html":{}}}],["log",{"_index":86,"title":{"additional-documentation/change-log.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["login",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["longer",{"_index":947,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["look",{"_index":561,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["lot",{"_index":864,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["magic",{"_index":777,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["main",{"_index":547,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["maintain",{"_index":482,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["make",{"_index":463,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["manag",{"_index":474,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["mani",{"_index":732,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["manual",{"_index":384,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["map",{"_index":276,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["map((stat",{"_index":600,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["master",{"_index":475,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["match",{"_index":18,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["mean",{"_index":227,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["merchant",{"_index":677,"title":{},"body":{"license.html":{}}}],["merg",{"_index":661,"title":{},"body":{"license.html":{},"additional-documentation/change-log.html":{}}}],["messag",{"_index":113,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["message');pleas",{"_index":592,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["message.bodi",{"_index":581,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["message.headers['correl",{"_index":769,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message.headers['repli",{"_index":767,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["method",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["michel",{"_index":638,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["millisecond",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["miscellan",{"_index":425,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":236,"title":{},"body":{"injectables/StompRService.html":{}}}],["mit",{"_index":643,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["mode",{"_index":919,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["modifi",{"_index":558,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/v6-readme.html":{}}}],["modul",{"_index":694,"title":{"modules.html":{}},"body":{"modules.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["more",{"_index":625,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["msg",{"_index":275,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/variables.html":{}}}],["msg_bodi",{"_index":584,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["mssage",{"_index":235,"title":{},"body":{"injectables/StompRService.html":{}}}],["multipl",{"_index":458,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["myrabbitmq",{"_index":892,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["myserviceendpoint",{"_index":762,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["mystomprservic",{"_index":22,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":91,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":97,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["necessari",{"_index":888,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["need",{"_index":173,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["neeed",{"_index":145,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["ng",{"_index":833,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["node",{"_index":851,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["nodej",{"_index":843,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["noninfring",{"_index":681,"title":{},"body":{"license.html":{}}}],["note",{"_index":229,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["notic",{"_index":669,"title":{},"body":{"license.html":{}}}],["now",{"_index":488,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["npm",{"_index":513,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["number",{"_index":149,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["object",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":185,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["obtain",{"_index":652,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":735,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["occur",{"_index":293,"title":{},"body":{"injectables/StompRService.html":{}}}],["octob",{"_index":483,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["offer",{"_index":489,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["old",{"_index":713,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":731,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["onc",{"_index":626,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["oper",{"_index":247,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["option",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["organ",{"_index":861,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["origin",{"_index":857,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["otherwis",{"_index":692,"title":{},"body":{"license.html":{}}}],["out",{"_index":246,"title":{},"body":{"injectables/StompRService.html":{},"license.html":{}}}],["outgo",{"_index":153,"title":{},"body":{"injectables/StompConfig.html":{}}}],["outgoingmessag",{"_index":772,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["outlin",{"_index":806,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["overview",{"_index":695,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":894,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["packag",{"_index":422,"title":{"dependencies.html":{}},"body":{"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["packagr",{"_index":834,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["page",{"_index":540,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["param",{"_index":361,"title":{},"body":{"injectables/StompRService.html":{}}}],["paramet",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["part",{"_index":790,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{}}}],["particular",{"_index":679,"title":{},"body":{"license.html":{}}}],["pass",{"_index":146,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["passcod",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["path",{"_index":870,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["per",{"_index":597,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["permiss",{"_index":647,"title":{},"body":{"license.html":{}}}],["permit",{"_index":666,"title":{},"body":{"license.html":{}}}],["person",{"_index":651,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":576,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["pleas",{"_index":114,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["plugin",{"_index":543,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["portion",{"_index":672,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["potenti",{"_index":627,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["prerequisit",{"_index":538,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["primari",{"_index":827,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["privat",{"_index":321,"title":{},"body":{"injectables/StompRService.html":{}}}],["procedur",{"_index":129,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/RxStompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["process",{"_index":611,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["product",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":751,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["project",{"_index":510,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["promonet",{"_index":639,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["properti",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["provid",{"_index":300,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["public",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["publish",{"_index":194,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"license.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["publish(queuenam",{"_index":205,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["publishparam",{"_index":206,"title":{},"body":{"injectables/StompRService.html":{}}}],["pubparam",{"_index":365,"title":{},"body":{"injectables/StompRService.html":{}}}],["pull",{"_index":822,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["purpos",{"_index":680,"title":{},"body":{"license.html":{}}}],["python.html",{"_index":755,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["queu",{"_index":211,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["queue",{"_index":180,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["queuenam",{"_index":214,"title":{},"body":{"injectables/StompRService.html":{}}}],["quit",{"_index":464,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["r.servic",{"_index":382,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":169,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:127",{"_index":204,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:138",{"_index":203,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:152",{"_index":207,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:178",{"_index":216,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:210",{"_index":244,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:214",{"_index":315,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:216",{"_index":202,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:35",{"_index":279,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:58",{"_index":287,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:71",{"_index":299,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:78",{"_index":306,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:85",{"_index":309,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:93",{"_index":311,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":313,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":148,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["rais",{"_index":496,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["random",{"_index":258,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":270,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":171,"title":{},"body":{"injectables/StompRService.html":{}}}],["re)connect",{"_index":292,"title":{},"body":{"injectables/StompRService.html":{}}}],["read",{"_index":534,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["readi",{"_index":610,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["readm",{"_index":380,"title":{"additional-documentation/v6-readme.html":{}},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":455,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["reap",{"_index":563,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["rearrang",{"_index":875,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["reason",{"_index":801,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["receipt",{"_index":250,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptid",{"_index":269,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobserv",{"_index":200,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiv",{"_index":266,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["recent",{"_index":301,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["reconnect",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["reconnect_delay",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["reconnectdelay",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refer",{"_index":156,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/change-log.html":{}}}],["regener",{"_index":908,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["releas",{"_index":460,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["remain",{"_index":818,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["remot",{"_index":128,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/RxStompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["remov",{"_index":898,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["repli",{"_index":747,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyqueuenam",{"_index":810,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyto",{"_index":766,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["report",{"_index":508,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["repositori",{"_index":955,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["repres",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":233,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["request).subscribe((messag",{"_index":792,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["request/respons",{"_index":746,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["requir",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["require.context",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourc",{"_index":559,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["respons",{"_index":304,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["restrict",{"_index":657,"title":{},"body":{"license.html":{}}}],["resubscrib",{"_index":221,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":17,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["right",{"_index":660,"title":{},"body":{"license.html":{}}}],["rout",{"_index":748,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rpc",{"_index":20,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{}}}],["rpc.service.t",{"_index":108,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:13",{"_index":120,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["run",{"_index":162,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["runner.github.io",{"_index":842,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["rx",{"_index":6,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxj",{"_index":317,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["rxjs/oper",{"_index":318,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp",{"_index":121,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["rxstomp.publish({destin",{"_index":272,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":271,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":11,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig.brokerurl",{"_index":340,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connecthead",{"_index":356,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":352,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincom",{"_index":345,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgo",{"_index":347,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":349,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.websocketfactori",{"_index":342,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":123,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rxstomprpcconfig",{"_index":21,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{}}}],["rxstomprpcservic",{"_index":106,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservic",{"_index":118,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["rxstompservicefactori",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstat",{"_index":316,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.clos",{"_index":328,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connect",{"_index":325,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":327,"title":{},"body":{"injectables/StompRService.html":{}}}],["safe",{"_index":217,"title":{},"body":{"injectables/StompRService.html":{}}}],["sam",{"_index":629,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["same",{"_index":459,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["sampl",{"_index":381,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["saniti",{"_index":865,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["saveimport",{"_index":724,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":514,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["scheme",{"_index":472,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["scm.com",{"_index":848,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["second",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["secur",{"_index":800,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["see",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["sell",{"_index":665,"title":{},"body":{"license.html":{}}}],["semant",{"_index":568,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["send",{"_index":208,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["sent",{"_index":251,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sequenc",{"_index":256,"title":{},"body":{"injectables/StompRService.html":{}}}],["serv",{"_index":902,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["server",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["serverheadersobserv",{"_index":198,"title":{},"body":{"injectables/StompRService.html":{}}}],["servic",{"_index":111,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["set",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["setconfig(config",{"_index":312,"title":{},"body":{"injectables/StompRService.html":{}}}],["setup",{"_index":161,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["setupreplyqueu",{"_index":813,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sever",{"_index":549,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["shall",{"_index":670,"title":{},"body":{"license.html":{}}}],["show",{"_index":284,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":165,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpl",{"_index":781,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpli",{"_index":812,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simplifi",{"_index":804,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simul",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["singl",{"_index":798,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["six",{"_index":754,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sock",{"_index":710,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":653,"title":{},"body":{"license.html":{}}}],["soon",{"_index":212,"title":{},"body":{"injectables/StompRService.html":{}}}],["soucresbas",{"_index":904,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{}}}],["spec",{"_index":869,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["spec/config/brows",{"_index":877,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["spec/config/nod",{"_index":879,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["spec\\.t",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":492,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["specif",{"_index":186,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["specifi",{"_index":560,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["src",{"_index":866,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["src/.../environment.prod.t",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rx",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../stomp",{"_index":427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../stomp.service.factory.t",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.t",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/changelog.md",{"_index":907,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["src/environments/environment.prod.t",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/inject",{"_index":5,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"coverage.html":{}}}],["src/rx",{"_index":107,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/sockjs.md.html",{"_index":723,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/spec",{"_index":906,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["src/specs/app/services/compatibility/helpers.t",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/compatibility/stomp.service.factory.t",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/compatibility/stomp.service.factory.ts:42",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/compatibility/stomp.service.factory.ts:50",{"_index":105,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/compatibility/stomp.service.factory.ts:63",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/specs/app/services/rx",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/stomp",{"_index":168,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/stomp.config.t",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":155,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":150,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":152,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":154,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":377,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":379,"title":{},"body":{"injectables/StompService.html":{}}}],["src/test.t",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":324,"title":{},"body":{"injectables/StompRService.html":{}}}],["start",{"_index":442,"title":{"index.html":{},"license.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["state",{"_index":191,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":322,"title":{},"body":{"injectables/StompRService.html":{}}}],["statu",{"_index":282,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["step",{"_index":817,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomp",{"_index":7,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp.config",{"_index":320,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.html",{"_index":546,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp.j",{"_index":181,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.servic",{"_index":124,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.t",{"_index":132,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp/ng2",{"_index":443,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp/rx",{"_index":12,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"dependencies.html":{},"additional-documentation/change-log.html":{}}}],["stomp/stomp.j",{"_index":172,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":167,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":587,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp_subscript",{"_index":577,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stomp_subscription.map((messag",{"_index":580,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompconfig",{"_index":40,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stompconfigservic",{"_index":948,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["stomphead",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stompj",{"_index":444,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/addit",{"_index":535,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/changelog.html",{"_index":503,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/index.html",{"_index":523,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":522,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":590,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":935,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":571,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":521,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompjs/rx",{"_index":918,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["stompjsthi",{"_index":517,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stomprpcconfig",{"_index":119,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomprpcconfigforactivemq",{"_index":807,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservic",{"_index":783,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservice.rpc(myserviceendpoint",{"_index":791,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprservic",{"_index":24,"title":{"injectables/StompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["stomprservice._mapstompstate(st",{"_index":332,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservic",{"_index":39,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["stompservice.publish(replyto",{"_index":774,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.st",{"_index":596,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["stompservice.subscribe(myserviceendpoint).subscribe((messag",{"_index":764,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.subscribe(replyqueuenam",{"_index":814,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservicefactori",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":319,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.clos",{"_index":330,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connect",{"_index":297,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnect",{"_index":329,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.tri",{"_index":326,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate[st",{"_index":601,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["str",{"_index":353,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":188,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["streamlin",{"_index":719,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["string|publishparam",{"_index":362,"title":{},"body":{"injectables/StompRService.html":{}}}],["structur",{"_index":567,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["style",{"_index":451,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["sub",{"_index":579,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["subject",{"_index":307,"title":{},"body":{"injectables/StompRService.html":{},"license.html":{}}}],["sublicens",{"_index":663,"title":{},"body":{"license.html":{}}}],["submit",{"_index":821,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["subscrib",{"_index":179,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["subscribe((msg_bodi",{"_index":582,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["subscribe((statu",{"_index":602,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["subscribe(queuenam",{"_index":215,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["subscript",{"_index":232,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["substanti",{"_index":671,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":461,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["success",{"_index":623,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["summari",{"_index":825,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["super",{"_index":372,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(_conf",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["super(rxstomp",{"_index":131,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparam",{"_index":366,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destin",{"_index":364,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":370,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":457,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["switch",{"_index":493,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["t",{"_index":891,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["tabl",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":828,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["task",{"_index":896,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["techniqu",{"_index":608,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["tell",{"_index":883,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["temp",{"_index":775,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["templat",{"_index":574,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["temporari",{"_index":231,"title":{},"body":{"injectables/StompRService.html":{}}}],["termin",{"_index":797,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["test",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["test.destin",{"_index":273,"title":{},"body":{"injectables/StompRService.html":{}}}],["testb",{"_index":954,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["text",{"_index":882,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["thing",{"_index":776,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["third",{"_index":789,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["this._stompcli",{"_index":371,"title":{},"body":{"injectables/StompRService.html":{}}}],["this._stompservice.config",{"_index":621,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this._stompservice.connectobserv",{"_index":605,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this._stompservice.initandconnect",{"_index":622,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":591,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this._stompservice.st",{"_index":599,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":578,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this.activ",{"_index":360,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.client.forcedisconnect",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":385,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":358,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":331,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":375,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactiv",{"_index":359,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":620,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["this.initandconnect",{"_index":386,"title":{},"body":{"injectables/StompService.html":{}}}],["this.serverhead",{"_index":333,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stat",{"_index":373,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":376,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperror",{"_index":336,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledmessag",{"_index":334,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipt",{"_index":335,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.watch(queuenam",{"_index":367,"title":{},"body":{"injectables/StompRService.html":{}}}],["those",{"_index":734,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["though",{"_index":726,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":609,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["time",{"_index":291,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["tool",{"_index":826,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["topic/echo",{"_index":763,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["topic/replies.${uuid.uuid",{"_index":811,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["tort",{"_index":691,"title":{},"body":{"license.html":{}}}],["travi",{"_index":936,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["treat",{"_index":881,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["tri",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["trigger",{"_index":288,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":90,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["ts",{"_index":952,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["turn",{"_index":784,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["two",{"_index":744,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["type",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/change-log.html":{}}}],["typedoc",{"_index":495,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["typeof",{"_index":363,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":339,"title":{},"body":{"injectables/StompRService.html":{}}}],["typescript",{"_index":831,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["typic",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["unabl",{"_index":956,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["unclear",{"_index":909,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["uncom",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undergon",{"_index":466,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["underli",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["understand",{"_index":226,"title":{},"body":{"injectables/StompRService.html":{}}}],["uniqu",{"_index":254,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["unit",{"_index":740,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unless",{"_index":175,"title":{},"body":{"injectables/StompRService.html":{}}}],["unsubscrib",{"_index":588,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["up",{"_index":850,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["updat",{"_index":486,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["url",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["us",{"_index":112,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["usag",{"_index":520,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["user",{"_index":177,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/v6-readme.html":{}}}],["user/password",{"_index":962,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["usevalu",{"_index":562,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["usual",{"_index":607,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["uuid",{"_index":257,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["v6",{"_index":874,"title":{"additional-documentation/v6-readme.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["v8",{"_index":873,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["valu",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["vari",{"_index":569,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["variabl",{"_index":391,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":756,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["version",{"_index":453,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["via",{"_index":183,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["viaclass",{"_index":548,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["virtual",{"_index":147,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":38,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/variables.html":{}}}],["wait",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["waitforreceipt",{"_index":195,"title":{},"body":{"injectables/StompRService.html":{},"additional-documentation/change-log.html":{}}}],["waitforreceipt(receiptid",{"_index":241,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":383,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":673,"title":{},"body":{"license.html":{}}}],["watch",{"_index":263,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/contributing.html":{},"additional-documentation/v6-readme.html":{}}}],["way",{"_index":239,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["web",{"_index":542,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["web_stomp.ws_fram",{"_index":885,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["websocket",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/v6-readme.html":{}}}],["websocket/codo/extra/doc",{"_index":722,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["webstomp",{"_index":880,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["well",{"_index":511,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/v6-readme.html":{}}}],["whether",{"_index":688,"title":{},"body":{"license.html":{}}}],["wire",{"_index":189,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":868,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["without",{"_index":656,"title":{},"body":{"license.html":{}}}],["work",{"_index":230,"title":{},"body":{"injectables/StompRService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{},"additional-documentation/change-log.html":{},"additional-documentation/v6-readme.html":{}}}],["workflow",{"_index":905,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["worri",{"_index":728,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":452,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/v6-readme.html":{}}}],["yarn",{"_index":515,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}],["ye",{"_index":122,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":795,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["yourclass",{"_index":617,"title":{},"body":{"index.html":{},"additional-documentation/v6-readme.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/injectable-rx-stomp-config.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRpcConfig.html":{"url":"injectables/InjectableRxStompRpcConfig.html","title":"injectable - InjectableRxStompRpcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRpcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/injectable-rx-stomp-rpc-config.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n@Injectable()\nexport class InjectableRxStompRpcConfig extends RxStompRPCConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/compatibility/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/compatibility/stomp.service.factory.ts:63\n                            \n                        \n\n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../../../';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 200,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.forceDisconnect();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.forceDisconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/compatibility/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/compatibility/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/compatibility/stomp.service.factory.ts:50\n                            \n                        \n\n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../../../';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 200,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.forceDisconnect();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.forceDisconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of RPC service using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRpcConfig)\n                    \n                \n                        \n                            \n                                Defined in src/rx-stomp-rpc.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRpcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRpcConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * An implementation of RPC service using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRpcConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StompHeaders } from '@stomp/stompjs';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/stomp-r.service.ts:216\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-r.service.ts:138\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-r.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-r.service.ts:152\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-r.service.ts:178\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-r.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual https://stomp-js.github.io/stompjs/classes/Frame.html\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-r.service.ts:35\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:58\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:71\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:78\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:85\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:93\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in src/stomp-r.service.ts:214\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/injectable-rx-stomp-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/injectable-rx-stomp-rpc-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompRpcConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rx-stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompRPCService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/rx-stomp-service-factory.ts\n            \n            \n                function\n            \n            \n                rxStompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rx-stomp.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/compatibility/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/rx-helpers.ts\n            \n            \n                function\n            \n            \n                disconnectRxStompAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/rx-helpers.ts\n            \n            \n                function\n            \n            \n                ensureRxStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/rx-helpers.ts\n            \n            \n                function\n            \n            \n                ensureRxStompDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specs/app/services/rx-helpers.ts\n            \n            \n                variable\n            \n            \n                defaultRxStompConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/rx-stomp : 0.1.0-beta.4\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnectRxStompAndEnsure   (src/.../rx-helpers.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureRxStompConnected   (src/.../rx-helpers.ts)\n                        \n                        \n                            ensureRxStompDisconnected   (src/.../rx-helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            rxStompServiceFactory   (src/.../rx-stomp-service-factory.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/compatibility/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/rx-helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectRxStompAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectRxStompAndEnsure(rxStomp, done: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureRxStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureRxStompConnected(rxStomp, done: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureRxStompDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureRxStompDisconnected(rxStomp, done: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/compatibility/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService, done)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService, done)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService, done)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaultRxStompConfig   (src/.../rx-helpers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/specs/app/services/rx-helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRxStompConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultRxStompConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Which server?\n  brokerURL: 'ws://127.0.0.1:15674/ws',\n\n  // Headers\n  // Typical keys: login, passcode, host\n  connectHeaders: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How often to heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeatIncoming: 0, // Typical value 0 - disabled\n  heartbeatOutgoing: 0, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnectDelay: 200,\n\n  // Will log diagnostics on console\n  debug: (msg: string): void => {\n    console.log(new Date(), msg);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rpc---remote-procedure-call.html":{"url":"additional-documentation/rpc---remote-procedure-call.html","title":"additional-page - RPC - Remote Procedure Call","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRPC - Remote Procedure Call\nMessaging usually works one way.\nThere is however a convention for two way communication (i.e. request/response).\nThis involves reply-to queues which routes the response back to correct client program\nand correlation-id to uniquely match a response to the correct request.\nSee: https://www.rabbitmq.com/tutorials/tutorial-six-python.html for a sample using\na very similar approach.\nImplementing the RPC server endpoint\nThis can be implemented in any language, in most cases it will be there in some backend server.\n    const myServiceEndPoint = '/topic/echo';\n\n    stompService.subscribe(myServiceEndPoint).subscribe((message: Message) => {\n      // The response needs to be sent back here\n      const replyTo = message.headers['reply-to'];\n\n      // Same correlation id needs to be sent back as message header\n      const correlationId = message.headers['correlation-id'];\n\n      // Process the request, compute the response\n      const incomingMessage = message.body;\n\n      const outgoingMessage = 'Echoing - ' + incomingMessage;\n\n      // Send the response back to destination `replyTo` with `correlation-id` header\n      stompService.publish(replyTo, outgoingMessage, {'correlation-id' : correlationId});\n    });Using it from the client\nRabbitMQ\nRabbitMQ has special support for temp-queues in reply-to messages\nwhich make things to work magically. Really I mean it.\nIf you don't believe me check details at https://www.rabbitmq.com/stomp.html#d.tqd\nWell the client code looks equally simple and similar to what you would expect\nto use with any backend service.\nThe StompRPCService can be created by means of Angular Dependency Injection\nor be created manually.\nIt in turns needs an initialized StompRService as\na dependency (or argument).\nStompService is a derived class of StompRService, so that will work as well.\n    const myServiceEndPoint = '/topic/echo';\n\n    const request = 'Hello';\n    // It accepts a optional third argument a Hash of headers to be sent as part of the request\n    stompRPCService.rpc(myServiceEndPoint, request).subscribe((message: Message) => {\n      // Consume the response\n      console.log(message.body);\n    });Just like Ajax requests, it will yield only once.\nThere is another method called stream that will not terminate after one response.\nThis can be used to receive stream of responses for a single request.\nIf you use that it will be your responsibility to unsubscribe when you do not expect\nany additional messages.\nOther Brokers\nThere are few requirements:\n\nthe reply queue name must be unique across the broker.\nideally, for security reasons only the client creating the queue should have access to it.\n\nMany brokers have temp-queue concept which should simplify your work. \nFollowing gives and outline:\n  const stompRPCConfigForActiveMQ = {\n    // A unique name, BTW angular2-uuid module is already added as dependency\n    replyQueueName: `/topic/replies.${UUID.UUID()}`,\n\n    // Simply subscribe, you would need to secure by adding broker specific options\n    setupReplyQueue: (replyQueueName: string, stompService: StompRService) => {\n      return stompService.subscribe(replyQueueName);\n    }\n  };This custom config would need to be passed as second parameter in StompRPCService\nconstructor, or, can be passed as an Angular Dependency.\nApart from this additional setup step usage remains same as RabbitMQ case as documented above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nHow to contribute\n\nFile issues.\nEdit/write documentation.\nSubmit pull requests.\nTest in different environments.\nRaise awareness.\n\nSummary of tools\nFollowing tools are getting used:\n\nAngular as primary target framework http://angular.io/\nTypeScript as primary language - https://www.typescriptlang.org/\nng-packagr to generate Angular specific package format - https://github.com/dherges/ng-packagr\ncompodoc for API documentation - https://compodoc.app/\nJasmine for test cases - https://jasmine.github.io/\nKarma for running test cases in browsers - http://karma-runner.github.io/\nnodejs during development - https://nodejs.org/\nnpm for dependency management, packaging and distribution - https://www.npmjs.com/\ngit for version control - https://git-scm.com/\n\nInitial setup\nInstructions on setting up development environment:\n\nInstall node and npm - https://nodejs.org/\nCheckout code from GitHub - you may fork the code first into your GitHub account.\nUse npm i to install dependencies:  $ npm i\n\nProject structure\nThe project was originally generated by angular-cli (at Angular 2).\nIn those days there was no clear guideline on how to create and organize an\nAngular library.\nLater it switched to ng-packagr which brought quite a lot of sanity.\nThe source code is in src folder.\nAll the test case files are within specs which is not what typically Angular\nprojects do.\nBecause of compatibility reasons paths of specific files have been kept same.\nWhile doing v8 - when v6 compatibility would be dropped, the source code is\nlikely to be rearranged.\nSetup a Stomp broker\n\nA Stomp broker is used for running the tests. I have been using RabbitMQ.\nEdit spec/config/browser-config.js and spec/config/node-config.js as per\nyour setup. Defaults should work for as RabbitMQ default setup on localhost.\nPlease note that in RabbitMQ you will need to enable Stomp and WebStomp plugins.\nBy default RabbitMQ WebStomp will treat messages a text, you will need to tell\nit is use binary frames:  $ echo 'web_stomp.ws_frame = binary' >> /etc/rabbitmq/rabbitmq.conf\nA RabbitMQ Dockerfile is provided with necessary plugins and configuration. To use it, run:  $ docker build -t myrabbitmq rabbitmq/ # Needed only once\n  $ docker run -d -p 15674:15674 myrabbitmq # to start the broker\n\nBuilding and testing\nKey npm tasks:\ncleanup - Remove generated built artifacts\ndoc - Generate docs\ndoc-serve - Generate docs and watch for changes\ntest - Run tests\nlint - run lint on soucresBasic development workflow\n\nCheckout a new branch.\nMake code changes (src/specs)\nRun tests: $ npm run test\nLint: $ npm run lint\nUpdate documentation - do update the docs-src/Changelog.md\nRegenerate documentation: $ npm run doc\nPlease follow GitHub guidelines. Raise an issue if you are unclear.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/change-log.html":{"url":"additional-documentation/change-log.html","title":"additional-page - Change Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\n7.0.0-beta.2 2018-11-04\n\nTest cases and documentation updates, lint clean\nUpdate @stomp/rx-stomp to 0.1.0-beta.4\n\n7.0.0-beta.1 2018-10-31\n\nBased on @stompjs/rx-stomp\nCompatibility mode working\n\n6.1.0.beta.4 2018-09-24\n\nCorrect packaging error\n\n6.1.0.beta.3 2018-09-23\n\nRPC support\n\n4.0.1 & 6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/v6-readme.html":{"url":"additional-documentation/v6-readme.html","title":"additional-page - v6 Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
