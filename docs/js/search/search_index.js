var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.371,1,1.871]],["body/modules/AppModule.html",[0,1.729,1,2.888,2,1.729,3,1.496,4,0.827,5,3.541,6,1.715,7,0.057,8,4.334,9,3.541,10,2.829,11,4.334,12,2.359,13,3.541,14,2.359,15,3.541,16,1.496,17,0.7,18,0.046,19,0.046]],["title/classes/MyStompRService.html",[17,0.555,20,1.593]],["body/classes/MyStompRService.html",[2,1.015,3,0.878,4,0.486,6,1.109,7,0.057,16,1.765,17,0.707,18,0.032,19,0.032,20,1.719,21,1.179,22,2.382,23,1.746,24,0.659,25,2.783,26,2.229,27,3.336,28,1.179,29,2.079,30,2.473,31,2.028,32,1.746,33,2.856,34,2.856,35,2.856,36,1.66,37,2.856,38,0.827,39,1.073,40,1.51,41,1.179,42,1.309,43,1.479,44,1.015,45,2.42,46,1.746,47,1.385,48,1.719,49,1.479,50,1.179,51,0.878,52,1.179,53,1.661,54,1.385,55,1.661,56,1.015,57,1.109,58,1.918,59,1.015,60,1.479,61,1.479,62,1.015,63,1.719,64,1.015,65,1.015,66,1.479,67,1.479,68,1.765,69,1.746,70,1.015,71,1.133,72,1.015,73,1.015,74,0.878,75,1.479,76,1.015,77,1.015,78,1.015,79,1.015,80,1.015,81,1.015,82,0.878,83,1.015,84,1.661,85,1.179,86,1.179,87,1.179,88,1.015,89,1.015,90,1.179,91,1.385,92,1.385,93,1.661,94,2.42,95,1.385,96,1.661]],["title/classes/MyStompService.html",[17,0.555,90,1.593]],["body/classes/MyStompService.html",[2,0.986,3,0.853,4,0.472,6,1.086,7,0.057,16,1.744,17,0.695,18,0.031,19,0.031,20,1.146,21,1.146,22,2.343,23,1.448,24,0.64,25,2.75,26,2.198,27,3.297,28,1.683,30,2.448,31,1.995,32,1.717,33,2.809,34,2.809,35,2.809,36,1.637,37,2.809,38,0.96,39,1.178,40,1.485,41,1.146,42,1.287,43,1.448,44,0.986,45,2.37,46,1.717,47,1.345,48,1.683,49,1.448,50,1.146,51,0.853,52,1.146,53,1.613,54,1.345,55,1.613,56,0.986,57,1.086,58,1.892,59,0.986,60,1.448,61,1.448,62,0.986,63,1.683,64,0.986,65,0.986,66,1.448,67,1.448,68,1.744,69,1.717,70,0.986,71,1.114,72,0.986,73,0.986,74,0.853,75,1.448,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,0.986,82,0.853,83,0.986,84,1.613,85,1.146,86,1.146,87,1.146,88,0.986,89,0.986,90,1.683,91,1.345,92,1.976,93,1.613,94,2.37,95,1.345,96,1.613,97,1.345,98,2.019,99,2.019,100,0.986,101,0.986,102,0.739,103,1.345,104,2.019]],["title/injectables/StompConfig.html",[39,0.767,105,0.89]],["body/injectables/StompConfig.html",[2,0.784,3,0.678,4,0.375,6,0.913,7,0.057,12,1.07,16,0.678,17,0.317,18,0.026,19,0.026,24,0.509,28,2.242,32,1.218,36,1.457,38,0.681,39,0.681,40,1.054,41,1.415,42,0.913,46,1.93,47,1.662,49,1.218,50,1.415,51,1.054,52,1.415,57,1.51,58,2.185,59,1.218,60,1.218,61,1.218,62,1.218,64,1.684,65,1.684,66,1.93,67,1.93,68,1.801,69,2.082,70,1.684,71,1.252,72,1.684,73,1.218,74,1.054,75,1.684,76,1.218,77,1.218,78,1.218,79,1.218,80,1.218,81,1.218,82,1.054,83,1.684,88,1.93,100,1.218,102,1.447,105,0.969,106,1.282,107,1.282,108,2.494,109,1.415,110,2.298,111,1.457,112,3.058,113,1.605,114,1.992,115,1.956,116,1.605,117,2.748,118,2.494,119,2.494,120,1.415,121,2.494,122,2.755,123,2.918,124,1.605,125,2.494,126,1.605,127,2.494,128,1.605,129,1.605,130,1.415,131,1.992,132,1.735,133,1.662,134,1.054,135,1.992,136,1.956,137,1.415,138,2.494,139,1.662,140,2.494,141,2.494,142,1.992,143,1.992]],["title/injectables/StompService.html",[38,0.767,105,0.89]],["body/injectables/StompService.html",[2,1.264,3,1.093,4,0.604,6,1.475,7,0.057,12,1.724,16,1.093,17,0.512,18,0.037,19,0.037,22,1.724,23,1.968,26,2.006,28,1.468,36,1.093,38,0.966,39,1.182,44,1.727,71,1.121,97,2.685,100,1.264,101,1.264,102,0.947,103,1.724,105,1.277,107,2.825,109,2.286,130,1.468,132,2.457,136,2.286,144,2.067,145,2.825,146,2.457,147,1.83,148,3.537,149,3.537,150,2.588,151,3.537,152,2.006,153,2.825,154,2.588,155,2.588,156,2.588,157,1.724,158,2.825,159,2.067,160,2.588,161,1.724,162,2.588,163,2.588,164,2.825,165,2.067,166,2.588,167,2.588,168,2.588,169,2.588,170,2.067,171,1.468,172,2.588,173,2.588,174,2.588]],["title/changelog.html",[175,1.595,176,1.595,177,1.595]],["body/changelog.html",[3,0.979,4,0.541,7,0.04,18,0.034,19,0.034,38,0.633,39,0.633,40,0.979,51,0.979,56,1.6,57,1.391,71,0.734,74,0.979,82,1.384,102,1.2,105,0.734,109,1.859,111,1.384,114,1.852,115,1.315,117,1.545,120,1.315,123,2.532,131,1.852,134,1.605,146,1.315,147,1.384,152,1.315,157,1.545,171,2.156,177,1.545,178,2.318,179,1.852,180,2.318,181,2.318,182,1.852,183,1.545,184,2.318,185,3.299,186,1.852,187,3.036,188,1.852,189,3.277,190,1.852,191,1.852,192,2.318,193,3.481,194,3.277,195,1.856,196,1.545,197,2.318,198,2.318,199,2.617,200,3.277,201,2.318,202,2.318,203,2.183,204,1.852,205,2.617,206,3.299,207,1.852,208,1.545,209,2.318,210,3.277,211,3.277,212,1.545,213,1.852,214,2.318,215,2.318,216,2.318,217,2.318,218,2.318,219,2.318,220,2.318,221,1.852,222,1.545,223,2.318,224,2.532,225,2.318,226,1.852,227,1.545,228,2.318,229,2.183,230,1.545,231,2.183,232,1.545,233,2.318,234,1.852,235,2.318,236,1.315,237,1.852,238,1.852,239,2.318,240,2.318,241,2.318,242,2.318,243,1.852,244,1.315,245,2.318,246,1.852,247,2.318,248,1.852,249,2.318,250,1.852,251,2.617,252,2.318,253,1.852,254,2.318,255,2.318,256,2.318,257,2.318,258,1.852,259,2.318,260,2.318,261,2.318,262,1.852,263,1.315,264,2.318,265,1.852,266,2.318,267,2.318,268,1.545,269,1.852]],["title/coverage.html",[270,2.985]],["body/coverage.html",[4,0.679,7,0.055,17,0.756,18,0.04,19,0.04,20,1.65,21,2.676,23,1.42,38,0.794,39,0.794,42,1.773,43,1.42,48,1.65,49,1.42,68,2.116,90,1.65,102,1.065,105,1.354,106,2.323,134,1.229,144,2.323,270,2.323,271,2.908,272,2.908,273,2.323,274,2.548,275,3.055,276,5.009,277,2.323,278,3.414,279,2.323,280,2.323,281,2.323,282,2.908,283,2.908,284,2.908,285,2.908,286,2.323,287,1.938,288,2.908,289,4.274,290,2.908,291,2.908,292,2.908,293,2.908,294,2.908]],["title/dependencies.html",[195,1.636,295,2.393]],["body/dependencies.html",[7,0.052,18,0.049,19,0.049,195,1.987,196,2.711,296,3.251,297,4.069]],["title/miscellaneous/enumerations.html",[298,0.758,299,2.677]],["body/miscellaneous/enumerations.html",[7,0.048,18,0.048,19,0.048,24,1.219,30,2.183,111,1.625,132,2.183,146,2.183,183,2.563,236,2.183,287,2.563,298,1.219,299,3.073,300,4.556,301,3.073,302,4.556,303,3.847,304,3.073]],["title/miscellaneous/functions.html",[42,1.227,298,0.758]],["body/miscellaneous/functions.html",[7,0.054,18,0.043,19,0.043,21,1.812,24,1.012,38,1.22,42,1.169,43,2.182,48,2.536,92,2.128,95,2.128,100,2.297,101,2.297,103,3.135,278,2.551,279,3.246,280,3.246,281,3.246,286,3.246,298,1.012,305,4.47,306,4.47,307,4.705,308,3.194,309,4.966,310,3.194,311,3.194]],["title/index.html",[24,0.758,175,1.595,176,1.595]],["body/index.html",[4,0.584,6,0.773,7,0.053,14,2.302,17,0.494,18,0.017,19,0.017,23,1.221,25,1.073,26,0.534,30,0.534,31,0.914,32,0.786,36,0.68,38,0.943,39,0.943,40,0.892,44,1.826,46,0.459,51,0.398,52,0.534,56,0.459,57,0.915,58,1.496,59,0.459,60,0.786,61,0.786,62,0.459,63,0.914,64,0.459,65,0.459,66,0.786,67,1.221,68,1.056,69,1.031,70,0.459,71,1.094,72,0.459,73,0.786,74,0.398,75,0.786,76,0.459,77,0.786,78,0.459,79,0.459,80,0.459,81,0.786,82,0.398,83,0.459,85,0.534,86,0.534,87,0.534,88,0.459,89,0.459,91,1.073,97,0.627,101,0.786,105,0.792,109,1.96,111,1.459,115,0.914,117,2.302,120,0.534,122,1.287,123,1.407,130,0.914,132,2.046,133,1.666,134,1.056,135,1.997,136,0.914,137,0.534,139,1.407,145,1.287,146,0.914,147,1.58,152,2.046,153,1.687,157,1.873,158,2.617,159,2.245,161,1.073,164,1.687,165,1.687,170,1.287,171,1.418,177,0.627,179,0.752,182,0.752,183,0.627,185,3.161,186,1.997,187,1.997,188,0.752,190,1.687,191,1.287,193,1.287,195,1.221,196,1.407,199,0.752,203,1.073,204,0.752,205,0.752,206,0.752,208,0.627,212,2.302,213,2.759,222,1.073,224,1.666,226,1.287,227,1.073,229,2.637,230,1.666,231,2.697,232,0.627,234,0.752,236,1.198,237,1.287,238,0.752,244,0.534,248,1.997,251,0.752,258,0.752,263,0.534,265,0.752,268,1.073,269,1.687,296,1.287,304,1.287,312,2.112,313,2.112,314,0.941,315,0.941,316,0.941,317,0.941,318,0.941,319,1.611,320,0.941,321,1.611,322,2.112,323,0.941,324,0.941,325,0.941,326,0.941,327,0.941,328,0.941,329,0.941,330,0.941,331,0.941,332,1.997,333,0.941,334,1.611,335,0.941,336,1.611,337,0.941,338,0.752,339,0.941,340,1.611,341,1.611,342,0.941,343,0.941,344,1.611,345,0.941,346,0.941,347,0.941,348,0.941,349,0.941,350,0.941,351,0.941,352,0.941,353,0.941,354,0.941,355,0.941,356,0.941,357,1.611,358,1.287,359,0.941,360,0.941,361,0.941,362,1.287,363,0.941,364,0.941,365,1.666,366,0.941,367,1.287,368,0.941,369,0.941,370,0.941,371,1.611,372,0.752,373,0.941,374,0.941,375,0.941,376,3.607,377,0.941,378,0.941,379,0.941,380,2.112,381,1.611,382,3.276,383,0.941,384,1.287,385,0.941,386,0.941,387,0.941,388,0.941,389,2.617,390,2.245,391,1.611,392,0.941,393,0.941,394,0.941,395,0.941,396,0.941,397,0.941,398,0.941,399,0.941,400,0.941,401,0.941,402,1.287,403,2.112,404,0.941,405,0.941,406,0.941,407,0.752,408,0.627,409,0.752,410,0.941,411,0.941,412,0.941,413,0.941,414,0.941,415,0.941,416,0.941,417,1.611,418,0.941,419,0.941,420,0.941,421,0.941,422,0.941,423,0.941,424,0.941,425,0.941,426,0.941,427,0.941,428,0.941,429,0.941,430,0.941,431,1.611,432,0.941,433,1.611,434,0.941,435,0.941,436,0.941,437,0.941,438,0.941,439,0.941,440,0.941,441,0.941,442,1.611,443,0.752,444,0.941,445,0.941,446,0.941,447,0.941,448,0.941,449,0.752,450,0.941,451,0.941,452,1.611,453,0.941,454,1.611,455,2.5,456,1.611,457,0.941,458,0.941,459,1.611,460,0.941,461,0.941,462,0.941,463,0.941,464,0.941,465,0.941,466,0.941,467,0.941,468,0.941,469,0.752,470,0.941,471,1.611,472,0.941,473,0.941,474,0.941,475,1.073,476,0.941,477,0.941,478,0.941,479,0.941,480,0.941,481,0.941,482,0.941,483,0.941,484,0.752,485,1.611,486,0.941,487,0.941,488,0.941,489,0.941,490,0.941,491,0.941,492,0.941,493,0.941,494,0.941,495,0.941,496,0.941,497,0.941,498,0.752,499,0.752,500,0.941,501,0.941,502,0.941,503,0.941,504,0.941,505,0.941,506,0.627,507,0.752]],["title/license.html",[175,1.595,176,1.595,506,1.595]],["body/license.html",[4,0.668,7,0.04,14,1.905,18,0.04,19,0.04,54,1.905,111,1.208,134,1.208,147,1.598,243,2.284,250,2.284,268,1.905,332,2.284,407,2.284,408,3.005,409,2.284,498,2.284,499,2.284,506,1.905,507,2.284,508,4.238,509,2.859,510,2.859,511,3.782,512,2.859,513,2.859,514,2.859,515,3.782,516,2.859,517,5.05,518,2.859,519,3.782,520,4.238,521,2.859,522,4.238,523,3.021,524,2.859,525,2.859,526,2.859,527,2.859,528,2.859,529,2.859,530,2.859,531,2.859,532,3.782,533,3.782,534,2.859,535,2.859,536,3.782,537,2.859,538,2.859,539,2.859,540,2.859,541,2.859,542,2.859,543,2.859,544,2.859,545,2.859,546,2.859,547,2.859,548,2.859,549,2.859,550,2.859,551,2.859,552,2.859,553,2.859,554,2.859,555,2.859,556,2.859,557,2.859,558,2.284]],["title/modules.html",[0,1.825]],["body/modules.html",[0,2.006,1,2.738,7,0.05,18,0.05,19,0.05,559,4.109]],["title/overview.html",[560,2.985]],["body/overview.html",[0,1.968,7,0.049,17,0.797,18,0.049,19,0.049,105,1.277,560,3.22,561,4.031,562,4.031,563,4.031]],["title/miscellaneous/typealiases.html",[298,0.758,564,3.351]],["body/miscellaneous/typealiases.html",[7,0.048,18,0.048,19,0.048,24,1.224,57,1.415,102,1.781,115,2.759,287,2.575,298,1.224,301,3.087,565,3.865,566,4.569,567,3.865,568,3.865]],["title/miscellaneous/variables.html",[274,2.233,298,0.758]],["body/miscellaneous/variables.html",[7,0.056,18,0.046,19,0.046,24,1.127,71,1.377,89,1.736,102,1.591,110,3.257,137,2.465,273,2.841,274,2.369,275,4.074,277,2.841,298,1.127,569,3.556,570,3.556,571,4.346,572,3.556]],["title/additional-documentation/sock-js.html",[221,1.666,263,1.183,475,1.389,573,2.085]],["body/additional-documentation/sock-js.html",[6,0.715,7,0.054,10,1.561,16,0.826,17,0.386,18,0.03,19,0.03,31,1.109,32,1.862,36,1.223,39,1.041,40,2.114,41,1.642,42,1.396,43,1.862,44,0.954,46,1.862,49,0.954,50,1.109,51,0.826,56,1.414,57,1.06,58,1.988,59,0.954,60,1.414,61,1.414,62,0.954,63,1.642,64,0.954,65,0.954,66,1.414,67,1.414,68,1.611,69,1.684,70,0.954,71,1.093,72,0.954,73,1.414,74,0.826,75,1.414,76,0.954,77,0.954,78,0.954,79,1.414,80,1.414,81,1.414,82,0.826,83,0.954,85,1.109,86,1.109,87,1.109,88,0.954,89,0.954,100,0.954,101,0.954,110,1.302,111,0.826,120,1.642,130,1.642,133,1.302,136,1.109,137,1.109,142,1.561,143,1.561,147,1.72,152,1.109,161,2.541,171,1.109,203,1.302,207,1.561,208,1.302,212,1.929,222,1.929,224,2.713,227,1.302,229,1.302,230,1.302,231,1.302,232,1.302,236,1.109,244,1.109,253,1.561,338,1.561,362,1.561,365,1.929,372,2.313,384,1.561,389,2.313,390,2.313,402,1.561,408,1.302,443,1.561,449,2.313,469,1.561,484,1.561,523,2.313,574,1.954,575,1.954,576,1.561,577,1.954,578,1.954,579,1.954,580,1.954,581,2.895,582,2.895,583,2.895,584,1.954,585,1.954,586,1.954,587,1.954,588,1.954,589,1.954,590,1.954,591,1.954,592,1.954,593,1.954,594,1.954,595,1.954,596,2.895,597,1.954,598,1.954,599,1.954,600,1.954,601,2.895,602,2.895,603,1.954,604,1.561,605,1.954,606,2.895,607,1.954,608,1.954]],["title/additional-documentation/contributing.html",[263,1.358,475,1.595,609,1.912]],["body/additional-documentation/contributing.html",[4,0.86,7,0.054,18,0.047,19,0.047,134,1.555,139,2.956,147,1.555,195,1.797,244,2.702,246,2.939,262,2.939,358,2.939,365,2.452,367,2.939,558,2.939,576,2.939,604,2.939,609,2.939,610,3.68,611,3.68,612,3.68,613,4.437]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":561,"title":{},"body":{"overview.html":{}}}],["1/2",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":563,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":359,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":510,"title":{},"body":{"license.html":{}}}],["2018",{"_index":179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["23/23",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":562,"title":{},"body":{"overview.html":{}}}],["33",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":296,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.2",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["4.0.7",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":360,"title":{},"body":{"index.html":{}}}],["50",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":337,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":178,"title":{},"body":{"changelog.html":{}}}],["6.x.x",{"_index":188,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":417,"title":{},"body":{"index.html":{}}}],["abil",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":553,"title":{},"body":{"license.html":{}}}],["activ",{"_index":394,"title":{},"body":{"index.html":{}}}],["actual",{"_index":322,"title":{},"body":{"index.html":{}}}],["ad",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":368,"title":{},"body":{"index.html":{}}}],["addit",{"_index":475,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":370,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":605,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":608,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":565,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":207,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":526,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":324,"title":{},"body":{"index.html":{}}}],["angular",{"_index":185,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":145,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["angular4",{"_index":313,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":314,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":315,"title":{},"body":{"index.html":{}}}],["api",{"_index":269,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":237,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":344,"title":{},"body":{"index.html":{}}}],["applic",{"_index":574,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":557,"title":{},"body":{"license.html":{}}}],["around",{"_index":607,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":477,"title":{},"body":{"index.html":{}}}],["associ",{"_index":518,"title":{},"body":{"license.html":{}}}],["assum",{"_index":391,"title":{},"body":{"index.html":{}}}],["astha",{"_index":500,"title":{},"body":{"index.html":{}}}],["async",{"_index":429,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":166,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":546,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":401,"title":{},"body":{"index.html":{}}}],["base",{"_index":420,"title":{},"body":{"index.html":{}}}],["be",{"_index":339,"title":{},"body":{"index.html":{}}}],["beat",{"_index":595,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":457,"title":{},"body":{"index.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":415,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":340,"title":{},"body":{"index.html":{}}}],["branch",{"_index":336,"title":{},"body":{"index.html":{}}}],["break",{"_index":329,"title":{},"body":{"index.html":{}}}],["broken",{"_index":352,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":559,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":509,"title":{},"body":{"license.html":{}}}],["call",{"_index":382,"title":{},"body":{"index.html":{}}}],["callback",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":177,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":497,"title":{},"body":{"index.html":{}}}],["charg",{"_index":514,"title":{},"body":{"license.html":{}}}],["check",{"_index":576,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":549,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cli",{"_index":357,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":585,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":390,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":480,"title":{},"body":{"index.html":{}}}],["come",{"_index":439,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":599,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":592,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":204,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":416,"title":{},"body":{"index.html":{}}}],["condit",{"_index":531,"title":{},"body":{"license.html":{}}}],["config",{"_index":153,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":437,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":465,"title":{},"body":{"index.html":{}}}],["const",{"_index":402,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":149,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["consum",{"_index":440,"title":{},"body":{"index.html":{}}}],["contract",{"_index":554,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":609,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":492,"title":{},"body":{"index.html":{}}}],["control",{"_index":474,"title":{},"body":{"index.html":{}}}],["convert",{"_index":452,"title":{},"body":{"index.html":{}}}],["copi",{"_index":408,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":508,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":460,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":270,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":586,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["critic",{"_index":343,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":488,"title":{},"body":{"index.html":{}}}],["current",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":550,"title":{},"body":{"license.html":{}}}],["deal",{"_index":519,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":501,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":498,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":567,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":376,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":403,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":232,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":379,"title":{},"body":{"index.html":{}}}],["depend",{"_index":195,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":604,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":496,"title":{},"body":{"index.html":{}}}],["directli",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":183,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":243,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":612,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":386,"title":{},"body":{"index.html":{}}}],["don't",{"_index":588,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":591,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":459,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":299,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":163,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":467,"title":{},"body":{"index.html":{}}}],["etc",{"_index":427,"title":{},"body":{"index.html":{}}}],["even",{"_index":484,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":545,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":504,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":346,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":538,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":326,"title":{},"body":{"index.html":{}}}],["fail",{"_index":602,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":406,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":380,"title":{},"body":{"index.html":{}}}],["few",{"_index":476,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":426,"title":{},"body":{"index.html":{}}}],["find",{"_index":351,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":494,"title":{},"body":{"index.html":{}}}],["fit",{"_index":541,"title":{},"body":{"license.html":{}}}],["fix",{"_index":181,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":332,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":579,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":331,"title":{},"body":{"index.html":{}}}],["frame",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":407,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":590,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":529,"title":{},"body":{"license.html":{}}}],["futur",{"_index":253,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":358,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":175,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":262,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["go",{"_index":330,"title":{},"body":{"index.html":{}}}],["grant",{"_index":513,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":603,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":156,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":319,"title":{},"body":{"index.html":{}}}],["hash",{"_index":405,"title":{},"body":{"index.html":{}}}],["head",{"_index":355,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers.t",{"_index":566,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["heart",{"_index":594,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":512,"title":{},"body":{"license.html":{}}}],["holder",{"_index":547,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":381,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":399,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":577,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":229,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":212,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":421,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":395,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":593,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":539,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":522,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":354,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":578,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":485,"title":{},"body":{"index.html":{}}}],["initi",{"_index":171,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":479,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":400,"title":{},"body":{"index.html":{}}}],["instal",{"_index":365,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":610,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":208,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":466,"title":{},"body":{"index.html":{}}}],["intern",{"_index":443,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":505,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":363,"title":{},"body":{"index.html":{}}}],["issu",{"_index":182,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["jimi",{"_index":495,"title":{},"body":{"index.html":{}}}],["js",{"_index":221,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":581,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":387,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":248,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":230,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/ng5",{"_index":378,"title":{},"body":{"index.html":{}}}],["js/ng6",{"_index":377,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":371,"title":{},"body":{"index.html":{}}}],["json",{"_index":451,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":453,"title":{},"body":{"index.html":{}}}],["jump",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":537,"title":{},"body":{"license.html":{}}}],["kumar",{"_index":499,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":551,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":548,"title":{},"body":{"license.html":{}}}],["librari",{"_index":161,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":506,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":523,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":353,"title":{},"body":{"index.html":{}}}],["lint",{"_index":613,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":568,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":404,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":412,"title":{},"body":{"index.html":{}}}],["main",{"_index":251,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":341,"title":{},"body":{"index.html":{}}}],["make",{"_index":234,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manag",{"_index":334,"title":{},"body":{"index.html":{}}}],["mani",{"_index":597,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":170,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":425,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":462,"title":{},"body":{"index.html":{}}}],["master",{"_index":335,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":598,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":540,"title":{},"body":{"license.html":{}}}],["merg",{"_index":250,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":158,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":448,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":435,"title":{},"body":{"index.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["michel",{"_index":502,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":298,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":507,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":409,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":489,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":438,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":320,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":389,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":544,"title":{},"body":{"license.html":{}}}],["note",{"_index":449,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":532,"title":{},"body":{"license.html":{}}}],["now",{"_index":199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":244,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":164,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["obtain",{"_index":516,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":601,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":342,"title":{},"body":{"index.html":{}}}],["offer",{"_index":345,"title":{},"body":{"index.html":{}}}],["old",{"_index":575,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":596,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["onc",{"_index":490,"title":{},"body":{"index.html":{}}}],["oper",{"_index":424,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":556,"title":{},"body":{"license.html":{}}}],["out",{"_index":558,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":560,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":295,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":263,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":542,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["per",{"_index":458,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":511,"title":{},"body":{"license.html":{}}}],["permit",{"_index":528,"title":{},"body":{"license.html":{}}}],["person",{"_index":515,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":430,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":393,"title":{},"body":{"index.html":{}}}],["portion",{"_index":535,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":236,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":491,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":388,"title":{},"body":{"index.html":{}}}],["process",{"_index":473,"title":{},"body":{"index.html":{}}}],["product",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":258,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":503,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":268,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":445,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":543,"title":{},"body":{"license.html":{}}}],["queu",{"_index":486,"title":{},"body":{"index.html":{}}}],["queue",{"_index":159,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["quit",{"_index":325,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":155,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":350,"title":{},"body":{"index.html":{}}}],["read",{"_index":384,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":472,"title":{},"body":{"index.html":{}}}],["readm",{"_index":151,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":318,"title":{},"body":{"index.html":{}}}],["reap",{"_index":414,"title":{},"body":{"index.html":{}}}],["recent",{"_index":349,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":222,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["report",{"_index":361,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":348,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":410,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":521,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":524,"title":{},"body":{"license.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":327,"title":{},"body":{"index.html":{}}}],["sam",{"_index":493,"title":{},"body":{"index.html":{}}}],["same",{"_index":321,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":152,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":584,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":366,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":333,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":527,"title":{},"body":{"license.html":{}}}],["semant",{"_index":418,"title":{},"body":{"index.html":{}}}],["send",{"_index":450,"title":{},"body":{"index.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":146,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":398,"title":{},"body":{"index.html":{}}}],["shall",{"_index":533,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":573,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":517,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":347,"title":{},"body":{"index.html":{}}}],["specif",{"_index":165,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":411,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":301,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":583,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":144,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":150,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":176,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":455,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":154,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":396,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":160,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":312,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":148,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":196,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":441,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":431,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":434,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":385,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":356,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":375,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":374,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":446,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":423,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":373,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":369,"title":{},"body":{"index.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":456,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":463,"title":{},"body":{"index.html":{}}}],["stream",{"_index":167,"title":{},"body":{"injectables/StompService.html":{}}}],["streamlin",{"_index":580,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":265,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":316,"title":{},"body":{"index.html":{}}}],["sub",{"_index":433,"title":{},"body":{"index.html":{}}}],["subject",{"_index":530,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":525,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":157,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((msg_bodi",{"_index":436,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":464,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":422,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":444,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":534,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":323,"title":{},"body":{"index.html":{}}}],["success",{"_index":487,"title":{},"body":{"index.html":{}}}],["super",{"_index":172,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":224,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":203,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":470,"title":{},"body":{"index.html":{}}}],["templat",{"_index":428,"title":{},"body":{"index.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":482,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":468,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":483,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":447,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":461,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":432,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":173,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":481,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":174,"title":{},"body":{"injectables/StompService.html":{}}}],["those",{"_index":600,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":587,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":471,"title":{},"body":{"index.html":{}}}],["time",{"_index":338,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["tort",{"_index":555,"title":{},"body":{"license.html":{}}}],["travi",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":304,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":246,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":564,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":328,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":606,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":442,"title":{},"body":{"index.html":{}}}],["updat",{"_index":193,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":147,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":372,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":383,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":413,"title":{},"body":{"index.html":{}}}],["usual",{"_index":469,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":419,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":274,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":187,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":162,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":397,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":169,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":536,"title":{},"body":{"license.html":{}}}],["watch",{"_index":454,"title":{},"body":{"index.html":{}}}],["way",{"_index":238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":392,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":582,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":364,"title":{},"body":{"index.html":{}}}],["whether",{"_index":552,"title":{},"body":{"license.html":{}}}],["wire",{"_index":168,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":520,"title":{},"body":{"license.html":{}}}],["work",{"_index":362,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":589,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":317,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":367,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":611,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["yourclass",{"_index":478,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.7\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
