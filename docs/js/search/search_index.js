var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.366,1,2.06]],["body/modules/AppModule.html",[0,1.737,1,3.18,2,1.533,3,1.355,4,0.806,5,3.827,6,1.564,7,0.049,8,4.645,9,3.827,10,3.099,11,4.645,12,1.975,13,3.827,14,2.62,15,3.827,16,1.355,17,0.594,18,0.04,19,0.04]],["title/classes/MyStompRService.html",[17,0.467,20,1.778]],["body/classes/MyStompRService.html",[2,0.94,3,0.83,4,0.494,6,1.05,7,0.049,16,1.605,17,0.609,18,0.029,19,0.029,20,1.984,21,1.386,22,2.685,23,1.389,24,0.646,25,2.339,26,2.21,27,3.669,28,1.065,29,2.345,30,2.786,31,2.318,32,2.025,33,3.176,34,3.176,35,2.685,36,1.516,37,3.176,38,0.707,39,1.339,40,1.781,41,1.211,42,1.389,43,1.733,44,0.733,45,2.719,46,2.025,47,1.386,48,1.984,49,1.733,50,1.386,51,0.94,52,1.386,53,1.899,54,1.386,55,1.899,56,1.211,57,1.05,58,2.21,59,1.211,60,1.733,61,1.733,62,1.211,63,1.984,64,1.211,65,1.211,66,1.733,67,1.733,68,2.057,69,2.025,70,1.211,71,1.226,72,1.211,73,1.211,74,1.065,75,1.524,76,1.211,77,1.211,78,1.211,79,1.211,80,1.211,81,1.211,82,0.94,83,1.211,84,1.899,85,1.386,86,1.386,87,1.386,88,1.211,89,1.211,90,1.386,91,1.386,92,1.605,93,1.899,94,2.719,95,1.605,96,1.899]],["title/classes/MyStompService.html",[17,0.467,90,1.778]],["body/classes/MyStompService.html",[2,0.914,3,0.808,4,0.48,6,1.029,7,0.049,16,1.588,17,0.6,18,0.028,19,0.028,20,1.349,21,1.349,22,2.644,23,1.166,24,0.629,25,2.314,26,2.183,27,3.631,28,1.495,30,2.76,31,2.282,32,1.994,33,3.128,34,3.128,35,2.644,36,1.497,37,3.128,38,0.813,39,1.461,40,1.754,41,1.178,42,1.368,43,1.7,44,0.714,45,2.666,46,1.994,47,1.349,48,1.946,49,1.7,50,1.349,51,0.914,52,1.349,53,1.848,54,1.349,55,1.848,56,1.178,57,1.029,58,2.183,59,1.178,60,1.7,61,1.7,62,1.178,63,1.946,64,1.178,65,1.178,66,1.7,67,1.7,68,2.035,69,1.994,70,1.178,71,1.208,72,1.178,73,1.178,74,1.036,75,1.495,76,1.178,77,1.178,78,1.178,79,1.178,80,1.178,81,1.178,82,0.914,83,1.178,84,1.848,85,1.349,86,1.349,87,1.349,88,1.178,89,1.178,90,1.946,91,1.349,92,2.254,93,1.848,94,2.666,95,1.562,96,1.848,97,1.178,98,2.282,99,2.282,100,0.914,101,0.808,102,0.714,103,1.036,104,2.282]],["title/injectables/StompConfig.html",[39,0.941,105,0.547]],["body/injectables/StompConfig.html",[2,0.736,3,0.651,4,0.387,6,0.876,7,0.049,12,0.948,16,0.651,17,0.285,18,0.024,19,0.024,24,0.506,28,1.959,32,1.447,36,1.346,38,0.59,39,0.876,40,1.272,41,1.447,42,0.992,46,2.227,47,1.656,49,1.447,50,1.656,51,1.123,52,1.656,57,1.403,58,2.497,59,1.447,60,1.447,61,1.447,62,1.447,64,1.963,65,1.963,66,2.227,67,2.227,68,2.1,69,2.388,70,1.963,71,1.349,72,1.963,73,1.447,74,1.272,75,1.726,76,1.447,77,1.447,78,1.447,79,1.447,80,1.447,81,1.447,82,1.123,83,1.963,88,2.227,100,1.123,102,1.349,105,0.618,106,1.488,107,1.086,108,2.803,109,1.656,110,2.602,111,1.726,112,3.398,113,1.837,114,2.27,115,1.963,116,1.837,117,2.037,118,2.803,119,2.803,120,1.447,121,2.803,122,2.602,123,3.245,124,1.837,125,2.803,126,1.837,127,2.803,128,1.837,129,1.837,130,1.447,131,2.27,132,1.543,133,1.656,134,1.123,135,1.656,136,1.523,137,1.447,138,1.918,139,1.918,140,2.803,141,2.803,142,1.918,143,1.918]],["title/injectables/StompRPCConfig.html",[105,0.547,144,1.778]],["body/injectables/StompRPCConfig.html",[2,1.203,3,1.063,4,0.632,6,1.488,7,0.049,12,1.55,16,1.41,17,0.466,18,0.034,19,0.034,23,1.41,24,0.827,28,1.808,38,0.632,44,1.397,47,2.353,101,1.41,102,1.397,103,2.16,105,0.812,107,1.774,117,2.16,132,1.363,136,1.79,138,2.725,144,2.353,145,2.306,146,2.055,147,2.055,148,2.353,149,3.058,150,4.009,151,3.852,152,3.003,153,3.256,154,2.811,155,3.256,156,3.003,157,2.353,158,2.055,159,1.55,160,1.55,161,2.055]],["title/injectables/StompRPCService.html",[105,0.547,162,1.778]],["body/injectables/StompRPCService.html",[2,0.722,3,0.638,4,0.379,6,1.394,7,0.049,12,0.93,16,0.638,17,0.28,18,0.024,19,0.024,23,1.333,24,0.496,25,1.425,26,2.21,28,1.524,36,1.578,38,0.581,44,1.438,57,1.394,71,0.563,91,1.064,97,0.93,100,1.345,101,1.189,102,1.05,103,1.524,105,0.61,107,1.064,115,2.301,117,2.254,130,1.425,132,1.253,135,2.224,136,1.106,137,0.93,143,1.89,144,2.717,145,1.943,147,2.433,149,2.576,153,1.89,155,1.89,157,2.53,158,1.233,159,2.21,160,0.93,161,1.233,162,1.631,163,1.459,164,1.89,165,1.253,166,0.978,167,2.576,168,1.801,169,1.801,170,1.89,171,2.761,172,2.761,173,4.598,174,1.801,175,2.224,176,2.778,177,2.761,178,2.761,179,1.801,180,1.89,181,0.93,182,2.236,183,1.459,184,1.801,185,1.801,186,1.801,187,3.763,188,3.763,189,2.576,190,2.576,191,3.763,192,3.763,193,1.801,194,1.459,195,1.801,196,1.801,197,1.801,198,1.801,199,2.761,200,2.761,201,2.761,202,1.801,203,1.801,204,1.233,205,1.801,206,1.801,207,2.761,208,1.801,209,1.801,210,1.801,211,1.801,212,2.761,213,1.064,214,2.718,215,1.801,216,1.801,217,1.459,218,2.236,219,1.801,220,1.801,221,1.233,222,1.801,223,1.801,224,1.801,225,1.801,226,1.801]],["title/injectables/StompService.html",[38,0.634,105,0.547]],["body/injectables/StompService.html",[2,1.152,3,1.018,4,0.605,6,1.367,7,0.049,12,1.484,16,1.018,17,0.446,18,0.033,19,0.033,22,1.968,23,1.548,26,1.997,28,1.305,36,1.018,38,0.814,39,1.462,44,1.21,71,1.21,97,2.256,100,1.152,101,1.018,102,0.899,103,1.305,105,0.795,107,2.286,109,2.583,130,1.484,132,2.123,136,1.752,148,2.286,154,1.699,157,2.286,159,1.997,161,1.968,165,2.123,166,1.656,167,1.968,181,1.997,227,2.328,228,3.868,229,3.868,230,2.875,231,3.868,232,1.997,233,2.875,234,2.875,235,1.699,236,2.875,237,1.968,238,2.875,239,2.875,240,1.968,241,2.875,242,2.875,243,2.875,244,1.968,245,1.484,246,2.875,247,2.875,248,2.875]],["title/changelog.html",[249,1.762,250,1.762,251,1.762]],["body/changelog.html",[3,0.886,4,0.526,7,0.038,18,0.03,19,0.03,35,1.712,38,0.526,39,0.782,40,1.135,51,1.002,56,1.814,57,1.27,71,0.782,74,1.135,82,1.408,102,1.099,105,0.455,109,2.077,111,1.595,114,2.025,115,1.291,117,1.135,120,1.291,123,2.781,131,2.025,134,1.628,147,1.291,160,1.291,165,1.135,166,1.244,175,1.478,232,1.291,235,1.478,245,2.097,251,1.712,252,2.501,253,3.29,254,3.514,255,2.501,256,2.025,257,2.025,258,2.501,259,2.501,260,2.604,261,2.501,262,2.501,263,2.501,264,2.501,265,2.025,266,1.712,267,2.501,268,3.017,269,2.025,270,3.29,271,2.025,272,3.514,273,2.025,274,2.025,275,2.501,276,3.76,277,2.846,278,1.845,279,2.501,280,2.501,281,2.846,282,3.514,283,2.501,284,2.501,285,2.405,286,2.025,287,2.846,288,3.569,289,2.025,290,1.712,291,2.501,292,2.846,293,3.514,294,1.712,295,2.025,296,2.501,297,2.501,298,2.501,299,2.501,300,2.501,301,2.501,302,2.501,303,2.025,304,1.712,305,2.501,306,2.501,307,2.025,308,1.712,309,2.501,310,2.405,311,1.712,312,2.405,313,1.712,314,2.501,315,2.501,316,1.478,317,2.025,318,1.712,319,2.501,320,2.501,321,2.501,322,2.501,323,2.025,324,1.478,325,2.501,326,2.025,327,2.501,328,2.025,329,2.501,330,2.025,331,2.846,332,2.501,333,2.025,334,2.501,335,2.501,336,2.501,337,2.501,338,2.025,339,2.501,340,2.501,341,2.501,342,2.025,343,1.291,344,2.501,345,2.025,346,2.501,347,2.025,348,1.712,349,2.025]],["title/coverage.html",[350,3.229]],["body/coverage.html",[4,0.645,7,0.048,17,0.627,18,0.035,19,0.035,20,1.812,21,2.945,23,1.086,38,0.645,39,0.959,42,1.812,43,1.583,48,1.812,49,1.583,68,2.404,90,1.812,102,0.959,105,0.906,106,2.483,134,1.229,144,1.812,145,2.33,146,2.099,162,1.812,163,2.483,227,2.483,350,2.483,351,3.066,352,3.066,353,2.483,354,2.763,355,3.269,356,5.295,357,2.483,358,3.655,359,2.483,360,2.483,361,2.483,362,3.066,363,3.066,364,3.066,365,3.066,366,2.483,367,3.066,368,4.984,369,3.066,370,3.066,371,3.066,372,3.066,373,3.066,374,3.066,375,3.066]],["title/dependencies.html",[257,2.085,278,1.628]],["body/dependencies.html",[7,0.046,18,0.042,19,0.042,160,2.199,180,2.916,181,2.199,278,1.934,376,3.449,377,4.259,378,4.259]],["title/miscellaneous/enumerations.html",[379,0.912,380,2.904]],["body/miscellaneous/enumerations.html",[7,0.042,18,0.042,19,0.042,24,1.135,30,2.435,111,1.871,132,1.871,145,2.127,165,1.871,266,2.821,316,2.435,379,1.459,380,3.337,381,4.856,382,3.337,383,4.856,384,4.121,385,3.337]],["title/miscellaneous/functions.html",[42,1.27,379,0.912]],["body/miscellaneous/functions.html",[7,0.047,18,0.038,19,0.038,21,2.06,24,0.96,38,1.01,42,1.234,43,2.476,48,2.835,92,2.386,95,2.386,100,2.017,101,1.783,103,2.285,358,2.823,359,3.551,360,3.551,361,3.551,366,3.551,379,1.234,386,4.797,387,4.797,388,5.034,389,3.486,390,5.295,391,3.486,392,3.486]],["title/index.html",[24,0.709,249,1.762,250,1.762]],["body/index.html",[4,0.594,6,0.751,7,0.046,14,2.614,17,0.438,18,0.016,19,0.016,23,0.999,25,0.957,26,0.567,30,0.649,31,1.095,32,0.957,36,0.656,38,0.804,39,1.194,40,1.091,44,1.285,46,0.567,51,0.44,52,0.649,56,0.567,57,0.882,58,1.764,59,0.567,60,0.957,61,0.957,62,0.567,63,1.095,64,0.567,65,0.567,66,0.957,67,1.456,68,1.281,69,1.24,70,0.567,71,1.194,72,0.567,73,0.957,74,0.499,75,0.841,76,0.567,77,0.957,78,0.567,79,0.567,80,0.567,81,0.957,82,0.44,83,0.567,85,0.649,86,0.649,87,0.649,88,0.567,89,0.567,91,1.095,97,0.567,101,0.656,105,0.513,109,2.257,111,1.734,115,0.957,117,1.734,120,0.567,122,1.269,123,1.645,130,0.957,132,1.805,133,1.667,134,1.131,135,1.667,136,0.743,137,0.567,139,1.645,148,1.42,154,1.862,157,1.42,158,0.752,159,1.877,160,1.24,165,0.841,166,1.455,175,0.649,176,0.752,181,0.957,182,0.89,183,0.89,213,1.095,221,0.752,232,2.052,235,1.862,237,1.269,240,1.645,244,1.269,245,1.456,251,0.752,253,0.89,260,1.667,265,0.89,266,0.752,268,2.963,269,2.285,270,2.285,271,0.89,273,1.946,274,1.501,276,1.501,278,1.281,281,0.89,285,1.269,286,0.89,287,0.89,288,0.89,290,0.752,294,2.614,295,3.093,304,1.269,307,1.501,308,1.269,310,2.963,311,1.931,312,3.026,313,0.752,316,1.42,317,1.501,318,0.752,324,0.649,328,2.285,331,0.89,338,0.89,343,0.567,345,0.89,348,1.269,349,1.946,376,1.501,385,1.501,393,2.403,394,2.403,395,1.099,396,1.099,397,1.099,398,1.099,399,0.89,400,1.853,401,1.099,402,1.501,403,2.403,404,1.099,405,1.099,406,1.099,407,1.099,408,1.099,409,1.099,410,1.099,411,1.099,412,1.931,413,1.099,414,1.853,415,1.099,416,1.853,417,1.099,418,0.89,419,1.099,420,1.853,421,1.853,422,1.099,423,1.099,424,1.853,425,1.099,426,1.099,427,0.89,428,1.099,429,1.099,430,1.099,431,1.099,432,1.099,433,1.099,434,1.099,435,1.099,436,1.853,437,1.501,438,1.099,439,1.099,440,1.099,441,1.269,442,1.099,443,0.89,444,1.931,445,1.099,446,1.501,447,1.099,448,1.099,449,1.099,450,1.853,451,0.752,452,1.099,453,1.099,454,1.099,455,3.975,456,1.099,457,1.099,458,1.099,459,2.403,460,1.853,461,2.489,462,1.099,463,1.501,464,1.099,465,1.099,466,1.099,467,1.099,468,2.489,469,2.157,470,1.853,471,1.099,472,1.099,473,1.099,474,1.099,475,1.099,476,1.099,477,1.099,478,1.099,479,1.099,480,1.099,481,2.403,482,1.099,483,0.89,484,1.099,485,0.89,486,0.752,487,0.89,488,1.099,489,1.099,490,0.89,491,1.099,492,1.099,493,1.099,494,1.099,495,1.853,496,1.099,497,1.099,498,1.099,499,1.099,500,1.099,501,1.099,502,1.099,503,1.099,504,1.099,505,1.099,506,1.099,507,1.099,508,1.853,509,1.099,510,1.853,511,1.099,512,0.89,513,1.099,514,1.099,515,1.099,516,1.099,517,0.89,518,1.099,519,1.501,520,0.89,521,1.099,522,1.099,523,1.099,524,1.099,525,0.89,526,1.099,527,1.853,528,1.099,529,1.853,530,2.821,531,1.853,532,1.099,533,1.099,534,1.853,535,1.099,536,1.099,537,1.099,538,1.099,539,1.099,540,1.099,541,1.099,542,1.099,543,1.099,544,0.752,545,1.099,546,1.853,547,1.099,548,0.89,549,1.099,550,0.957,551,0.89,552,1.099,553,1.099,554,1.099,555,1.099,556,1.099,557,1.099,558,1.099,559,0.89,560,1.853,561,1.099,562,1.099,563,1.099,564,1.099,565,0.89,566,1.099,567,1.099,568,1.099,569,1.099,570,1.099,571,1.099,572,1.099,573,0.89,574,0.89,575,1.099,576,1.099,577,1.099,578,1.099,579,1.099,580,0.89,581,0.752,582,0.89]],["title/license.html",[249,1.762,250,1.762,581,1.762]],["body/license.html",[4,0.663,7,0.035,14,2.157,18,0.035,19,0.035,54,1.862,111,1.431,134,1.263,166,1.455,323,2.552,330,2.552,348,2.157,412,2.157,485,2.552,486,3.318,487,2.552,573,2.552,574,2.552,581,2.157,582,2.552,583,4.574,584,3.151,585,3.151,586,4.11,587,3.151,588,3.151,589,3.151,590,4.11,591,3.151,592,5.385,593,3.151,594,4.11,595,4.574,596,3.151,597,4.574,598,3.329,599,3.151,600,3.151,601,3.151,602,3.151,603,3.151,604,3.151,605,3.151,606,3.151,607,4.11,608,4.11,609,3.151,610,3.151,611,4.11,612,3.151,613,3.151,614,3.151,615,3.151,616,3.151,617,3.151,618,3.151,619,3.151,620,3.151,621,3.151,622,3.151,623,3.151,624,3.151,625,3.151,626,3.151,627,3.151,628,3.151,629,3.151,630,3.151,631,3.151,632,3.151,633,2.552]],["title/modules.html",[0,1.81]],["body/modules.html",[0,1.984,1,2.991,7,0.043,18,0.043,19,0.043,634,4.369]],["title/overview.html",[635,3.229]],["body/overview.html",[0,1.95,7,0.043,17,0.667,18,0.043,19,0.043,82,1.721,105,0.781,635,3.478,636,4.295,637,4.295]],["title/miscellaneous/typealiases.html",[379,0.912,638,3.586]],["body/miscellaneous/typealiases.html",[7,0.041,18,0.041,19,0.041,24,1.091,42,1.403,44,1.239,57,1.239,102,1.587,115,2.62,136,1.587,145,2.448,146,3.246,149,2.711,155,3.475,379,1.403,382,3.84,639,3.961,640,4.743,641,3.961,642,3.961]],["title/miscellaneous/variables.html",[354,2.455,379,0.912]],["body/miscellaneous/variables.html",[7,0.048,18,0.04,19,0.04,24,1.058,71,1.456,89,1.983,102,1.456,110,3.565,137,2.403,353,3.111,354,2.629,355,4.391,357,3.111,379,1.36,643,3.841,644,3.841,645,4.656,646,3.841]],["title/additional-documentation/sock-js.html",[303,1.822,343,1.161,550,1.161,647,2.25]],["body/additional-documentation/sock-js.html",[6,0.692,7,0.047,10,1.792,16,0.783,17,0.343,18,0.028,19,0.028,31,1.307,32,2.151,36,1.14,39,1.303,40,2.429,41,1.662,42,1.476,43,2.151,44,0.692,46,2.151,49,1.142,50,1.307,51,0.887,56,1.662,57,1.007,58,2.286,59,1.142,60,1.662,61,1.662,62,1.142,63,1.902,64,1.142,65,1.142,66,1.662,67,1.662,68,1.892,69,1.959,70,1.142,71,1.187,72,1.142,73,1.662,74,1.004,75,1.462,76,1.142,77,1.142,78,1.142,79,1.662,80,1.662,81,1.662,82,0.887,83,1.142,85,1.307,86,1.307,87,1.307,88,1.142,89,1.142,100,0.887,101,0.783,110,1.515,111,1.004,120,1.662,130,1.662,133,1.307,136,0.887,137,1.142,142,1.515,143,1.515,164,1.515,166,1.568,170,1.515,204,2.204,213,1.307,232,1.142,237,2.853,245,1.142,260,2.617,285,1.515,289,1.792,290,1.515,294,2.204,304,2.204,308,1.515,310,1.515,311,1.515,312,1.515,313,1.515,316,1.307,324,1.307,333,1.792,418,1.792,441,1.515,444,2.204,451,2.204,463,1.792,468,2.204,469,2.204,486,1.515,520,1.792,525,2.607,544,1.515,559,1.792,598,2.607,648,2.213,649,2.213,650,1.515,651,2.213,652,2.213,653,2.213,654,2.213,655,3.219,656,3.219,657,3.219,658,2.213,659,2.213,660,2.213,661,1.792,662,2.213,663,2.213,664,2.213,665,2.213,666,2.213,667,2.213,668,1.792,669,1.792,670,1.792,671,2.213,672,3.219,673,3.219,674,2.213,675,1.792,676,2.213,677,3.219,678,2.213,679,2.213]],["title/additional-documentation/rpc---remote-procedure-call.html",[147,0.927,189,1.229,190,1.229,343,0.927,461,1.229,550,0.927]],["body/additional-documentation/rpc---remote-procedure-call.html",[0,0.878,7,0.047,17,0.3,18,0.025,19,0.03,23,1.242,25,0.999,36,0.685,38,0.614,41,2.015,44,0.605,51,1.168,54,1.143,57,1.097,75,0.878,97,0.999,100,0.775,101,1.032,103,1.323,105,0.352,117,0.878,120,1.505,122,2.401,133,2.307,134,0.775,135,1.143,138,1.324,142,1.995,147,1.505,148,1.143,150,2.361,151,1.567,153,2.401,154,2.475,159,2.272,162,1.723,164,1.995,165,0.878,166,1.483,167,1.995,170,2.401,175,1.143,176,3.013,180,1.324,181,0.999,189,1.324,190,1.324,194,2.361,204,1.995,213,2.778,214,2.361,217,1.567,218,3.392,221,1.324,232,0.999,235,1.143,240,1.324,244,1.324,245,0.999,256,2.361,260,1.143,268,1.995,277,2.361,278,1.772,292,2.361,318,1.995,347,1.567,399,1.567,402,2.361,412,1.324,427,1.567,441,2.672,443,2.361,451,1.324,461,1.995,468,2.867,469,1.324,483,1.567,490,1.567,512,1.567,517,1.567,519,1.567,544,1.324,548,1.567,550,1.505,551,1.567,565,1.567,580,1.567,650,1.324,661,1.567,668,1.567,669,2.361,670,1.567,680,1.935,681,1.935,682,1.935,683,1.935,684,1.935,685,4.811,686,3.904,687,1.935,688,3.904,689,3.507,690,1.935,691,1.935,692,1.935,693,1.935,694,1.935,695,1.935,696,1.935,697,2.915,698,2.915,699,2.915,700,1.935,701,3.507,702,1.935,703,2.915,704,1.935,705,1.935,706,2.915,707,2.915,708,1.935,709,1.935,710,1.935,711,1.935,712,1.935,713,1.935,714,1.935,715,1.935,716,1.935,717,2.915,718,1.935,719,2.915,720,1.935,721,1.935,722,1.935,723,1.935,724,1.935,725,1.935,726,1.935,727,1.935,728,1.935,729,1.935,730,1.935,731,1.935,732,1.935,733,1.935,734,1.935,735,2.915,736,1.935,737,1.935,738,1.935,739,1.935,740,1.935,741,1.935,742,1.935,743,1.935,744,1.935,745,1.935,746,1.935,747,1.935,748,1.935,749,1.935,750,1.935,751,1.935]],["title/additional-documentation/contributing.html",[343,1.329,550,1.329,752,2.085]],["body/additional-documentation/contributing.html",[4,0.834,7,0.047,18,0.041,19,0.041,134,1.587,139,3.246,166,1.403,278,1.798,324,3,326,3.208,342,3.208,437,3.208,444,2.711,446,3.208,633,3.208,650,2.711,675,3.208,752,3.208,753,3.961,754,3.961,755,3.961,756,4.743]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":299,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":636,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":637,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":438,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":273,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":585,"title":{},"body":{"license.html":{}}}],["2018",{"_index":253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["23",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["23/23",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["3/3",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":376,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.1",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["4.0.7",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":274,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":439,"title":{},"body":{"index.html":{}}}],["50",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":269,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":417,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["6.1.0.beta.3",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["6.1.0.beta.4",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["6.x.x",{"_index":271,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_repliesobserv",{"_index":198,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_replyqueuenam",{"_index":193,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_setupreplyqueu",{"_index":196,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["_stompservic",{"_index":495,"title":{},"body":{"index.html":{}}}],["abil",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["accept",{"_index":722,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["access",{"_index":737,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["action",{"_index":628,"title":{},"body":{"license.html":{}}}],["activ",{"_index":473,"title":{},"body":{"index.html":{}}}],["actual",{"_index":403,"title":{},"body":{"index.html":{}}}],["ad",{"_index":292,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["add",{"_index":447,"title":{},"body":{"index.html":{}}}],["addit",{"_index":550,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["addition",{"_index":449,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":676,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":679,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["ajax",{"_index":727,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["alias",{"_index":639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":289,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["alreadi",{"_index":744,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":601,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":405,"title":{},"body":{"index.html":{}}}],["angular",{"_index":268,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":181,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["angular4",{"_index":394,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":395,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":396,"title":{},"body":{"index.html":{}}}],["anoth",{"_index":729,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["apart",{"_index":749,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["api",{"_index":349,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":317,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":424,"title":{},"body":{"index.html":{}}}],["applic",{"_index":648,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["approach",{"_index":694,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["argument",{"_index":719,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["aris",{"_index":632,"title":{},"body":{"license.html":{}}}],["around",{"_index":678,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":552,"title":{},"body":{"index.html":{}}}],["associ",{"_index":593,"title":{},"body":{"license.html":{}}}],["assum",{"_index":470,"title":{},"body":{"index.html":{}}}],["astha",{"_index":575,"title":{},"body":{"index.html":{}}}],["async",{"_index":506,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":241,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":621,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["back",{"_index":686,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["backend",{"_index":697,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["background",{"_index":480,"title":{},"body":{"index.html":{}}}],["base",{"_index":498,"title":{},"body":{"index.html":{}}}],["be",{"_index":419,"title":{},"body":{"index.html":{}}}],["beat",{"_index":667,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":532,"title":{},"body":{"index.html":{}}}],["believ",{"_index":713,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":493,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":420,"title":{},"body":{"index.html":{}}}],["branch",{"_index":416,"title":{},"body":{"index.html":{}}}],["break",{"_index":409,"title":{},"body":{"index.html":{}}}],["broken",{"_index":431,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["brows",{"_index":634,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["btw",{"_index":743,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["bundl",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":584,"title":{},"body":{"license.html":{}}}],["call",{"_index":461,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["call.html",{"_index":191,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["callback",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":277,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["chang",{"_index":288,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":251,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":572,"title":{},"body":{"index.html":{}}}],["charg",{"_index":589,"title":{},"body":{"license.html":{}}}],["check",{"_index":650,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":624,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["cleanup",{"_index":225,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["cli",{"_index":436,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["client';impl",{"_index":659,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":469,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["cofig",{"_index":555,"title":{},"body":{"index.html":{}}}],["come",{"_index":516,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":670,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["compat",{"_index":308,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":665,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":286,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":494,"title":{},"body":{"index.html":{}}}],["comput",{"_index":705,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["concept",{"_index":738,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["condit",{"_index":606,"title":{},"body":{"license.html":{}}}],["config",{"_index":148,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":514,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":540,"title":{},"body":{"index.html":{}}}],["console.log(message.bodi",{"_index":726,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["const",{"_index":213,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":229,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["constructor(stompservic",{"_index":168,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["consum",{"_index":517,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["contract",{"_index":629,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":752,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":567,"title":{},"body":{"index.html":{}}}],["control",{"_index":549,"title":{},"body":{"index.html":{}}}],["convent",{"_index":680,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["convert",{"_index":527,"title":{},"body":{"index.html":{}}}],["copi",{"_index":486,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":583,"title":{},"body":{"license.html":{}}}],["correct",{"_index":256,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correctli",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["correl",{"_index":688,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correlationid",{"_index":214,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["correspond",{"_index":535,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":350,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":170,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["critic",{"_index":423,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":563,"title":{},"body":{"index.html":{}}}],["current",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":748,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["damag",{"_index":625,"title":{},"body":{"license.html":{}}}],["deal",{"_index":594,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":576,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":573,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultmessagessubscript",{"_index":212,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":226,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":307,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":455,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":481,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":313,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":458,"title":{},"body":{"index.html":{}}}],["depend",{"_index":278,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["deriv",{"_index":720,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["destin",{"_index":709,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["develop",{"_index":675,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":571,"title":{},"body":{"index.html":{}}}],["directli",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":266,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":323,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":755,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["documentation/rpc",{"_index":188,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["documentation/sock",{"_index":465,"title":{},"body":{"index.html":{}}}],["don't",{"_index":661,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["done",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["echo",{"_index":708,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["emul",{"_index":664,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["endpoint",{"_index":695,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ensurestompconnect",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":534,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":380,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":715,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{}}}],["es6",{"_index":239,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":542,"title":{},"body":{"index.html":{}}}],["etc",{"_index":504,"title":{},"body":{"index.html":{}}}],["even",{"_index":559,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":620,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":579,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":426,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["expect",{"_index":717,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":613,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":407,"title":{},"body":{"index.html":{}}}],["fail",{"_index":673,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":484,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":459,"title":{},"body":{"index.html":{}}}],["few",{"_index":551,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":183,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["find",{"_index":430,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":569,"title":{},"body":{"index.html":{}}}],["first",{"_index":184,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["fit",{"_index":616,"title":{},"body":{"license.html":{}}}],["fix",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":412,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":653,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":411,"title":{},"body":{"index.html":{}}}],["frame",{"_index":282,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":485,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":663,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":604,"title":{},"body":{"license.html":{}}}],["futur",{"_index":333,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":437,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":249,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":342,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["give",{"_index":740,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["go",{"_index":410,"title":{},"body":{"index.html":{}}}],["grant",{"_index":588,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["guid",{"_index":149,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["guide](../addit",{"_index":187,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["hack",{"_index":674,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":234,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":400,"title":{},"body":{"index.html":{}}}],["hash",{"_index":483,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["head",{"_index":434,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["headers).pipe(first",{"_index":206,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers.t",{"_index":640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["headers['correl",{"_index":223,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers['repli",{"_index":222,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["heart",{"_index":666,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hello",{"_index":721,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["help",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":702,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["herebi",{"_index":587,"title":{},"body":{"license.html":{}}}],["holder",{"_index":622,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":460,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":478,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":651,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":310,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":294,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":499,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/stomp.html#d.tqd",{"_index":714,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/tutorials/tutori",{"_index":690,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["https://www.rabbitmq.com/web",{"_index":474,"title":{},"body":{"index.html":{}}}],["i.",{"_index":682,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["id",{"_index":218,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ideal",{"_index":734,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["identifi",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":164,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["impli",{"_index":614,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":597,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["incomingmessag",{"_index":706,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["inconsist",{"_index":433,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":301,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":652,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":560,"title":{},"body":{"index.html":{}}}],["initi",{"_index":245,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["initstomp",{"_index":554,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["injection.html",{"_index":479,"title":{},"body":{"index.html":{}}}],["instal",{"_index":444,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":753,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":290,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":541,"title":{},"body":{"index.html":{}}}],["intern",{"_index":520,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":580,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["ionic",{"_index":442,"title":{},"body":{"index.html":{}}}],["issu",{"_index":265,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["jimi",{"_index":570,"title":{},"body":{"index.html":{}}}],["js",{"_index":303,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":655,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":466,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":328,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":311,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/ng5",{"_index":457,"title":{},"body":{"index.html":{}}}],["js/ng6",{"_index":456,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":450,"title":{},"body":{"index.html":{}}}],["json",{"_index":526,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":528,"title":{},"body":{"index.html":{}}}],["jump",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":612,"title":{},"body":{"license.html":{}}}],["know",{"_index":203,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["kumar",{"_index":574,"title":{},"body":{"index.html":{},"license.html":{}}}],["languag",{"_index":696,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["liabil",{"_index":626,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":623,"title":{},"body":{"license.html":{}}}],["librari",{"_index":237,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":581,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":598,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":432,"title":{},"body":{"index.html":{}}}],["lint",{"_index":756,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":482,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":490,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["magic",{"_index":712,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["main",{"_index":331,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":421,"title":{},"body":{"index.html":{}}}],["make",{"_index":175,"title":{},"body":{"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["manag",{"_index":414,"title":{},"body":{"index.html":{}}}],["mani",{"_index":668,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["manual",{"_index":244,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["map",{"_index":503,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":537,"title":{},"body":{"index.html":{}}}],["master",{"_index":415,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":669,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["merchant",{"_index":615,"title":{},"body":{"license.html":{}}}],["merg",{"_index":330,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":159,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message');pleas",{"_index":524,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":512,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message.headers['correl",{"_index":217,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["message.headers['repli",{"_index":704,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["michel",{"_index":577,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":379,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":582,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":487,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["more",{"_index":564,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":515,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":401,"title":{},"body":{"index.html":{}}}],["myserviceendpoint",{"_index":698,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["need",{"_index":468,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":619,"title":{},"body":{"license.html":{}}}],["note",{"_index":525,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":607,"title":{},"body":{"license.html":{}}}],["now",{"_index":281,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":324,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":157,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["observable.cr",{"_index":210,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["obtain",{"_index":591,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":672,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":422,"title":{},"body":{"index.html":{}}}],["offer",{"_index":425,"title":{},"body":{"index.html":{}}}],["old",{"_index":649,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":204,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["onc",{"_index":565,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["oper",{"_index":502,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["otherwis",{"_index":631,"title":{},"body":{"license.html":{}}}],["out",{"_index":633,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["outgoingmessag",{"_index":707,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["outlin",{"_index":741,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["overview",{"_index":635,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":257,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":343,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["part",{"_index":347,"title":{},"body":{"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["particular",{"_index":617,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["payload",{"_index":173,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["per",{"_index":533,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":586,"title":{},"body":{"license.html":{}}}],["permit",{"_index":603,"title":{},"body":{"license.html":{}}}],["person",{"_index":590,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":507,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":472,"title":{},"body":{"index.html":{}}}],["portion",{"_index":610,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":316,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":566,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":467,"title":{},"body":{"index.html":{}}}],["privat",{"_index":192,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["procedur",{"_index":190,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["process",{"_index":548,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["product",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":687,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["project",{"_index":338,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":578,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":348,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":521,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":618,"title":{},"body":{"license.html":{}}}],["python.html",{"_index":692,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["queu",{"_index":561,"title":{},"body":{"index.html":{}}}],["queue",{"_index":154,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["queue/rpc",{"_index":195,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["quit",{"_index":406,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":161,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["r.service.t",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rais",{"_index":429,"title":{},"body":{"index.html":{}}}],["read",{"_index":463,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":547,"title":{},"body":{"index.html":{}}}],["readm",{"_index":231,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":399,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["reap",{"_index":492,"title":{},"body":{"index.html":{}}}],["reason",{"_index":736,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["receiv",{"_index":731,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["recent",{"_index":428,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":304,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["remain",{"_index":751,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["remot",{"_index":189,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["repli",{"_index":153,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyqueuenam",{"_index":150,"title":{},"body":{"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["replyto",{"_index":703,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["report",{"_index":440,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":176,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["request).subscribe((messag",{"_index":725,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["request/respons",{"_index":683,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["requir",{"_index":733,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["resourc",{"_index":488,"title":{},"body":{"index.html":{}}}],["respons",{"_index":685,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["restrict",{"_index":596,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["right",{"_index":599,"title":{},"body":{"license.html":{}}}],["rout",{"_index":684,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rpc",{"_index":147,"title":{"additional-documentation/rpc---remote-procedure-call.html":{}},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["rpc(serviceendpoint",{"_index":172,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.config",{"_index":186,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.config.t",{"_index":146,"title":{},"body":{"injectables/StompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc.config.ts:19",{"_index":152,"title":{},"body":{"injectables/StompRPCConfig.html":{}}}],["rpc.config.ts:23",{"_index":156,"title":{},"body":{"injectables/StompRPCConfig.html":{}}}],["rpc.service.t",{"_index":163,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:22",{"_index":169,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:41",{"_index":174,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:49",{"_index":179,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserv",{"_index":211,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserver.next(messag",{"_index":220,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":158,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["rxjs/oper",{"_index":185,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["sam",{"_index":568,"title":{},"body":{"index.html":{}}}],["same",{"_index":402,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sampl",{"_index":232,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["saveimport",{"_index":658,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":445,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":413,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["secur",{"_index":735,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sell",{"_index":602,"title":{},"body":{"license.html":{}}}],["semant",{"_index":496,"title":{},"body":{"index.html":{}}}],["send",{"_index":221,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sent",{"_index":701,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["servic",{"_index":165,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["serviceendpoint",{"_index":177,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["setupreplyqueu",{"_index":151,"title":{},"body":{"injectables/StompRPCConfig.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["setupreplyqueuefntyp",{"_index":155,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["sever",{"_index":477,"title":{},"body":{"index.html":{}}}],["shall",{"_index":608,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpl",{"_index":716,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simpli",{"_index":746,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simplifi",{"_index":739,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["singl",{"_index":732,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["six",{"_index":691,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["sock",{"_index":647,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":592,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":427,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["specif",{"_index":240,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["specifi",{"_index":489,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":382,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":657,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":145,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":227,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":230,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":250,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":530,"title":{},"body":{"index.html":{}}}],["step",{"_index":750,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":233,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":475,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":236,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":393,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":228,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":160,"title":{},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":518,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":508,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":511,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":312,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":464,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":435,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":454,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":453,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":522,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":501,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":452,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":448,"title":{},"body":{"index.html":{}}}],["stomprpcconfig",{"_index":144,"title":{"injectables/StompRPCConfig.html":{}},"body":{"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"coverage.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":199,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":201,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["stomprpcconfigforactivemq",{"_index":742,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservic",{"_index":162,"title":{"injectables/StompRPCService.html":{}},"body":{"injectables/StompRPCService.html":{},"coverage.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprpcservice.rpc(myserviceendpoint",{"_index":724,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.publish(replyto",{"_index":710,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.st",{"_index":531,"title":{},"body":{"index.html":{}}}],["stompservice.subscribe(myserviceendpoint).subscribe((messag",{"_index":700,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservice.subscribe(replyqueuenam",{"_index":747,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stompservicefactori",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":538,"title":{},"body":{"index.html":{}}}],["stream",{"_index":167,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["stream(serviceendpoint",{"_index":178,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["streamlin",{"_index":654,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["structur",{"_index":345,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":397,"title":{},"body":{"index.html":{}}}],["sub",{"_index":510,"title":{},"body":{"index.html":{}}}],["subject",{"_index":605,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":600,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":235,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["subscribe((messag",{"_index":219,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["subscribe((msg_bodi",{"_index":513,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":539,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":500,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":182,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["substanti",{"_index":609,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":404,"title":{},"body":{"index.html":{}}}],["success",{"_index":562,"title":{},"body":{"index.html":{}}}],["super",{"_index":246,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":260,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["switch",{"_index":285,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":545,"title":{},"body":{"index.html":{}}}],["temp",{"_index":194,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["templat",{"_index":505,"title":{},"body":{"index.html":{}}}],["termin",{"_index":730,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":711,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["third",{"_index":723,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["this._repliesobserv",{"_index":207,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":216,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._replyqueuenam",{"_index":200,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._setupreplyqueu",{"_index":202,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":208,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this._stompservice.config",{"_index":557,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":543,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":558,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":523,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":536,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":509,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":247,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":556,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":248,"title":{},"body":{"injectables/StompService.html":{}}}],["this.stompservic",{"_index":209,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.defaultmessagesobserv",{"_index":197,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.publish(serviceendpoint",{"_index":224,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stream(serviceendpoint",{"_index":205,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["those",{"_index":671,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":660,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":546,"title":{},"body":{"index.html":{}}}],["time",{"_index":418,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["topic/echo",{"_index":699,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["topic/replies.${uuid.uuid",{"_index":745,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["tort",{"_index":630,"title":{},"body":{"license.html":{}}}],["travi",{"_index":297,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":385,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":326,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["turn",{"_index":718,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["two",{"_index":681,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":638,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":287,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":408,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["uniqu",{"_index":689,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["unit",{"_index":677,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":519,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["updat",{"_index":276,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":166,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":451,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["user",{"_index":462,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":491,"title":{},"body":{"index.html":{}}}],["usual",{"_index":544,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["uuid",{"_index":180,"title":{},"body":{"injectables/StompRPCService.html":{},"dependencies.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["uuid.uuid",{"_index":215,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":497,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":354,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":693,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["version",{"_index":270,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":238,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":476,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":243,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":611,"title":{},"body":{"license.html":{}}}],["watch",{"_index":529,"title":{},"body":{"index.html":{}}}],["way",{"_index":318,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["web",{"_index":471,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":656,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":443,"title":{},"body":{"index.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["whether",{"_index":627,"title":{},"body":{"license.html":{}}}],["wire",{"_index":242,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":595,"title":{},"body":{"license.html":{}}}],["work",{"_index":441,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/rpc---remote-procedure-call.html":{}}}],["worri",{"_index":662,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":398,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":446,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":754,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["ye",{"_index":171,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["yield",{"_index":728,"title":{},"body":{"additional-documentation/rpc---remote-procedure-call.html":{}}}],["yourclass",{"_index":553,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCConfig.html":{"url":"injectables/StompRPCConfig.html","title":"injectable - StompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.config.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the reply queue\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.config.ts:23\n                            \n                        \n\n                \n                    \n                        Setup the reply queue\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Message } from \"@stomp/stompjs\";\nimport {Injectable} from \"@angular/core\";\nimport {StompRService} from \"./stomp-r.service\";\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, stompService: StompRService) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\n@Injectable()\nexport class StompRPCConfig {\n  /**\n   * Name of the reply queue\n   */\n  replyQueueName?: string;\n  /**\n   * Setup the reply queue\n   */\n  setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCService.html":{"url":"injectables/StompRPCService.html","title":"injectable - StompRPCService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of RPC service using messaging.\nPlease see the guide for details.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stompService: StompRService, stompRPCConfig?: StompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp-rpc.service.ts:22\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    stompService\n                                                  \n                                                        \n                                                                    StompRService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    stompRPCConfig\n                                                  \n                                                        \n                                                                    StompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:41\n                            \n                        \n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(serviceEndPoint: string, payload: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:49\n                            \n                        \n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Message, StompHeaders} from '@stomp/stompjs';\nimport {UUID} from 'angular2-uuid';\nimport {Observable, Observer, Subscription} from \"rxjs\";\nimport {filter, first} from \"rxjs/operators\";\nimport {StompRService} from \"./stomp-r.service\";\nimport {setupReplyQueueFnType, StompRPCConfig} from \"./stomp-rpc.config\";\n\n/**\n * An implementation of RPC service using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\n@Injectable()\nexport class StompRPCService {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.stompService.defaultMessagesObservable;\n  };\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private stompService: StompRService, private stompRPCConfig?: StompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders): Observable {\n    // We know there will be only one message in reply\n    return this.stream(serviceEndPoint, payload, headers).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(serviceEndPoint: string, payload: string, headers: StompHeaders = {}) {\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.stompService);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.stompService.publish(serviceEndPoint, payload, headers);\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n6.1.0.beta.4 2018-09-24\n\nCorrect packaging error\n\n6.1.0.beta.3 2018-09-23\n\nRPC support\n\n4.0.1 & 6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.config.ts\n            \n            \n                injectable\n            \n            \n                StompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                StompRPCService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.7\n        \n            angular2-uuid : ^1.1.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            setupReplyQueueFnType   (src/.../stomp-rpc.config.ts)\n                        \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-rpc.config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rpc---remote-procedure-call.html":{"url":"additional-documentation/rpc---remote-procedure-call.html","title":"additional-page - RPC - Remote Procedure Call","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRPC - Remote Procedure Call\nMessaging usually works one way.\nThere is however a convention for two way communication (i.e. request/response).\nThis involves reply-to queues which routes the response back to correct client program\nand correlation-id to uniquely match a response to the correct request.\nSee: https://www.rabbitmq.com/tutorials/tutorial-six-python.html for a sample using\na very similar approach.\nImplementing the RPC server endpoint\nThis can be implemented in any language, in most cases it will be there in some backend server.\n    const myServiceEndPoint = '/topic/echo';\n\n    stompService.subscribe(myServiceEndPoint).subscribe((message: Message) => {\n      // The response needs to be sent back here\n      const replyTo = message.headers['reply-to'];\n\n      // Same correlation id needs to be sent back as message header\n      const correlationId = message.headers['correlation-id'];\n\n      // Process the request, compute the response\n      const incomingMessage = message.body;\n\n      const outgoingMessage = 'Echoing - ' + incomingMessage;\n\n      // Send the response back to destination `replyTo` with `correlation-id` header\n      stompService.publish(replyTo, outgoingMessage, {'correlation-id' : correlationId});\n    });Using it from the client\nRabbitMQ\nRabbitMQ has special support for temp-queues in reply-to messages\nwhich make things to work magically. Really I mean it.\nIf you don't believe me check details at https://www.rabbitmq.com/stomp.html#d.tqd\nWell the client code looks equally simple and similar to what you would expect\nto use with any backend service.\nThe StompRPCService can be created by means of Angular Dependency Injection\nor be created manually.\nIt in turns needs an initialized StompRService as\na dependency (or argument).\nStompService is a derived class of StompRService, so that will work as well.\n    const myServiceEndPoint = '/topic/echo';\n\n    const request = 'Hello';\n    // It accepts a optional third argument a Hash of headers to be sent as part of the request\n    stompRPCService.rpc(myServiceEndPoint, request).subscribe((message: Message) => {\n      // Consume the response\n      console.log(message.body);\n    });Just like Ajax requests, it will yield only once.\nThere is another method called stream that will not terminate after one response.\nThis can be used to receive stream of responses for a single request.\nIf you use that it will be your responsibility to unsubscribe when you do not expect\nany additional messages.\nOther Brokers\nThere are few requirements:\n\nthe reply queue name must be unique across the broker.\nideally, for security reasons only the client creating the queue should have access to it.\n\nMany brokers have temp-queue concept which should simplify your work. \nFollowing gives and outline:\n  const stompRPCConfigForActiveMQ = {\n    // A unique name, BTW angular2-uuid module is already added as dependency\n    replyQueueName: `/topic/replies.${UUID.UUID()}`,\n\n    // Simply subscribe, you would need to secure by adding broker specific options\n    setupReplyQueue: (replyQueueName: string, stompService: StompRService) => {\n      return stompService.subscribe(replyQueueName);\n    }\n  };This custom config would need to be passed as second parameter in StompRPCService\nconstructor, or, can be passed as an Angular Dependency.\nApart from this additional setup step usage remains same as RabbitMQ case as documented above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
