var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.422,1,1.919]],["body/modules/AppModule.html",[0,1.813,1,2.988,2,1.579,3,1.378,4,0.777,5,3.638,6,1.584,7,0.054,8,4.441,9,3.638,10,2.921,11,4.441,12,2.095,13,3.638,14,2.448,15,3.638,16,1.378,17,0.66,18,0.043,19,0.043]],["title/classes/MyStompRService.html",[17,0.518,20,1.642]],["body/classes/MyStompRService.html",[2,0.94,3,0.82,4,0.463,6,1.037,7,0.054,16,1.627,17,0.67,18,0.031,19,0.031,20,1.808,21,1.247,22,2.484,23,1.602,24,0.622,25,2.474,26,2.018,27,3.45,28,1.08,29,2.166,30,2.58,31,2.126,32,1.84,33,2.964,34,2.964,35,2.964,36,1.533,37,2.964,38,0.781,39,1.163,40,1.602,41,1.247,42,1.398,43,1.564,44,1.08,45,2.52,46,1.84,47,1.247,48,1.808,49,1.564,50,1.247,51,0.94,52,1.247,53,1.739,54,1.457,55,1.739,56,1.08,57,1.037,58,2.018,59,1.08,60,1.564,61,1.564,62,1.08,63,1.808,64,1.08,65,1.08,66,1.564,67,1.564,68,1.864,69,1.84,70,1.08,71,1.061,72,1.08,73,1.08,74,0.94,75,1.564,76,1.08,77,1.08,78,1.08,79,1.08,80,1.08,81,1.08,82,0.94,83,1.08,84,1.739,85,1.247,86,1.247,87,1.247,88,1.08,89,1.08,90,1.247,91,1.247,92,1.457,93,1.739,94,2.52,95,1.457,96,1.739]],["title/classes/MyStompService.html",[17,0.518,90,1.642]],["body/classes/MyStompService.html",[2,0.913,3,0.797,4,0.45,6,1.016,7,0.054,16,1.609,17,0.659,18,0.03,19,0.03,20,1.212,21,1.212,22,2.444,23,1.334,24,0.605,25,2.446,26,1.991,27,3.41,28,1.532,30,2.555,31,2.092,32,1.81,33,2.916,34,2.916,35,2.916,36,1.512,37,2.916,38,0.903,39,1.275,40,1.576,41,1.212,42,1.375,43,1.532,44,1.049,45,2.468,46,1.81,47,1.212,48,1.77,49,1.532,50,1.212,51,0.913,52,1.212,53,1.69,54,1.417,55,1.69,56,1.049,57,1.016,58,1.991,59,1.049,60,1.532,61,1.532,62,1.049,63,1.77,64,1.049,65,1.049,66,1.532,67,1.532,68,1.843,69,1.81,70,1.049,71,1.044,72,1.049,73,1.049,74,0.913,75,1.532,76,1.049,77,1.049,78,1.049,79,1.049,80,1.049,81,1.049,82,0.913,83,1.049,84,1.69,85,1.212,86,1.212,87,1.212,88,1.049,89,1.049,90,1.77,91,1.212,92,2.069,93,1.69,94,2.468,95,1.417,96,1.69,97,1.212,98,2.105,99,2.105,100,0.913,101,0.913,102,0.695,103,1.212,104,2.105]],["title/injectables/StompConfig.html",[39,0.82,105,0.71]],["body/injectables/StompConfig.html",[2,0.729,3,0.636,4,0.359,6,0.857,7,0.054,12,0.968,16,0.636,17,0.305,18,0.025,19,0.025,24,0.483,28,2.031,32,1.293,36,1.35,38,0.646,39,0.746,40,1.126,41,1.495,42,0.983,46,2.031,47,1.495,49,1.293,50,1.495,51,1.126,52,1.495,57,1.403,58,2.292,59,1.293,60,1.293,61,1.293,62,1.293,64,1.777,65,1.777,66,2.031,67,2.031,68,1.904,69,2.187,70,1.777,71,1.171,72,1.777,73,1.293,74,1.126,75,1.777,76,1.293,77,1.293,78,1.293,79,1.293,80,1.293,81,1.293,82,1.126,83,1.777,88,2.031,100,1.126,102,1.346,105,0.789,106,1.349,107,1.349,108,2.595,109,1.495,110,2.4,111,1.547,112,3.171,113,1.68,114,2.083,115,1.777,116,1.68,117,2.446,118,2.595,119,2.595,120,1.495,121,2.595,122,2.863,123,3.03,124,1.68,125,2.595,126,1.68,127,2.595,128,1.68,129,1.68,130,1.495,131,2.083,132,1.58,133,1.746,134,1.126,135,2.083,136,2.054,137,1.293,138,2.595,139,1.746,140,2.595,141,2.595,142,2.083,143,2.083]],["title/injectables/StompRPCService.html",[105,0.71,144,1.919]],["body/injectables/StompRPCService.html",[2,0.893,3,0.779,4,0.439,6,1.454,7,0.054,12,1.185,16,0.779,17,0.373,18,0.03,19,0.03,23,1.714,24,0.591,25,1.741,26,1.786,28,1.969,36,1.594,38,0.752,47,1.741,57,1.39,71,0.591,91,1.185,97,1.185,100,1.312,101,1.312,102,1.305,103,1.741,105,0.891,115,2.097,117,2.788,132,1.025,137,1.025,144,2.034,145,2.424,146,1.651,147,4.4,148,3.95,149,3.95,150,3.584,151,2.057,152,3.023,153,3.023,154,4.4,155,2.057,156,2.057,157,2.057,158,3.14,159,3.023,160,3.023,161,3.584,162,2.057,163,2.658,164,1.185,165,2.427,166,1.185,167,1.651,168,2.427,169,1.651,170,1.651,171,2.057,172,2.057,173,1.651,174,2.057,175,2.057,176,2.057,177,1.651,178,2.057,179,2.057,180,2.057,181,2.057,182,2.057,183,2.057,184,3.023,185,1.384,186,3.584,187,2.057,188,2.057,189,2.057,190,3.023,191,2.057,192,2.057,193,1.651,194,1.651,195,2.057,196,2.057,197,2.057,198,2.057,199,2.057,200,2.057]],["title/injectables/StompService.html",[38,0.71,105,0.71]],["body/injectables/StompService.html",[2,1.164,3,1.016,4,0.573,6,1.369,7,0.054,12,1.545,16,1.016,17,0.487,18,0.036,19,0.036,22,1.805,23,1.799,26,1.818,28,1.337,36,1.016,38,0.908,39,1.279,44,1.818,71,1.049,97,2.387,100,1.164,101,1.164,102,0.886,103,1.545,105,1.031,107,2.929,109,2.387,130,1.545,132,2.217,136,2.387,158,2.455,163,2.455,166,2.101,173,2.154,201,2.154,202,2.562,203,1.93,204,3.648,205,3.648,206,2.683,207,3.648,208,2.101,209,2.929,210,2.683,211,2.683,212,1.805,213,2.154,214,2.683,215,1.805,216,2.683,217,2.683,218,2.154,219,2.683,220,2.683,221,2.683,222,2.683,223,2.154,224,1.545,225,2.683,226,2.683,227,2.683]],["title/changelog.html",[228,1.634,229,1.634,230,1.634]],["body/changelog.html",[3,0.908,4,0.512,7,0.041,18,0.033,19,0.033,38,0.596,39,0.689,40,1.04,51,1.04,56,1.682,57,1.29,71,0.689,74,1.04,82,1.464,102,1.115,105,0.596,109,1.943,111,1.464,114,1.924,115,1.195,117,1.38,120,1.38,123,2.628,131,1.924,134,1.695,164,1.38,202,1.38,203,1.464,208,1.38,212,1.613,224,2.249,230,1.613,231,2.397,232,2.397,233,1.924,234,2.397,235,2.397,236,1.924,237,1.613,238,2.397,239,3.403,240,1.924,241,3.135,242,1.924,243,3.374,244,1.924,245,1.924,246,2.397,247,3.587,248,3.374,249,1.946,250,2.397,251,2.397,252,2.709,253,3.374,254,2.397,255,2.397,256,2.271,257,1.924,258,2.709,259,3.403,260,1.924,261,1.613,262,2.397,263,3.374,264,3.374,265,1.613,266,1.924,267,2.397,268,2.397,269,2.397,270,2.397,271,2.397,272,2.397,273,2.397,274,1.924,275,1.613,276,2.397,277,2.628,278,2.397,279,1.924,280,1.613,281,2.397,282,2.271,283,1.613,284,2.271,285,1.613,286,2.397,287,1.924,288,2.397,289,1.38,290,1.924,291,1.924,292,2.397,293,2.397,294,2.397,295,2.397,296,1.924,297,1.38,298,2.397,299,1.924,300,2.397,301,1.924,302,2.397,303,1.924,304,2.709,305,2.397,306,1.924,307,2.397,308,2.397,309,2.397,310,2.397,311,1.924,312,2.397,313,2.397,314,2.397,315,1.924,316,1.38,317,2.397,318,1.924,319,2.397,320,2.397,321,1.613,322,1.924]],["title/coverage.html",[323,3.052]],["body/coverage.html",[4,0.628,7,0.053,17,0.703,18,0.038,19,0.038,20,1.691,21,2.762,23,1.274,38,0.731,39,0.844,42,1.866,43,1.464,48,1.691,49,1.464,68,2.239,90,1.691,102,0.97,105,1.148,106,2.358,134,1.274,144,1.976,145,2.232,146,2.358,201,2.358,323,2.358,324,2.937,325,2.937,326,2.358,327,2.608,328,3.112,329,5.099,330,2.358,331,3.483,332,2.358,333,2.358,334,2.358,335,2.937,336,2.937,337,2.937,338,2.937,339,2.358,340,2.937,341,4.339,342,2.937,343,2.937,344,2.937,345,2.937,346,2.937,347,2.937]],["title/dependencies.html",[249,1.697,348,2.428]],["body/dependencies.html",[7,0.051,18,0.047,19,0.047,164,2.352,165,3.279,166,2.352,249,2.036,349,3.279,350,4.085,351,4.085]],["title/miscellaneous/enumerations.html",[352,0.802,353,2.734]],["body/miscellaneous/enumerations.html",[7,0.046,18,0.046,19,0.046,24,1.133,30,2.27,111,1.71,132,1.964,145,2.27,202,2.27,237,2.652,289,2.27,352,1.302,353,3.164,354,4.66,355,3.164,356,4.66,357,3.942,358,3.164]],["title/miscellaneous/functions.html",[42,1.289,352,0.802]],["body/miscellaneous/functions.html",[7,0.052,18,0.041,19,0.041,21,1.896,24,0.946,38,1.14,42,1.247,43,2.284,48,2.639,92,2.215,95,2.215,100,2.091,101,2.091,103,2.775,331,2.643,332,3.35,333,3.35,334,3.35,339,3.35,352,1.088,359,4.582,360,4.582,361,4.818,362,3.292,363,5.08,364,3.292,365,3.292]],["title/index.html",[24,0.698,228,1.634,229,1.634]],["body/index.html",[4,0.557,6,0.729,7,0.051,14,2.406,17,0.473,18,0.017,19,0.017,23,1.13,25,0.972,26,0.494,30,0.571,31,0.972,32,0.842,36,0.639,38,0.89,39,1.028,40,0.957,44,1.926,46,0.494,51,0.43,52,0.571,56,0.494,57,0.861,58,1.585,59,0.494,60,0.842,61,0.842,62,0.494,63,0.972,64,0.494,65,0.494,66,0.842,67,1.298,68,1.13,69,1.1,70,0.494,71,1.028,72,0.494,73,0.842,74,0.43,75,0.842,76,0.494,77,0.842,78,0.494,79,0.494,80,0.494,81,0.842,82,0.43,83,0.494,85,0.571,86,0.571,87,0.571,88,0.494,89,0.494,91,0.972,97,0.571,101,0.733,105,0.648,109,2.059,111,1.552,115,0.842,117,2.059,120,0.571,122,1.356,123,1.484,130,0.972,132,1.859,133,1.753,134,1.13,135,2.091,136,0.972,137,0.494,139,1.484,158,1.484,163,2.285,164,1.27,166,0.972,168,0.796,169,0.796,170,0.796,185,1.136,193,0.796,194,0.796,202,0.972,203,1.676,208,2.148,209,1.771,212,1.967,213,2.346,215,1.136,218,1.771,223,1.356,224,1.5,230,0.667,233,0.796,236,0.796,237,0.667,239,3.278,240,2.091,241,2.091,242,0.796,244,1.771,245,1.356,247,1.356,249,1.298,252,0.796,256,1.136,257,0.796,258,0.796,259,0.796,261,0.667,265,2.406,266,2.871,275,1.136,277,1.753,279,1.356,280,1.136,282,2.747,283,1.753,284,2.809,285,0.667,287,0.796,289,1.27,290,1.356,291,0.796,297,0.571,301,2.091,304,0.796,311,0.796,316,0.571,318,0.796,321,1.136,322,1.771,349,1.356,358,1.356,366,2.206,367,2.206,368,0.991,369,0.991,370,0.991,371,0.991,372,0.991,373,1.689,374,0.991,375,1.689,376,2.206,377,0.991,378,0.991,379,0.991,380,0.991,381,0.991,382,0.991,383,0.991,384,0.991,385,2.091,386,0.991,387,1.689,388,0.991,389,1.689,390,0.991,391,0.796,392,0.991,393,1.689,394,1.689,395,0.991,396,0.991,397,1.689,398,0.991,399,0.991,400,0.991,401,0.991,402,0.991,403,0.991,404,0.991,405,0.991,406,0.991,407,0.991,408,0.991,409,1.689,410,1.356,411,0.991,412,0.991,413,0.991,414,1.356,415,0.991,416,0.991,417,1.753,418,0.991,419,1.356,420,0.991,421,0.991,422,0.991,423,1.689,424,0.796,425,0.991,426,0.991,427,0.991,428,3.73,429,0.991,430,0.991,431,0.991,432,2.206,433,1.689,434,3.395,435,0.991,436,1.356,437,0.991,438,0.991,439,0.991,440,0.991,441,2.726,442,2.346,443,1.689,444,0.991,445,0.991,446,0.991,447,0.991,448,0.991,449,0.991,450,0.991,451,0.991,452,0.991,453,0.991,454,2.206,455,0.991,456,0.991,457,0.991,458,0.796,459,0.667,460,0.796,461,0.991,462,0.991,463,0.991,464,0.991,465,0.991,466,0.991,467,0.991,468,1.689,469,0.991,470,0.991,471,0.991,472,0.991,473,0.991,474,0.991,475,0.991,476,0.991,477,0.991,478,0.991,479,0.991,480,0.991,481,1.689,482,0.991,483,1.689,484,0.991,485,0.991,486,0.991,487,0.991,488,0.991,489,0.991,490,0.991,491,0.991,492,1.689,493,0.796,494,0.991,495,0.991,496,0.991,497,0.991,498,0.796,499,0.991,500,1.689,501,0.991,502,1.689,503,2.605,504,1.689,505,0.991,506,0.991,507,1.689,508,0.991,509,0.991,510,0.991,511,0.991,512,0.991,513,0.991,514,0.991,515,0.991,516,0.991,517,0.796,518,0.991,519,1.689,520,0.991,521,0.991,522,0.991,523,1.136,524,0.991,525,0.991,526,0.991,527,0.991,528,0.991,529,0.991,530,0.991,531,0.991,532,0.796,533,1.689,534,0.991,535,0.991,536,0.991,537,0.991,538,0.991,539,0.991,540,0.991,541,0.991,542,0.991,543,0.991,544,0.991,545,0.991,546,0.796,547,0.796,548,0.991,549,0.991,550,0.991,551,0.991,552,0.991,553,0.991,554,0.667,555,0.796]],["title/license.html",[228,1.634,229,1.634,554,1.634]],["body/license.html",[4,0.632,7,0.038,14,1.989,18,0.038,19,0.038,54,1.989,111,1.283,134,1.283,167,2.373,203,1.689,296,2.373,303,2.373,321,1.989,385,2.373,458,2.373,459,3.113,460,2.373,546,2.373,547,2.373,554,1.989,555,2.373,556,4.353,557,2.957,558,2.957,559,3.893,560,2.957,561,2.957,562,2.957,563,3.893,564,2.957,565,5.166,566,2.957,567,3.893,568,4.353,569,2.957,570,4.353,571,3.125,572,2.957,573,2.957,574,2.957,575,2.957,576,2.957,577,2.957,578,2.957,579,3.893,580,3.893,581,2.957,582,2.957,583,3.893,584,2.957,585,2.957,586,2.957,587,2.957,588,2.957,589,2.957,590,2.957,591,2.957,592,2.957,593,2.957,594,2.957,595,2.957,596,2.957,597,2.957,598,2.957,599,2.957,600,2.957,601,2.957,602,2.957,603,2.957,604,2.957,605,2.373]],["title/modules.html",[0,1.895]],["body/modules.html",[0,2.093,1,2.826,7,0.047,18,0.047,19,0.047,606,4.199]],["title/overview.html",[607,3.052]],["body/overview.html",[0,2.055,7,0.047,17,0.748,18,0.047,19,0.047,105,1.025,607,3.309,608,4.122,609,4.122,610,4.122]],["title/miscellaneous/typealiases.html",[352,0.802,611,3.405]],["body/miscellaneous/typealiases.html",[7,0.046,18,0.046,19,0.046,24,1.138,57,1.308,102,1.642,115,2.477,145,2.28,352,1.308,355,3.178,612,3.959,613,4.672,614,3.959,615,3.959]],["title/miscellaneous/variables.html",[327,2.291,352,0.802]],["body/miscellaneous/variables.html",[7,0.053,18,0.044,19,0.044,24,1.05,71,1.28,89,1.821,102,1.471,110,3.364,137,2.219,326,2.933,327,2.458,328,4.184,330,2.933,352,1.207,616,3.653,617,3.653,618,4.452,619,3.653]],["title/additional-documentation/sock-js.html",[274,1.697,316,1.217,523,1.422,620,2.114]],["body/additional-documentation/sock-js.html",[6,0.673,7,0.051,10,1.636,16,0.772,17,0.37,18,0.029,19,0.029,31,1.174,32,1.96,36,1.137,39,1.13,40,2.223,41,1.729,42,1.489,43,1.96,44,1.016,46,1.96,49,1.016,50,1.174,51,0.884,56,1.496,57,0.992,58,2.09,59,1.016,60,1.496,61,1.496,62,1.016,63,1.729,64,1.016,65,1.016,66,1.496,67,1.496,68,1.707,69,1.777,70,1.016,71,1.025,72,1.016,73,1.496,74,0.884,75,1.496,76,1.016,77,1.016,78,1.016,79,1.496,80,1.496,81,1.496,82,0.884,83,1.016,85,1.174,86,1.174,87,1.174,88,1.016,89,1.016,100,0.884,101,0.884,110,1.372,111,0.884,120,1.729,130,1.729,133,1.372,136,1.174,137,1.016,142,1.636,143,1.636,177,2.41,185,1.372,203,1.819,208,1.174,215,2.646,224,1.174,256,1.372,260,1.636,261,1.372,265,2.02,275,2.02,277,2.821,280,1.372,282,1.372,283,1.372,284,1.372,285,1.372,289,1.174,297,1.174,306,1.636,391,1.636,414,1.636,417,2.02,424,2.41,436,1.636,441,2.41,442,2.41,459,1.372,493,1.636,498,2.41,517,1.636,532,1.636,571,2.41,621,2.038,622,2.038,623,1.636,624,2.038,625,2.038,626,2.038,627,2.038,628,3.003,629,3.003,630,3.003,631,2.038,632,2.038,633,2.038,634,2.038,635,2.038,636,2.038,637,2.038,638,2.038,639,2.038,640,2.038,641,2.038,642,2.038,643,2.038,644,2.038,645,2.038,646,2.038,647,3.003,648,3.003,649,2.038,650,1.636,651,2.038,652,3.003,653,2.038,654,2.038]],["title/additional-documentation/contributing.html",[316,1.398,523,1.634,655,1.949]],["body/additional-documentation/contributing.html",[4,0.807,7,0.051,18,0.044,19,0.044,134,1.638,139,3.056,203,1.638,249,1.882,297,2.805,299,3.031,315,3.031,410,3.031,417,2.541,419,3.031,605,3.031,623,3.031,650,3.031,655,3.031,656,3.776,657,3.776,658,3.776,659,4.542]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":295,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":608,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":610,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":411,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":244,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":558,"title":{},"body":{"license.html":{}}}],["2018",{"_index":233,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["23/23",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":609,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":349,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.1",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["4.0.7",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":245,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":412,"title":{},"body":{"index.html":{}}}],["50",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":240,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":390,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["6.x.x",{"_index":242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":468,"title":{},"body":{"index.html":{}}}],["abil",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":600,"title":{},"body":{"license.html":{}}}],["activ",{"_index":446,"title":{},"body":{"index.html":{}}}],["actual",{"_index":376,"title":{},"body":{"index.html":{}}}],["ad",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":420,"title":{},"body":{"index.html":{}}}],["addit",{"_index":523,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":422,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":651,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":654,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":260,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":574,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":378,"title":{},"body":{"index.html":{}}}],["angular",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":166,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"dependencies.html":{},"index.html":{}}}],["angular4",{"_index":367,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":368,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":369,"title":{},"body":{"index.html":{}}}],["api",{"_index":322,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":290,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":397,"title":{},"body":{"index.html":{}}}],["applic",{"_index":621,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":604,"title":{},"body":{"license.html":{}}}],["around",{"_index":653,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":525,"title":{},"body":{"index.html":{}}}],["associ",{"_index":566,"title":{},"body":{"license.html":{}}}],["assum",{"_index":443,"title":{},"body":{"index.html":{}}}],["astha",{"_index":548,"title":{},"body":{"index.html":{}}}],["async",{"_index":479,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":219,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":593,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":453,"title":{},"body":{"index.html":{}}}],["base",{"_index":471,"title":{},"body":{"index.html":{}}}],["be",{"_index":392,"title":{},"body":{"index.html":{}}}],["beat",{"_index":642,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":505,"title":{},"body":{"index.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":466,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":393,"title":{},"body":{"index.html":{}}}],["branch",{"_index":389,"title":{},"body":{"index.html":{}}}],["break",{"_index":382,"title":{},"body":{"index.html":{}}}],["broken",{"_index":404,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":606,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":557,"title":{},"body":{"license.html":{}}}],["call",{"_index":434,"title":{},"body":{"index.html":{}}}],["callback",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":259,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":230,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":545,"title":{},"body":{"index.html":{}}}],["charg",{"_index":562,"title":{},"body":{"license.html":{}}}],["check",{"_index":623,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":596,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cleanup",{"_index":199,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["cli",{"_index":409,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":632,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":442,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":528,"title":{},"body":{"index.html":{}}}],["come",{"_index":489,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":645,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":280,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":639,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":467,"title":{},"body":{"index.html":{}}}],["condit",{"_index":578,"title":{},"body":{"license.html":{}}}],["config",{"_index":209,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":487,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":513,"title":{},"body":{"index.html":{}}}],["const",{"_index":185,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":205,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["constructor(stompservic",{"_index":151,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["consum",{"_index":490,"title":{},"body":{"index.html":{}}}],["contract",{"_index":601,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":655,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":540,"title":{},"body":{"index.html":{}}}],["control",{"_index":522,"title":{},"body":{"index.html":{}}}],["convert",{"_index":500,"title":{},"body":{"index.html":{}}}],["copi",{"_index":459,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":556,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["correlationid",{"_index":186,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["correspond",{"_index":508,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":323,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":633,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["critic",{"_index":396,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":536,"title":{},"body":{"index.html":{}}}],["current",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":597,"title":{},"body":{"license.html":{}}}],["deal",{"_index":567,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":549,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":546,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultmessagessubscript",{"_index":184,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":200,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":279,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":428,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":454,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":285,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":431,"title":{},"body":{"index.html":{}}}],["depend",{"_index":249,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":650,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":544,"title":{},"body":{"index.html":{}}}],["directli",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":237,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":296,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":658,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":438,"title":{},"body":{"index.html":{}}}],["don't",{"_index":635,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":638,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":334,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":507,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":353,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":217,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":515,"title":{},"body":{"index.html":{}}}],["etc",{"_index":477,"title":{},"body":{"index.html":{}}}],["even",{"_index":532,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":592,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":552,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":399,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":585,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":380,"title":{},"body":{"index.html":{}}}],["fail",{"_index":648,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":457,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":432,"title":{},"body":{"index.html":{}}}],["few",{"_index":524,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":170,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["find",{"_index":403,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":542,"title":{},"body":{"index.html":{}}}],["first",{"_index":171,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["fit",{"_index":588,"title":{},"body":{"license.html":{}}}],["fix",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":385,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":626,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":384,"title":{},"body":{"index.html":{}}}],["frame",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":458,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":637,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":577,"title":{},"body":{"license.html":{}}}],["futur",{"_index":306,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":410,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":228,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":315,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["go",{"_index":383,"title":{},"body":{"index.html":{}}}],["grant",{"_index":561,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":649,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":211,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":373,"title":{},"body":{"index.html":{}}}],["hash",{"_index":456,"title":{},"body":{"index.html":{}}}],["head",{"_index":407,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers).pipe(first",{"_index":179,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers.t",{"_index":613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["headers['correl",{"_index":197,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["headers['repli",{"_index":195,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["heart",{"_index":641,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":560,"title":{},"body":{"license.html":{}}}],["holder",{"_index":594,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":433,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":451,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":624,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":282,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":265,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":472,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":447,"title":{},"body":{"index.html":{}}}],["id",{"_index":190,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["identifi",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":640,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":586,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":570,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":406,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":625,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":533,"title":{},"body":{"index.html":{}}}],["initi",{"_index":224,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":527,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":452,"title":{},"body":{"index.html":{}}}],["instal",{"_index":417,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":656,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":261,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":514,"title":{},"body":{"index.html":{}}}],["intern",{"_index":493,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":553,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":415,"title":{},"body":{"index.html":{}}}],["issu",{"_index":236,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["jimi",{"_index":543,"title":{},"body":{"index.html":{}}}],["js",{"_index":274,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":266,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":628,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":439,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":301,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":283,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/ng5",{"_index":430,"title":{},"body":{"index.html":{}}}],["js/ng6",{"_index":429,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":423,"title":{},"body":{"index.html":{}}}],["json",{"_index":499,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":501,"title":{},"body":{"index.html":{}}}],["jump",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":584,"title":{},"body":{"license.html":{}}}],["know",{"_index":176,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["kumar",{"_index":547,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":598,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":595,"title":{},"body":{"license.html":{}}}],["librari",{"_index":215,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":554,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":571,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":405,"title":{},"body":{"index.html":{}}}],["lint",{"_index":659,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":455,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":463,"title":{},"body":{"index.html":{}}}],["main",{"_index":304,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":394,"title":{},"body":{"index.html":{}}}],["make",{"_index":287,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manag",{"_index":387,"title":{},"body":{"index.html":{}}}],["mani",{"_index":643,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":223,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":476,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":510,"title":{},"body":{"index.html":{}}}],["master",{"_index":388,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":644,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":587,"title":{},"body":{"license.html":{}}}],["merg",{"_index":303,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":163,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":497,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":485,"title":{},"body":{"index.html":{}}}],["message.headers['correl",{"_index":189,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["messagesobserv",{"_index":148,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["michel",{"_index":550,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":352,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":555,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":460,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":537,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":488,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":374,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":441,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":591,"title":{},"body":{"license.html":{}}}],["note",{"_index":498,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":579,"title":{},"body":{"license.html":{}}}],["now",{"_index":252,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":297,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":158,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["observable.cr",{"_index":182,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["obtain",{"_index":564,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":647,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":395,"title":{},"body":{"index.html":{}}}],["offer",{"_index":398,"title":{},"body":{"index.html":{}}}],["old",{"_index":622,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":177,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{}}}],["onc",{"_index":538,"title":{},"body":{"index.html":{}}}],["oper",{"_index":475,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":603,"title":{},"body":{"license.html":{}}}],["out",{"_index":605,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":607,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":348,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":316,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":589,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["payload",{"_index":154,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["per",{"_index":506,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":559,"title":{},"body":{"license.html":{}}}],["permit",{"_index":576,"title":{},"body":{"license.html":{}}}],["person",{"_index":563,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":480,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":445,"title":{},"body":{"index.html":{}}}],["portion",{"_index":582,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":289,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":539,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":440,"title":{},"body":{"index.html":{}}}],["privat",{"_index":180,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["process",{"_index":521,"title":{},"body":{"index.html":{}}}],["product",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":311,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":551,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{}}}],["protect",{"_index":147,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":321,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":494,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":590,"title":{},"body":{"license.html":{}}}],["queu",{"_index":534,"title":{},"body":{"index.html":{}}}],["queue",{"_index":213,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["queue/rpc",{"_index":160,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["quit",{"_index":379,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":173,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["r.service.t",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":402,"title":{},"body":{"index.html":{}}}],["read",{"_index":436,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":520,"title":{},"body":{"index.html":{}}}],["readm",{"_index":207,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":372,"title":{},"body":{"index.html":{}}}],["reap",{"_index":465,"title":{},"body":{"index.html":{}}}],["recent",{"_index":401,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":275,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["repli",{"_index":161,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["replyqueu",{"_index":149,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["report",{"_index":413,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":194,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["resourc",{"_index":461,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":569,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":572,"title":{},"body":{"license.html":{}}}],["rpc",{"_index":150,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc(serviceendpoint",{"_index":153,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.t",{"_index":146,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:10",{"_index":162,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:12",{"_index":152,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:18",{"_index":155,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserv",{"_index":183,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserver.next(messag",{"_index":192,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":169,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["rxjs/oper",{"_index":172,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["sam",{"_index":541,"title":{},"body":{"index.html":{}}}],["same",{"_index":375,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":208,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":631,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":418,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":386,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":575,"title":{},"body":{"license.html":{}}}],["semant",{"_index":469,"title":{},"body":{"index.html":{}}}],["send",{"_index":193,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":202,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpoint",{"_index":156,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":450,"title":{},"body":{"index.html":{}}}],["shall",{"_index":580,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":620,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":565,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":400,"title":{},"body":{"index.html":{}}}],["specif",{"_index":218,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":462,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":355,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":630,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":145,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":201,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":206,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":229,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":503,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":210,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":448,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":214,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":366,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":204,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":164,"title":{},"body":{"injectables/StompRPCService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":491,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":481,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":484,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":284,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":437,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":408,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":427,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":426,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":495,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":474,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":425,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":421,"title":{},"body":{"index.html":{}}}],["stomprpcservic",{"_index":144,"title":{"injectables/StompRPCService.html":{}},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":504,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":339,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":511,"title":{},"body":{"index.html":{}}}],["stream",{"_index":220,"title":{},"body":{"injectables/StompService.html":{}}}],["stream(serviceendpoint",{"_index":181,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["streamlin",{"_index":627,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":318,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":370,"title":{},"body":{"index.html":{}}}],["sub",{"_index":483,"title":{},"body":{"index.html":{}}}],["subject",{"_index":167,"title":{},"body":{"injectables/StompRPCService.html":{},"license.html":{}}}],["sublicens",{"_index":573,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":212,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((messag",{"_index":191,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["subscribe((msg_bodi",{"_index":486,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":512,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":473,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":168,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["substanti",{"_index":581,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":377,"title":{},"body":{"index.html":{}}}],["success",{"_index":535,"title":{},"body":{"index.html":{}}}],["super",{"_index":225,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":277,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":256,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":518,"title":{},"body":{"index.html":{}}}],["temp",{"_index":159,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["templat",{"_index":478,"title":{},"body":{"index.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":530,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":516,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":531,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":496,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":509,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":482,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":226,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":529,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":227,"title":{},"body":{"injectables/StompService.html":{}}}],["this.messagesobserv",{"_index":174,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.messagesobservable.pipe(filter((messag",{"_index":188,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.replyqueu",{"_index":196,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.defaultmessagesobserv",{"_index":175,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.publish(serviceendpoint",{"_index":198,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stream(serviceendpoint",{"_index":178,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["those",{"_index":646,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":634,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":519,"title":{},"body":{"index.html":{}}}],["time",{"_index":391,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["tort",{"_index":602,"title":{},"body":{"license.html":{}}}],["travi",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":358,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":299,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":611,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":258,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":381,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":652,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":492,"title":{},"body":{"index.html":{}}}],["updat",{"_index":247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":203,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":424,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":435,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":464,"title":{},"body":{"index.html":{}}}],["usual",{"_index":517,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["uuid",{"_index":165,"title":{},"body":{"injectables/StompRPCService.html":{},"dependencies.html":{}}}],["uuid.uuid",{"_index":187,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":470,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":327,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":216,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":449,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":222,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":583,"title":{},"body":{"license.html":{}}}],["watch",{"_index":502,"title":{},"body":{"index.html":{}}}],["way",{"_index":291,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":444,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":629,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":416,"title":{},"body":{"index.html":{}}}],["whether",{"_index":599,"title":{},"body":{"license.html":{}}}],["wire",{"_index":221,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":568,"title":{},"body":{"license.html":{}}}],["work",{"_index":414,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":636,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":371,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":419,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":657,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["ye",{"_index":157,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["yourclass",{"_index":526,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCService.html":{"url":"injectables/StompRPCService.html","title":"injectable - StompRPCService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                messagesObservable\n                            \n                            \n                                    Protected\n                                replyQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stompService: StompRService)\n                    \n                \n                        \n                            \n                                Defined in src/stomp-rpc.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    stompService\n                                                  \n                                                        \n                                                                    StompRService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            messagesObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messagesObservable:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            replyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/temp-queue/rpc-replies'\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Message, StompHeaders } from '@stomp/stompjs';\nimport { UUID } from 'angular2-uuid';\nimport { Observable, Observer, Subject, Subscription } from \"rxjs\";\nimport { filter, first } from \"rxjs/operators\";\nimport { StompRService } from \"./stomp-r.service\";\n\n@Injectable()\nexport class StompRPCService {\n  protected replyQueue = '/temp-queue/rpc-replies';\n\n  protected messagesObservable: Observable;\n\n  constructor(private stompService: StompRService) {\n    this.messagesObservable = this.stompService.defaultMessagesObservable;\n  }\n\n  public rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders): Observable {\n    // We know there will be only one message in reply\n    return this.stream(serviceEndPoint, payload, headers).pipe(first());\n  }\n\n  private stream(serviceEndPoint: string, payload: string, headers: StompHeaders = {}) {\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this.messagesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this.replyQueue;\n        headers['correlation-id'] = correlationId;\n\n        this.stompService.publish(serviceEndPoint, payload, headers);\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n4.0.1 & 6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                StompRPCService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.7\n        \n            angular2-uuid : ^1.1.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
