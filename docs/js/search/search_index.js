var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.422,1,1.919]],["body/modules/AppModule.html",[0,1.812,1,2.987,2,1.578,3,1.377,4,0.777,5,3.636,6,1.583,7,0.054,8,4.44,9,3.636,10,2.919,11,4.44,12,2.094,13,3.636,14,2.447,15,3.636,16,1.377,17,0.66,18,0.043,19,0.043]],["title/classes/MyStompRService.html",[17,0.518,20,1.642]],["body/classes/MyStompRService.html",[2,0.938,3,0.819,4,0.462,6,1.035,7,0.054,16,1.626,17,0.669,18,0.031,19,0.031,20,1.805,21,1.245,22,2.481,23,1.838,24,0.621,25,2.473,26,2.016,27,3.447,28,1.077,29,2.162,30,2.579,31,2.124,32,1.838,33,2.96,34,2.96,35,2.96,36,1.531,37,2.96,38,0.78,39,1.162,40,1.6,41,1.245,42,1.396,43,1.562,44,1.077,45,2.516,46,1.838,47,1.245,48,1.805,49,1.562,50,1.245,51,0.938,52,1.245,53,1.736,54,1.455,55,1.736,56,1.077,57,1.035,58,2.016,59,1.077,60,1.562,61,1.562,62,1.077,63,1.805,64,1.077,65,1.077,66,1.562,67,1.562,68,1.863,69,1.838,70,1.077,71,1.06,72,1.077,73,1.077,74,0.938,75,1.562,76,1.077,77,1.077,78,1.077,79,1.077,80,1.077,81,1.077,82,0.938,83,1.077,84,1.736,85,1.245,86,1.245,87,1.245,88,1.077,89,1.077,90,1.245,91,1.245,92,1.455,93,1.736,94,2.516,95,1.455,96,1.736]],["title/classes/MyStompService.html",[17,0.518,90,1.642]],["body/classes/MyStompService.html",[2,0.912,3,0.796,4,0.449,6,1.014,7,0.054,16,1.607,17,0.658,18,0.03,19,0.03,20,1.21,21,1.21,22,2.441,23,1.53,24,0.604,25,2.445,26,1.989,27,3.408,28,1.53,30,2.553,31,2.089,32,1.808,33,2.912,34,2.912,35,2.912,36,1.511,37,2.912,38,0.902,39,1.274,40,1.574,41,1.21,42,1.374,43,1.53,44,1.047,45,2.465,46,1.808,47,1.21,48,1.768,49,1.53,50,1.21,51,0.912,52,1.21,53,1.687,54,1.414,55,1.687,56,1.047,57,1.014,58,1.989,59,1.047,60,1.53,61,1.53,62,1.047,63,1.768,64,1.047,65,1.047,66,1.53,67,1.53,68,1.842,69,1.808,70,1.047,71,1.043,72,1.047,73,1.047,74,0.912,75,1.53,76,1.047,77,1.047,78,1.047,79,1.047,80,1.047,81,1.047,82,0.912,83,1.047,84,1.687,85,1.21,86,1.21,87,1.21,88,1.047,89,1.047,90,1.768,91,1.21,92,2.066,93,1.687,94,2.465,95,1.414,96,1.687,97,1.21,98,2.101,99,2.101,100,0.912,101,0.912,102,0.694,103,1.21,104,2.101]],["title/injectables/StompConfig.html",[39,0.82,105,0.71]],["body/injectables/StompConfig.html",[2,0.727,3,0.635,4,0.358,6,0.856,7,0.054,12,0.965,16,0.635,17,0.304,18,0.025,19,0.025,24,0.482,28,2.029,32,1.291,36,1.349,38,0.644,39,0.745,40,1.124,41,1.492,42,0.981,46,2.029,47,1.492,49,1.291,50,1.492,51,1.124,52,1.492,57,1.402,58,2.291,59,1.291,60,1.291,61,1.291,62,1.291,64,1.775,65,1.775,66,2.029,67,2.029,68,1.902,69,2.185,70,1.775,71,1.17,72,1.775,73,1.291,74,1.124,75,1.775,76,1.291,77,1.291,78,1.291,79,1.291,80,1.291,81,1.291,82,1.124,83,1.775,88,2.029,100,1.124,102,1.345,105,0.788,106,1.346,107,1.346,108,2.591,109,1.492,110,2.397,111,1.546,112,3.166,113,1.676,114,2.08,115,2.051,116,1.676,117,2.444,118,2.591,119,2.591,120,1.492,121,2.591,122,2.86,123,3.027,124,1.676,125,2.591,126,1.676,127,2.591,128,1.676,129,1.676,130,1.492,131,2.08,132,1.823,133,1.743,134,1.124,135,2.08,136,2.051,137,1.291,138,2.591,139,1.743,140,2.591,141,2.591,142,2.08,143,2.08]],["title/injectables/StompRPCService.html",[105,0.71,144,1.919]],["body/injectables/StompRPCService.html",[2,0.916,3,0.799,4,0.451,6,1.467,7,0.054,12,1.216,16,0.799,17,0.383,18,0.03,19,0.03,24,0.607,25,1.774,26,1.813,28,1.993,36,1.61,38,1.105,47,1.774,57,1.018,71,0.607,91,1.216,97,1.216,100,1.337,101,1.337,102,1.321,103,1.774,105,0.905,117,2.805,137,1.052,144,2.073,145,2.449,146,1.695,147,4.441,148,3.999,149,3.999,150,4.253,151,2.111,152,3.081,153,3.081,154,4.253,155,2.111,156,2.111,157,2.862,158,3.211,159,3.999,160,2.111,161,2.111,162,2.691,163,1.216,164,2.473,165,1.216,166,2.473,167,1.695,168,1.695,169,2.111,170,2.111,171,2.111,172,2.111,173,2.111,174,1.695,175,2.111,176,2.111,177,2.111,178,2.111,179,2.111,180,2.111,181,3.081,182,2.073,183,3.638,184,2.111,185,2.111,186,2.111,187,3.081,188,2.111,189,2.111,190,1.695,191,1.695,192,2.111,193,2.111,194,2.111,195,2.111,196,2.111,197,2.111]],["title/injectables/StompService.html",[38,0.71,105,0.71]],["body/injectables/StompService.html",[2,1.162,3,1.014,4,0.572,6,1.368,7,0.054,12,1.543,16,1.014,17,0.486,18,0.036,19,0.036,22,1.803,23,2.065,26,1.817,28,1.335,36,1.014,38,0.907,39,1.278,44,1.817,71,1.047,97,2.385,100,1.162,101,1.162,102,0.885,103,1.543,105,1.03,107,2.926,109,2.385,130,1.543,132,2.56,136,2.385,157,2.453,162,2.453,165,2.099,198,2.151,199,2.56,200,1.929,201,3.645,202,3.645,203,2.679,204,3.645,205,2.099,206,2.926,207,2.679,208,2.679,209,2.679,210,1.803,211,2.151,212,2.679,213,1.803,214,2.679,215,2.679,216,2.151,217,2.679,218,2.679,219,2.679,220,2.679,221,2.151,222,1.543,223,2.679,224,2.679,225,2.679]],["title/changelog.html",[226,1.634,227,1.634,228,1.634]],["body/changelog.html",[3,0.906,4,0.511,7,0.041,18,0.033,19,0.033,38,0.595,39,0.688,40,1.038,51,1.038,56,1.68,57,1.289,71,0.688,74,1.038,82,1.462,102,1.113,105,0.595,109,1.941,111,1.462,114,1.921,115,1.378,117,1.378,120,1.378,123,2.626,131,1.921,134,1.693,163,1.378,199,1.378,200,1.462,205,1.378,210,1.61,222,2.247,228,1.61,229,2.393,230,2.393,231,1.921,232,2.393,233,2.393,234,1.921,235,1.61,236,2.393,237,3.4,238,1.921,239,3.132,240,1.921,241,3.37,242,1.921,243,1.921,244,2.393,245,3.584,246,3.37,247,1.945,248,2.393,249,2.393,250,2.706,251,3.37,252,2.393,253,2.393,254,2.268,255,1.921,256,2.706,257,3.4,258,1.921,259,1.61,260,2.393,261,3.37,262,3.37,263,1.61,264,1.921,265,2.393,266,2.393,267,2.393,268,2.393,269,2.393,270,2.393,271,2.393,272,1.921,273,1.61,274,2.393,275,2.626,276,2.393,277,1.921,278,1.61,279,2.393,280,2.268,281,1.61,282,2.268,283,1.61,284,2.393,285,1.921,286,2.393,287,1.378,288,1.921,289,1.921,290,2.393,291,2.393,292,2.393,293,2.393,294,1.921,295,1.378,296,2.393,297,1.921,298,2.393,299,1.921,300,2.393,301,1.921,302,2.706,303,2.393,304,1.921,305,2.393,306,2.393,307,2.393,308,2.393,309,1.921,310,2.393,311,2.393,312,2.393,313,1.921,314,1.378,315,2.393,316,1.921,317,2.393,318,2.393,319,1.61,320,1.921]],["title/coverage.html",[321,3.052]],["body/coverage.html",[4,0.627,7,0.053,17,0.703,18,0.038,19,0.038,20,1.689,21,2.761,23,1.462,38,0.73,39,0.843,42,1.865,43,1.462,48,1.689,49,1.462,68,2.238,90,1.689,102,0.969,105,1.147,106,2.355,134,1.273,144,1.974,145,2.23,146,2.355,198,2.355,321,2.355,322,2.934,323,2.934,324,2.355,325,2.606,326,3.109,327,5.098,328,2.355,329,3.481,330,2.355,331,2.355,332,2.355,333,2.934,334,2.934,335,2.934,336,2.934,337,2.355,338,2.934,339,4.336,340,2.934,341,2.934,342,2.934,343,2.934,344,2.934,345,2.934]],["title/dependencies.html",[247,1.697,346,2.428]],["body/dependencies.html",[7,0.051,18,0.046,19,0.046,163,2.33,164,3.249,165,2.33,247,2.359,347,3.249,348,4.047,349,4.047,350,4.047]],["title/miscellaneous/enumerations.html",[351,0.802,352,2.734]],["body/miscellaneous/enumerations.html",[7,0.046,18,0.046,19,0.046,24,1.132,30,2.269,111,1.71,132,2.269,145,2.269,199,2.269,235,2.651,287,2.269,351,1.302,352,3.163,353,4.659,354,3.163,355,4.659,356,3.94,357,3.163]],["title/miscellaneous/functions.html",[42,1.289,351,0.802]],["body/miscellaneous/functions.html",[7,0.052,18,0.041,19,0.041,21,1.894,24,0.945,38,1.139,42,1.245,43,2.283,48,2.638,92,2.213,95,2.213,100,2.09,101,2.09,103,2.774,329,2.64,330,3.348,331,3.348,332,3.348,337,3.348,351,1.087,358,4.58,359,4.58,360,4.816,361,3.289,362,5.079,363,3.289,364,3.289]],["title/index.html",[24,0.698,226,1.634,227,1.634]],["body/index.html",[4,0.556,6,0.727,7,0.051,14,2.403,17,0.472,18,0.016,19,0.016,23,1.296,25,0.97,26,0.493,30,0.569,31,0.97,32,0.84,36,0.638,38,0.888,39,1.026,40,0.955,44,1.923,46,0.493,51,0.429,52,0.569,56,0.493,57,0.859,58,1.583,59,0.493,60,0.84,61,0.84,62,0.493,63,0.97,64,0.493,65,0.493,66,0.84,67,1.296,68,1.128,69,1.097,70,0.493,71,1.026,72,0.493,73,0.84,74,0.429,75,0.84,76,0.493,77,0.84,78,0.493,79,0.493,80,0.493,81,0.84,82,0.429,83,0.493,85,0.569,86,0.569,87,0.569,88,0.493,89,0.493,91,0.97,97,0.569,101,0.731,105,0.647,109,2.057,111,1.55,115,0.97,117,2.057,120,0.569,122,1.352,123,1.481,130,0.97,132,2.146,133,1.75,134,1.128,135,2.088,136,0.97,137,0.493,139,1.481,157,1.481,162,2.281,163,1.268,165,0.97,166,0.793,167,0.793,168,0.793,182,1.133,190,0.793,191,0.793,199,0.97,200,1.675,205,2.146,206,1.767,210,1.963,211,2.342,213,1.133,216,1.767,221,1.352,222,1.497,228,0.665,231,0.793,234,0.793,235,0.665,237,3.274,238,2.088,239,2.088,240,0.793,242,1.767,243,1.352,245,1.352,247,1.296,250,0.793,254,1.133,255,0.793,256,0.793,257,0.793,259,0.665,263,2.403,264,2.867,273,1.133,275,1.75,277,1.352,278,1.133,280,2.745,281,1.75,282,2.806,283,0.665,285,0.793,287,1.268,288,1.352,289,0.793,295,0.569,299,2.088,302,0.793,309,0.793,314,0.569,316,0.793,319,1.133,320,1.767,347,1.352,357,1.352,365,2.201,366,2.201,367,0.988,368,0.988,369,0.988,370,0.988,371,0.988,372,1.685,373,0.988,374,1.685,375,2.201,376,0.988,377,0.988,378,0.988,379,0.988,380,0.988,381,0.988,382,0.988,383,0.988,384,2.088,385,0.988,386,1.685,387,0.988,388,1.685,389,0.988,390,0.793,391,0.988,392,1.685,393,1.685,394,0.988,395,0.988,396,1.685,397,0.988,398,0.988,399,0.988,400,0.988,401,0.988,402,0.988,403,0.988,404,0.988,405,0.988,406,0.988,407,0.988,408,1.685,409,1.352,410,0.988,411,0.988,412,0.988,413,1.352,414,0.988,415,0.988,416,1.75,417,0.988,418,1.352,419,0.988,420,0.988,421,0.988,422,1.685,423,0.793,424,0.988,425,0.988,426,0.988,427,3.726,428,0.988,429,0.988,430,0.988,431,2.201,432,1.685,433,3.39,434,0.988,435,1.352,436,0.988,437,0.988,438,0.988,439,0.988,440,2.722,441,2.342,442,1.685,443,0.988,444,0.988,445,0.988,446,0.988,447,0.988,448,0.988,449,0.988,450,0.988,451,0.988,452,0.988,453,2.201,454,0.988,455,0.988,456,0.988,457,0.793,458,0.665,459,0.793,460,0.988,461,0.988,462,0.988,463,0.988,464,0.988,465,0.988,466,0.988,467,1.685,468,0.988,469,0.988,470,0.988,471,0.988,472,0.988,473,0.988,474,0.988,475,0.988,476,0.988,477,0.988,478,0.988,479,0.988,480,1.685,481,0.988,482,1.685,483,0.988,484,0.988,485,0.988,486,0.988,487,0.988,488,0.988,489,0.988,490,0.988,491,1.685,492,0.793,493,0.988,494,0.988,495,0.988,496,0.988,497,0.793,498,0.988,499,1.685,500,0.988,501,1.685,502,2.6,503,1.685,504,0.988,505,0.988,506,1.685,507,0.988,508,0.988,509,0.988,510,0.988,511,0.988,512,0.988,513,0.988,514,0.988,515,0.988,516,0.793,517,0.988,518,1.685,519,0.988,520,0.988,521,0.988,522,1.133,523,0.988,524,0.988,525,0.988,526,0.988,527,0.988,528,0.988,529,0.988,530,0.988,531,0.793,532,1.685,533,0.988,534,0.988,535,0.988,536,0.988,537,0.988,538,0.988,539,0.988,540,0.988,541,0.988,542,0.988,543,0.988,544,0.988,545,0.793,546,0.793,547,0.988,548,0.988,549,0.988,550,0.988,551,0.988,552,0.988,553,0.665,554,0.793]],["title/license.html",[226,1.634,227,1.634,553,1.634]],["body/license.html",[4,0.631,7,0.038,14,1.987,18,0.038,19,0.038,54,1.987,111,1.281,134,1.281,158,2.371,200,1.688,294,2.371,301,2.371,319,1.987,384,2.371,457,2.371,458,3.111,459,2.371,545,2.371,546,2.371,553,1.987,554,2.371,555,4.35,556,2.953,557,2.953,558,3.89,559,2.953,560,2.953,561,2.953,562,3.89,563,2.953,564,5.165,565,2.953,566,3.89,567,4.35,568,2.953,569,4.35,570,3.123,571,2.953,572,2.953,573,2.953,574,2.953,575,2.953,576,2.953,577,2.953,578,3.89,579,3.89,580,2.953,581,2.953,582,3.89,583,2.953,584,2.953,585,2.953,586,2.953,587,2.953,588,2.953,589,2.953,590,2.953,591,2.953,592,2.953,593,2.953,594,2.953,595,2.953,596,2.953,597,2.953,598,2.953,599,2.953,600,2.953,601,2.953,602,2.953,603,2.953,604,2.371]],["title/modules.html",[0,1.895]],["body/modules.html",[0,2.093,1,2.825,7,0.047,18,0.047,19,0.047,605,4.199]],["title/overview.html",[606,3.052]],["body/overview.html",[0,2.054,7,0.047,17,0.748,18,0.047,19,0.047,105,1.025,606,3.309,607,4.121,608,4.121,609,4.121]],["title/miscellaneous/typealiases.html",[351,0.802,610,3.405]],["body/miscellaneous/typealiases.html",[7,0.046,18,0.046,19,0.046,24,1.137,57,1.307,102,1.642,115,2.862,145,2.279,351,1.307,354,3.177,611,3.957,612,4.671,613,3.957,614,3.957]],["title/miscellaneous/variables.html",[325,2.291,351,0.802]],["body/miscellaneous/variables.html",[7,0.053,18,0.044,19,0.044,24,1.049,71,1.279,89,1.82,102,1.47,110,3.363,137,2.218,324,2.931,325,2.457,326,4.184,328,2.931,351,1.206,615,3.651,616,3.651,617,4.451,618,3.651]],["title/additional-documentation/sock-js.html",[272,1.697,314,1.217,522,1.422,619,2.114]],["body/additional-documentation/sock-js.html",[6,0.672,7,0.051,10,1.633,16,0.77,17,0.369,18,0.029,19,0.029,31,1.171,32,1.958,36,1.135,39,1.129,40,2.222,41,1.727,42,1.488,43,1.958,44,1.014,46,1.958,49,1.014,50,1.171,51,0.883,56,1.494,57,0.99,58,2.088,59,1.014,60,1.494,61,1.494,62,1.014,63,1.727,64,1.014,65,1.014,66,1.494,67,1.494,68,1.705,69,1.775,70,1.014,71,1.023,72,1.014,73,1.494,74,0.883,75,1.494,76,1.014,77,1.014,78,1.014,79,1.494,80,1.494,81,1.494,82,0.883,83,1.014,85,1.171,86,1.171,87,1.171,88,1.014,89,1.014,100,0.883,101,0.883,110,1.369,111,0.883,120,1.727,130,1.727,133,1.369,136,1.171,137,1.014,142,1.633,143,1.633,174,2.407,182,1.369,200,1.818,205,1.171,213,2.644,222,1.171,254,1.369,258,1.633,259,1.369,263,2.017,273,2.017,275,2.819,278,1.369,280,1.369,281,1.369,282,1.369,283,1.369,287,1.171,295,1.171,304,1.633,390,1.633,413,1.633,416,2.017,423,2.407,435,1.633,440,2.407,441,2.407,458,1.369,492,1.633,497,2.407,516,1.633,531,1.633,570,2.407,620,2.034,621,2.034,622,1.633,623,2.034,624,2.034,625,2.034,626,2.034,627,2.998,628,2.998,629,2.998,630,2.034,631,2.034,632,2.034,633,2.034,634,2.034,635,2.034,636,2.034,637,2.034,638,2.034,639,2.034,640,2.034,641,2.034,642,2.034,643,2.034,644,2.034,645,2.034,646,2.998,647,2.998,648,2.034,649,1.633,650,2.034,651,2.998,652,2.034,653,2.034]],["title/additional-documentation/contributing.html",[314,1.398,522,1.634,654,1.949]],["body/additional-documentation/contributing.html",[4,0.806,7,0.051,18,0.044,19,0.044,134,1.638,139,3.055,200,1.638,247,1.881,295,2.805,297,3.03,313,3.03,409,3.03,416,2.54,418,3.03,604,3.03,622,3.03,649,3.03,654,3.03,655,3.774,656,3.774,657,3.774,658,4.541]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":607,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":609,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":410,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":557,"title":{},"body":{"license.html":{}}}],["2018",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["23/23",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":608,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":347,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.1",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["4.0.7",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":411,"title":{},"body":{"index.html":{}}}],["50",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":389,"title":{},"body":{"index.html":{}}}],["6.0.1",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["6.x.x",{"_index":240,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":467,"title":{},"body":{"index.html":{}}}],["abil",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":599,"title":{},"body":{"license.html":{}}}],["activ",{"_index":445,"title":{},"body":{"index.html":{}}}],["actual",{"_index":375,"title":{},"body":{"index.html":{}}}],["ad",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":419,"title":{},"body":{"index.html":{}}}],["addit",{"_index":522,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":421,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":650,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":653,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":258,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":573,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":377,"title":{},"body":{"index.html":{}}}],["angular",{"_index":237,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":165,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"dependencies.html":{},"index.html":{}}}],["angular4",{"_index":366,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":367,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":368,"title":{},"body":{"index.html":{}}}],["api",{"_index":320,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":288,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":396,"title":{},"body":{"index.html":{}}}],["applic",{"_index":620,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":603,"title":{},"body":{"license.html":{}}}],["around",{"_index":652,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":524,"title":{},"body":{"index.html":{}}}],["associ",{"_index":565,"title":{},"body":{"license.html":{}}}],["assum",{"_index":442,"title":{},"body":{"index.html":{}}}],["astha",{"_index":547,"title":{},"body":{"index.html":{}}}],["async",{"_index":478,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":217,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":592,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":452,"title":{},"body":{"index.html":{}}}],["base",{"_index":470,"title":{},"body":{"index.html":{}}}],["be",{"_index":391,"title":{},"body":{"index.html":{}}}],["beat",{"_index":641,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":504,"title":{},"body":{"index.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":465,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":392,"title":{},"body":{"index.html":{}}}],["branch",{"_index":388,"title":{},"body":{"index.html":{}}}],["break",{"_index":381,"title":{},"body":{"index.html":{}}}],["broken",{"_index":403,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":605,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":556,"title":{},"body":{"license.html":{}}}],["call",{"_index":433,"title":{},"body":{"index.html":{}}}],["callback",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":228,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":544,"title":{},"body":{"index.html":{}}}],["charg",{"_index":561,"title":{},"body":{"license.html":{}}}],["check",{"_index":622,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":595,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cleanup",{"_index":196,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["cli",{"_index":408,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":631,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":441,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":527,"title":{},"body":{"index.html":{}}}],["come",{"_index":488,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":644,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":278,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":638,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":255,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":466,"title":{},"body":{"index.html":{}}}],["condit",{"_index":577,"title":{},"body":{"license.html":{}}}],["config",{"_index":206,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":486,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":512,"title":{},"body":{"index.html":{}}}],["const",{"_index":182,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":202,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["constructor(stompservic",{"_index":151,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["consum",{"_index":489,"title":{},"body":{"index.html":{}}}],["contract",{"_index":600,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":654,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":539,"title":{},"body":{"index.html":{}}}],["control",{"_index":521,"title":{},"body":{"index.html":{}}}],["convert",{"_index":499,"title":{},"body":{"index.html":{}}}],["copi",{"_index":458,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":555,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["correl",{"_index":194,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["correlationid",{"_index":183,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["correspond",{"_index":507,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":321,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":632,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["critic",{"_index":395,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":535,"title":{},"body":{"index.html":{}}}],["current",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":596,"title":{},"body":{"license.html":{}}}],["deal",{"_index":566,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":548,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":545,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultmessagessubscript",{"_index":181,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":197,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":277,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":427,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":453,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":283,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":430,"title":{},"body":{"index.html":{}}}],["depend",{"_index":247,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":649,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":543,"title":{},"body":{"index.html":{}}}],["directli",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":235,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":294,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":657,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":437,"title":{},"body":{"index.html":{}}}],["don't",{"_index":634,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":637,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":506,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":352,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":215,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":514,"title":{},"body":{"index.html":{}}}],["etc",{"_index":476,"title":{},"body":{"index.html":{}}}],["even",{"_index":531,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":591,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":551,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":398,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":584,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":379,"title":{},"body":{"index.html":{}}}],["fail",{"_index":647,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":456,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":431,"title":{},"body":{"index.html":{}}}],["few",{"_index":523,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":168,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["find",{"_index":402,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":541,"title":{},"body":{"index.html":{}}}],["first",{"_index":169,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["fit",{"_index":587,"title":{},"body":{"license.html":{}}}],["fix",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":384,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":625,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":383,"title":{},"body":{"index.html":{}}}],["frame",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":457,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":636,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":576,"title":{},"body":{"license.html":{}}}],["futur",{"_index":304,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":409,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":226,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":313,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["go",{"_index":382,"title":{},"body":{"index.html":{}}}],["grant",{"_index":560,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":648,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":209,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":372,"title":{},"body":{"index.html":{}}}],["hash",{"_index":455,"title":{},"body":{"index.html":{}}}],["head",{"_index":406,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers.t",{"_index":612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["heart",{"_index":640,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":559,"title":{},"body":{"license.html":{}}}],["holder",{"_index":593,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":432,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":450,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":623,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":280,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":263,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":471,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":446,"title":{},"body":{"index.html":{}}}],["id",{"_index":187,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["identifi",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":639,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":585,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":569,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":405,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":624,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":532,"title":{},"body":{"index.html":{}}}],["initi",{"_index":222,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":526,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":451,"title":{},"body":{"index.html":{}}}],["instal",{"_index":416,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":655,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":259,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":513,"title":{},"body":{"index.html":{}}}],["intern",{"_index":492,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":552,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":414,"title":{},"body":{"index.html":{}}}],["issu",{"_index":234,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["jimi",{"_index":542,"title":{},"body":{"index.html":{}}}],["js",{"_index":272,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":264,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":627,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":438,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":299,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":281,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/ng5",{"_index":429,"title":{},"body":{"index.html":{}}}],["js/ng6",{"_index":428,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":422,"title":{},"body":{"index.html":{}}}],["json",{"_index":498,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":500,"title":{},"body":{"index.html":{}}}],["jump",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":583,"title":{},"body":{"license.html":{}}}],["know",{"_index":173,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["kumar",{"_index":546,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":597,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":594,"title":{},"body":{"license.html":{}}}],["librari",{"_index":213,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":553,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":570,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":404,"title":{},"body":{"index.html":{}}}],["lint",{"_index":658,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":454,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":462,"title":{},"body":{"index.html":{}}}],["main",{"_index":302,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":393,"title":{},"body":{"index.html":{}}}],["make",{"_index":285,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manag",{"_index":386,"title":{},"body":{"index.html":{}}}],["mani",{"_index":642,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":221,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":475,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":509,"title":{},"body":{"index.html":{}}}],["master",{"_index":387,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":643,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":586,"title":{},"body":{"license.html":{}}}],["merg",{"_index":301,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":162,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":496,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":484,"title":{},"body":{"index.html":{}}}],["message.headers['correl",{"_index":186,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["messagesobserv",{"_index":148,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"index.html":{}}}],["michel",{"_index":549,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":351,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":554,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":459,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":536,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":487,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":373,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":440,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":590,"title":{},"body":{"license.html":{}}}],["note",{"_index":497,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":578,"title":{},"body":{"license.html":{}}}],["now",{"_index":250,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":295,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":157,"title":{},"body":{"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["observable.cr",{"_index":179,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["obtain",{"_index":563,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":646,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":394,"title":{},"body":{"index.html":{}}}],["offer",{"_index":397,"title":{},"body":{"index.html":{}}}],["old",{"_index":621,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":174,"title":{},"body":{"injectables/StompRPCService.html":{},"additional-documentation/sock-js.html":{}}}],["onc",{"_index":537,"title":{},"body":{"index.html":{}}}],["oper",{"_index":474,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":602,"title":{},"body":{"license.html":{}}}],["out",{"_index":604,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":606,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":346,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":314,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":588,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["payload",{"_index":154,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["payload).pipe(first",{"_index":176,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["peer",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":505,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":558,"title":{},"body":{"license.html":{}}}],["permit",{"_index":575,"title":{},"body":{"license.html":{}}}],["person",{"_index":562,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":479,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":444,"title":{},"body":{"index.html":{}}}],["portion",{"_index":581,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":287,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":538,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":439,"title":{},"body":{"index.html":{}}}],["privat",{"_index":177,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["process",{"_index":520,"title":{},"body":{"index.html":{}}}],["product",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":309,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":550,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{}}}],["protect",{"_index":147,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":319,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":493,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":589,"title":{},"body":{"license.html":{}}}],["queu",{"_index":533,"title":{},"body":{"index.html":{}}}],["queue",{"_index":211,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["queue/${this.replyqueu",{"_index":193,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["quit",{"_index":378,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":208,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":401,"title":{},"body":{"index.html":{}}}],["read",{"_index":435,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":519,"title":{},"body":{"index.html":{}}}],["readm",{"_index":204,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":371,"title":{},"body":{"index.html":{}}}],["reap",{"_index":464,"title":{},"body":{"index.html":{}}}],["recent",{"_index":400,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":273,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["repli",{"_index":159,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["replyqueu",{"_index":149,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["report",{"_index":412,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":191,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["resourc",{"_index":460,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":568,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":571,"title":{},"body":{"license.html":{}}}],["rpc",{"_index":150,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc(serviceendpoint",{"_index":153,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.t",{"_index":146,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:10",{"_index":160,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:12",{"_index":152,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpc.service.ts:18",{"_index":155,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserv",{"_index":180,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["rpcobserver.next(messag",{"_index":189,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":167,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["rxjs/oper",{"_index":170,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["sam",{"_index":540,"title":{},"body":{"index.html":{}}}],["same",{"_index":374,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":205,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":630,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":417,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":385,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":574,"title":{},"body":{"license.html":{}}}],["semant",{"_index":468,"title":{},"body":{"index.html":{}}}],["send",{"_index":190,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":199,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpoint",{"_index":156,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":449,"title":{},"body":{"index.html":{}}}],["shall",{"_index":579,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":619,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":564,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":399,"title":{},"body":{"index.html":{}}}],["specif",{"_index":216,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":461,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":354,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":629,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":145,"title":{},"body":{"injectables/StompRPCService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":198,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":203,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":227,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":502,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":207,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":447,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":212,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.servic",{"_index":161,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["stomp/ng2",{"_index":365,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":201,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":163,"title":{},"body":{"injectables/StompRPCService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":490,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":480,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":483,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":282,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":436,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":407,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":426,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":425,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":494,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":473,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":424,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":420,"title":{},"body":{"index.html":{}}}],["stomprpcservic",{"_index":144,"title":{"injectables/StompRPCService.html":{}},"body":{"injectables/StompRPCService.html":{},"coverage.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":503,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":337,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":510,"title":{},"body":{"index.html":{}}}],["stream",{"_index":218,"title":{},"body":{"injectables/StompService.html":{}}}],["stream(serviceendpoint",{"_index":178,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["streamlin",{"_index":626,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":316,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":369,"title":{},"body":{"index.html":{}}}],["sub",{"_index":482,"title":{},"body":{"index.html":{}}}],["subject",{"_index":158,"title":{},"body":{"injectables/StompRPCService.html":{},"license.html":{}}}],["sublicens",{"_index":572,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":210,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((messag",{"_index":188,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["subscribe((msg_bodi",{"_index":485,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":511,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":472,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":166,"title":{},"body":{"injectables/StompRPCService.html":{},"index.html":{}}}],["substanti",{"_index":580,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":376,"title":{},"body":{"index.html":{}}}],["success",{"_index":534,"title":{},"body":{"index.html":{}}}],["super",{"_index":223,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":275,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":254,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":517,"title":{},"body":{"index.html":{}}}],["temp",{"_index":192,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["templat",{"_index":477,"title":{},"body":{"index.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":529,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":515,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":530,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":495,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":508,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":481,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":224,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":528,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":225,"title":{},"body":{"injectables/StompService.html":{}}}],["this.messagesobserv",{"_index":171,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.messagesobservable.pipe(filter((messag",{"_index":185,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.defaultmessagesobserv",{"_index":172,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stompservice.publish(serviceendpoint",{"_index":195,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["this.stream(serviceendpoint",{"_index":175,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["those",{"_index":645,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":633,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":518,"title":{},"body":{"index.html":{}}}],["time",{"_index":390,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["tort",{"_index":601,"title":{},"body":{"license.html":{}}}],["travi",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":357,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":297,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":610,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":256,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":380,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":651,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":491,"title":{},"body":{"index.html":{}}}],["updat",{"_index":245,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":200,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":423,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":434,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":463,"title":{},"body":{"index.html":{}}}],["usual",{"_index":516,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["uuid",{"_index":164,"title":{},"body":{"injectables/StompRPCService.html":{},"dependencies.html":{}}}],["uuid.uuid",{"_index":184,"title":{},"body":{"injectables/StompRPCService.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRPCService.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":469,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":325,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":214,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":448,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":220,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":582,"title":{},"body":{"license.html":{}}}],["watch",{"_index":501,"title":{},"body":{"index.html":{}}}],["way",{"_index":289,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":443,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":628,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":415,"title":{},"body":{"index.html":{}}}],["whether",{"_index":598,"title":{},"body":{"license.html":{}}}],["wire",{"_index":219,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":567,"title":{},"body":{"license.html":{}}}],["work",{"_index":413,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":635,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":370,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":418,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":656,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["yourclass",{"_index":525,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRPCService.html":{"url":"injectables/StompRPCService.html","title":"injectable - StompRPCService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRPCService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-rpc.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                messagesObservable\n                            \n                            \n                                    Protected\n                                replyQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stompService: StompService)\n                    \n                \n                        \n                            \n                                Defined in src/stomp-rpc.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    stompService\n                                                  \n                                                        \n                                                                    StompService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(serviceEndPoint: string, payload: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceEndPoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            messagesObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messagesObservable:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            replyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rpc-replies'\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp-rpc.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StompService } from './stomp.service';\nimport { Message } from '@stomp/stompjs';\nimport { UUID } from 'angular2-uuid';\nimport { Observable, Observer, Subject, Subscription } from \"rxjs\";\nimport { filter, first } from \"rxjs/operators\";\n\n@Injectable()\nexport class StompRPCService {\n  protected replyQueue = 'rpc-replies';\n\n  protected messagesObservable: Subject;\n\n  constructor(private stompService: StompService) {\n    this.messagesObservable = this.stompService.defaultMessagesObservable;\n  }\n\n  public rpc(serviceEndPoint: string, payload: string): Observable {\n    // We know there will be only one message in reply\n    return this.stream(serviceEndPoint, payload).pipe(first());\n  }\n\n  private stream(serviceEndPoint: string, payload: string) {\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this.messagesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        const headers = {\n          'reply-to': `/temp-queue/${this.replyQueue}`,\n          'correlation-id': correlationId\n        };\n\n        this.stompService.publish(serviceEndPoint, payload, headers);\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n4.0.1 & 6.0.1 2018-07-20\n\nFix issue with disconnect #77\n\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                StompRPCService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.7\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            angular2-uuid : ^1.1.1\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nGeneral Demos (using Angular CLI)\nhttps://github.com/stomp-js/ng6-stompjs-demo\nhttps://github.com/stomp-js/ng5-stompjs-demo\nhttps://github.com/stomp-js/ng4-stompjs-demo\nhttps://github.com/stomp-js/ng2-stompjs-demo \n\n\nhttps://github.com/stomp-js/ng2-stompjs-demo also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
